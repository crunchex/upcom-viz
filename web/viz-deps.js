!function(undefined){var isArray=Array.isArray?Array.isArray:function _isArray(obj){return Object.prototype.toString.call(obj)==="[object Array]"};var defaultMaxListeners=10;function init(){this._events={};if(this._conf){configure.call(this,this._conf)}}function configure(conf){if(conf){this._conf=conf;conf.delimiter&&(this.delimiter=conf.delimiter);conf.maxListeners&&(this._events.maxListeners=conf.maxListeners);conf.wildcard&&(this.wildcard=conf.wildcard);conf.newListener&&(this.newListener=conf.newListener);if(this.wildcard){this.listenerTree={}}}}function EventEmitter(conf){this._events={};this.newListener=false;configure.call(this,conf)}function searchListenerTree(handlers,type,tree,i){if(!tree){return[]}var listeners=[],leaf,len,branch,xTree,xxTree,isolatedBranch,endReached,typeLength=type.length,currentType=type[i],nextType=type[i+1];if(i===typeLength&&tree._listeners){if(typeof tree._listeners==="function"){handlers&&handlers.push(tree._listeners);return[tree]}else{for(leaf=0,len=tree._listeners.length;leaf<len;leaf++){handlers&&handlers.push(tree._listeners[leaf])}return[tree]}}if(currentType==="*"||currentType==="**"||tree[currentType]){if(currentType==="*"){for(branch in tree){if(branch!=="_listeners"&&tree.hasOwnProperty(branch)){listeners=listeners.concat(searchListenerTree(handlers,type,tree[branch],i+1))}}return listeners}else if(currentType==="**"){endReached=i+1===typeLength||i+2===typeLength&&nextType==="*";if(endReached&&tree._listeners){listeners=listeners.concat(searchListenerTree(handlers,type,tree,typeLength))}for(branch in tree){if(branch!=="_listeners"&&tree.hasOwnProperty(branch)){if(branch==="*"||branch==="**"){if(tree[branch]._listeners&&!endReached){listeners=listeners.concat(searchListenerTree(handlers,type,tree[branch],typeLength))}listeners=listeners.concat(searchListenerTree(handlers,type,tree[branch],i))}else if(branch===nextType){listeners=listeners.concat(searchListenerTree(handlers,type,tree[branch],i+2))}else{listeners=listeners.concat(searchListenerTree(handlers,type,tree[branch],i))}}}return listeners}listeners=listeners.concat(searchListenerTree(handlers,type,tree[currentType],i+1))}xTree=tree["*"];if(xTree){searchListenerTree(handlers,type,xTree,i+1)}xxTree=tree["**"];if(xxTree){if(i<typeLength){if(xxTree._listeners){searchListenerTree(handlers,type,xxTree,typeLength)}for(branch in xxTree){if(branch!=="_listeners"&&xxTree.hasOwnProperty(branch)){if(branch===nextType){searchListenerTree(handlers,type,xxTree[branch],i+2)}else if(branch===currentType){searchListenerTree(handlers,type,xxTree[branch],i+1)}else{isolatedBranch={};isolatedBranch[branch]=xxTree[branch];searchListenerTree(handlers,type,{"**":isolatedBranch},i+1)}}}}else if(xxTree._listeners){searchListenerTree(handlers,type,xxTree,typeLength)}else if(xxTree["*"]&&xxTree["*"]._listeners){searchListenerTree(handlers,type,xxTree["*"],typeLength)}}return listeners}function growListenerTree(type,listener){type=typeof type==="string"?type.split(this.delimiter):type.slice();for(var i=0,len=type.length;i+1<len;i++){if(type[i]==="**"&&type[i+1]==="**"){return}}var tree=this.listenerTree;var name=type.shift();while(name){if(!tree[name]){tree[name]={}}tree=tree[name];if(type.length===0){if(!tree._listeners){tree._listeners=listener}else if(typeof tree._listeners==="function"){tree._listeners=[tree._listeners,listener]}else if(isArray(tree._listeners)){tree._listeners.push(listener);if(!tree._listeners.warned){var m=defaultMaxListeners;if(typeof this._events.maxListeners!=="undefined"){m=this._events.maxListeners}if(m>0&&tree._listeners.length>m){tree._listeners.warned=true;console.error("(node) warning: possible EventEmitter memory "+"leak detected. %d listeners added. "+"Use emitter.setMaxListeners() to increase limit.",tree._listeners.length);console.trace()}}}return true}name=type.shift()}return true}EventEmitter.prototype.delimiter=".";EventEmitter.prototype.setMaxListeners=function(n){this._events||init.call(this);this._events.maxListeners=n;if(!this._conf)this._conf={};this._conf.maxListeners=n};EventEmitter.prototype.event="";EventEmitter.prototype.once=function(event,fn){this.many(event,1,fn);return this};EventEmitter.prototype.many=function(event,ttl,fn){var self=this;if(typeof fn!=="function"){throw new Error("many only accepts instances of Function")}function listener(){if(--ttl===0){self.off(event,listener)}fn.apply(this,arguments)}listener._origin=fn;this.on(event,listener);return self};EventEmitter.prototype.emit=function(){this._events||init.call(this);var type=arguments[0];if(type==="newListener"&&!this.newListener){if(!this._events.newListener){return false}}if(this._all){var l=arguments.length;var args=new Array(l-1);for(var i=1;i<l;i++)args[i-1]=arguments[i];for(i=0,l=this._all.length;i<l;i++){this.event=type;this._all[i].apply(this,args)}}if(type==="error"){if(!this._all&&!this._events.error&&!(this.wildcard&&this.listenerTree.error)){if(arguments[1]instanceof Error){throw arguments[1]}else{throw new Error("Uncaught, unspecified 'error' event.")}return false}}var handler;if(this.wildcard){handler=[];var ns=typeof type==="string"?type.split(this.delimiter):type.slice();searchListenerTree.call(this,handler,ns,this.listenerTree,0)}else{handler=this._events[type]}if(typeof handler==="function"){this.event=type;if(arguments.length===1){handler.call(this)}else if(arguments.length>1)switch(arguments.length){case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;default:var l=arguments.length;var args=new Array(l-1);for(var i=1;i<l;i++)args[i-1]=arguments[i];handler.apply(this,args)}return true}else if(handler){var l=arguments.length;var args=new Array(l-1);for(var i=1;i<l;i++)args[i-1]=arguments[i];var listeners=handler.slice();for(var i=0,l=listeners.length;i<l;i++){this.event=type;listeners[i].apply(this,args)}return listeners.length>0||!!this._all}else{return!!this._all}};EventEmitter.prototype.on=function(type,listener){if(typeof type==="function"){this.onAny(type);return this}if(typeof listener!=="function"){throw new Error("on only accepts instances of Function")}this._events||init.call(this);this.emit("newListener",type,listener);if(this.wildcard){growListenerTree.call(this,type,listener);return this}if(!this._events[type]){this._events[type]=listener}else if(typeof this._events[type]==="function"){this._events[type]=[this._events[type],listener]}else if(isArray(this._events[type])){this._events[type].push(listener);if(!this._events[type].warned){var m=defaultMaxListeners;if(typeof this._events.maxListeners!=="undefined"){m=this._events.maxListeners}if(m>0&&this._events[type].length>m){this._events[type].warned=true;console.error("(node) warning: possible EventEmitter memory "+"leak detected. %d listeners added. "+"Use emitter.setMaxListeners() to increase limit.",this._events[type].length);console.trace()}}}return this};EventEmitter.prototype.onAny=function(fn){if(typeof fn!=="function"){throw new Error("onAny only accepts instances of Function")}if(!this._all){this._all=[]}this._all.push(fn);return this};EventEmitter.prototype.addListener=EventEmitter.prototype.on;EventEmitter.prototype.off=function(type,listener){if(typeof listener!=="function"){throw new Error("removeListener only takes instances of Function")}var handlers,leafs=[];if(this.wildcard){var ns=typeof type==="string"?type.split(this.delimiter):type.slice();leafs=searchListenerTree.call(this,null,ns,this.listenerTree,0)}else{if(!this._events[type])return this;handlers=this._events[type];leafs.push({_listeners:handlers})}for(var iLeaf=0;iLeaf<leafs.length;iLeaf++){var leaf=leafs[iLeaf];handlers=leaf._listeners;if(isArray(handlers)){var position=-1;for(var i=0,length=handlers.length;i<length;i++){if(handlers[i]===listener||handlers[i].listener&&handlers[i].listener===listener||handlers[i]._origin&&handlers[i]._origin===listener){position=i;break}}if(position<0){continue}if(this.wildcard){leaf._listeners.splice(position,1)}else{this._events[type].splice(position,1)}if(handlers.length===0){if(this.wildcard){delete leaf._listeners}else{delete this._events[type]}}return this}else if(handlers===listener||handlers.listener&&handlers.listener===listener||handlers._origin&&handlers._origin===listener){if(this.wildcard){delete leaf._listeners}else{delete this._events[type]}}}return this};EventEmitter.prototype.offAny=function(fn){var i=0,l=0,fns;if(fn&&this._all&&this._all.length>0){fns=this._all;for(i=0,l=fns.length;i<l;i++){if(fn===fns[i]){fns.splice(i,1);return this}}}else{this._all=[]}return this};EventEmitter.prototype.removeListener=EventEmitter.prototype.off;EventEmitter.prototype.removeAllListeners=function(type){if(arguments.length===0){!this._events||init.call(this);return this}if(this.wildcard){var ns=typeof type==="string"?type.split(this.delimiter):type.slice();var leafs=searchListenerTree.call(this,null,ns,this.listenerTree,0);for(var iLeaf=0;iLeaf<leafs.length;iLeaf++){var leaf=leafs[iLeaf];leaf._listeners=null}}else{if(!this._events[type])return this;this._events[type]=null}return this};EventEmitter.prototype.listeners=function(type){if(this.wildcard){var handlers=[];var ns=typeof type==="string"?type.split(this.delimiter):type.slice();searchListenerTree.call(this,handlers,ns,this.listenerTree,0);return handlers}this._events||init.call(this);if(!this._events[type])this._events[type]=[];if(!isArray(this._events[type])){this._events[type]=[this._events[type]]}return this._events[type]};EventEmitter.prototype.listenersAny=function(){if(this._all){return this._all}else{return[]}};if(typeof define==="function"&&define.amd){define(function(){return EventEmitter})}else if(typeof exports==="object"){exports.EventEmitter2=EventEmitter}else{window.EventEmitter2=EventEmitter}}();var THREE=THREE||{REVISION:"61"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(obj,source){if(Object.keys){var keys=Object.keys(source);for(var i=0,il=keys.length;i<il;i++){var prop=keys[i];Object.defineProperty(obj,prop,Object.getOwnPropertyDescriptor(source,prop))}}else{var safeHasOwnProperty={}.hasOwnProperty;for(var prop in source){if(safeHasOwnProperty.call(source,prop)){obj[prop]=source[prop]}}}return obj};(function(){var lastTime=0;var vendors=["ms","moz","webkit","o"];for(var x=0;x<vendors.length&&!self.requestAnimationFrame;++x){self.requestAnimationFrame=self[vendors[x]+"RequestAnimationFrame"];self.cancelAnimationFrame=self[vendors[x]+"CancelAnimationFrame"]||self[vendors[x]+"CancelRequestAnimationFrame"]}if(self.requestAnimationFrame===undefined&&self["setTimeout"]!==undefined){self.requestAnimationFrame=function(callback){var currTime=Date.now(),timeToCall=Math.max(0,16-(currTime-lastTime));var id=self.setTimeout(function(){callback(currTime+timeToCall)},timeToCall);lastTime=currTime+timeToCall;return id}}if(self.cancelAnimationFrame===undefined&&self["clearTimeout"]!==undefined){self.cancelAnimationFrame=function(id){self.clearTimeout(id)}}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1e3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(value){if(value!==undefined)this.set(value);return this};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(value){if(value instanceof THREE.Color){this.copy(value)}else if(typeof value==="number"){this.setHex(value)}else if(typeof value==="string"){this.setStyle(value)}return this},setHex:function(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this},setRGB:function(r,g,b){this.r=r;this.g=g;this.b=b;return this},setHSL:function(h,s,l){if(s===0){this.r=this.g=this.b=l}else{var hue2rgb=function(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p};var p=l<=.5?l*(1+s):l+s-l*s;var q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3)}return this},setStyle:function(style){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(style)){var color=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(style);this.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;return this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(style)){var color=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(style);this.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;return this}if(/^\#([0-9a-f]{6})$/i.test(style)){var color=/^\#([0-9a-f]{6})$/i.exec(style);this.setHex(parseInt(color[1],16));return this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(style)){var color=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(style);this.setHex(parseInt(color[1]+color[1]+color[2]+color[2]+color[3]+color[3],16));return this}if(/^(\w+)$/i.test(style)){this.setHex(THREE.ColorKeywords[style]);return this}},copy:function(color){this.r=color.r;this.g=color.g;this.b=color.b;return this},copyGammaToLinear:function(color){this.r=color.r*color.r;this.g=color.g*color.g;this.b=color.b*color.b;return this},copyLinearToGamma:function(color){this.r=Math.sqrt(color.r);this.g=Math.sqrt(color.g);this.b=Math.sqrt(color.b);return this},convertGammaToLinear:function(){var r=this.r,g=this.g,b=this.b;this.r=r*r;this.g=g*g;this.b=b*b;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var hsl={h:0,s:0,l:0};return function(){var r=this.r,g=this.g,b=this.b;var max=Math.max(r,g,b);var min=Math.min(r,g,b);var hue,saturation;var lightness=(min+max)/2;if(min===max){hue=0;saturation=0}else{var delta=max-min;saturation=lightness<=.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break}hue/=6}hsl.h=hue;hsl.s=saturation;hsl.l=lightness;return hsl}}(),getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(h,s,l){var hsl=this.getHSL();hsl.h+=h;hsl.s+=s;hsl.l+=l;this.setHSL(hsl.h,hsl.s,hsl.l);return this},add:function(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this},addColors:function(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this},addScalar:function(s){this.r+=s;this.g+=s;this.b+=s;return this},multiply:function(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this},multiplyScalar:function(s){this.r*=s;this.g*=s;this.b*=s;return this},lerp:function(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this},equals:function(c){return c.r===this.r&&c.g===this.g&&c.b===this.b},fromArray:function(array){this.r=array[0];this.g=array[1];this.b=array[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(x,y,z,w){this._x=x||0;this._y=y||0;this._z=z||0;this._w=w!==undefined?w:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:undefined,_updateEuler:function(callback){if(this._euler!==undefined){this._euler.setFromQuaternion(this,undefined,false)}},get x(){return this._x},set x(value){this._x=value;this._updateEuler()},get y(){return this._y},set y(value){this._y=value;this._updateEuler()},get z(){return this._z},set z(value){this._z=value;this._updateEuler()},get w(){return this._w},set w(value){this._w=value;this._updateEuler()},set:function(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._updateEuler();return this},copy:function(quaternion){this._x=quaternion._x;this._y=quaternion._y;this._z=quaternion._z;this._w=quaternion._w;this._updateEuler();return this},setFromEuler:function(euler,update){if(euler instanceof THREE.Euler===false){throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.")}var c1=Math.cos(euler._x/2);var c2=Math.cos(euler._y/2);var c3=Math.cos(euler._z/2);var s1=Math.sin(euler._x/2);var s2=Math.sin(euler._y/2);var s3=Math.sin(euler._z/2);if(euler.order==="XYZ"){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3}else if(euler.order==="YXZ"){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3}else if(euler.order==="ZXY"){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3}else if(euler.order==="ZYX"){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3}else if(euler.order==="YZX"){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3}else if(euler.order==="XZY"){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3}if(update!==false)this._updateEuler();return this},setFromAxisAngle:function(axis,angle){var halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._updateEuler();return this},setFromRotationMatrix:function(m){var te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33,s;if(trace>0){s=.5/Math.sqrt(trace+1);this._w=.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s}else if(m11>m22&&m11>m33){s=2*Math.sqrt(1+m11-m22-m33);this._w=(m32-m23)/s;this._x=.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s}else if(m22>m33){s=2*Math.sqrt(1+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=.25*s;this._z=(m23+m32)/s}else{s=2*Math.sqrt(1+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=.25*s}this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l}return this},multiply:function(q,p){if(p!==undefined){console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(q,p)}return this.multiplyQuaternions(this,q)},multiplyQuaternions:function(a,b){var qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;var qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._updateEuler();return this},multiplyVector3:function(vector){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return vector.applyQuaternion(this)},slerp:function(qb,t){var x=this._x,y=this._y,z=this._z,w=this._w;var cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta}else{this.copy(qb)}if(cosHalfTheta>=1){this._w=w;this._x=x;this._y=y;this._z=z;return this}var halfTheta=Math.acos(cosHalfTheta);var sinHalfTheta=Math.sqrt(1-cosHalfTheta*cosHalfTheta);if(Math.abs(sinHalfTheta)<.001){this._w=.5*(w+this._w);this._x=.5*(x+this._x);this._y=.5*(y+this._y);this._z=.5*(z+this._z);return this}var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._updateEuler();return this},equals:function(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w},fromArray:function(array){this._x=array[0];this._y=array[1];this._z=array[2];this._w=array[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t)};THREE.Vector2=function(x,y){this.x=x||0;this.y=y||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(x,y){this.x=x;this.y=y;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+index)}},copy:function(v){this.x=v.x;this.y=v.y;return this},add:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(v,w)}this.x+=v.x;this.y+=v.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(s){this.x+=s;this.y+=s;return this},sub:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(v,w)}this.x-=v.x;this.y-=v.y;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(s){this.x*=s;this.y*=s;return this},divideScalar:function(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar}else{this.x=0;this.y=0}return this},min:function(v){if(this.x>v.x){this.x=v.x}if(this.y>v.y){this.y=v.y}return this},max:function(v){if(this.x<v.x){this.x=v.x}if(this.y<v.y){this.y=v.y}return this},clamp:function(min,max){if(this.x<min.x){this.x=min.x}else if(this.x>max.x){this.x=max.x}if(this.y<min.y){this.y=min.y}else if(this.y>max.y){this.y=max.y}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy},setLength:function(l){var oldLength=this.length();if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength)}return this},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this},equals:function(v){return v.x===this.x&&v.y===this.y},fromArray:function(array){this.x=array[0];this.y=array[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(x,y,z){this.x=x;this.y=y;this.z=z;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setZ:function(z){this.z=z;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+index)}},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;return this},add:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(v,w)}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(v,w)}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(v,w)}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyMatrix3:function(m){var x=this.x;var y=this.y;var z=this.z;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12];this.y=e[1]*x+e[5]*y+e[9]*z+e[13];this.z=e[2]*x+e[6]*y+e[10]*z+e[14];return this},applyProjection:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;var d=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*d;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*d;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*d;return this},applyQuaternion:function(q){var x=this.x;var y=this.y;var z=this.z;var qx=q.x;var qy=q.y;var qz=q.z;var qw=q.w;var ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;this.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this},transformDirection:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;this.normalize();return this},divide:function(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this},divideScalar:function(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar;this.z*=invScalar}else{this.x=0;this.y=0;this.z=0}return this},min:function(v){if(this.x>v.x){this.x=v.x}if(this.y>v.y){this.y=v.y}if(this.z>v.z){this.z=v.z}return this},max:function(v){if(this.x<v.x){this.x=v.x}if(this.y<v.y){this.y=v.y}if(this.z<v.z){this.z=v.z}return this},clamp:function(min,max){if(this.x<min.x){this.x=min.x}else if(this.x>max.x){this.x=max.x}if(this.y<min.y){this.y=min.y}else if(this.y>max.y){this.y=max.y}if(this.z<min.z){this.z=min.z}else if(this.z>max.z){this.z=max.z}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(l){var oldLength=this.length();
if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength)}return this},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this},cross:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(v,w)}var x=this.x,y=this.y,z=this.z;this.x=y*v.z-z*v.y;this.y=z*v.x-x*v.z;this.z=x*v.y-y*v.x;return this},crossVectors:function(a,b){var ax=a.x,ay=a.y,az=a.z;var bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this},angleTo:function(v){var theta=this.dot(v)/(this.length()*v.length());return Math.acos(THREE.Math.clamp(theta,-1,1))},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x;var dy=this.y-v.y;var dz=this.z-v.z;return dx*dx+dy*dy+dz*dz},setEulerFromRotationMatrix:function(m,order){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(q,order){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(m){this.x=m.elements[12];this.y=m.elements[13];this.z=m.elements[14];return this},getScaleFromMatrix:function(m){var sx=this.set(m.elements[0],m.elements[1],m.elements[2]).length();var sy=this.set(m.elements[4],m.elements[5],m.elements[6]).length();var sz=this.set(m.elements[8],m.elements[9],m.elements[10]).length();this.x=sx;this.y=sy;this.z=sz;return this},getColumnFromMatrix:function(index,matrix){var offset=index*4;var me=matrix.elements;this.x=me[offset];this.y=me[offset+1];this.z=me[offset+2];return this},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z},fromArray:function(array){this.x=array[0];this.y=array[1];this.z=array[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var quaternion=new THREE.Quaternion;return function(euler){if(euler instanceof THREE.Euler===false){console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.")}this.applyQuaternion(quaternion.setFromEuler(euler));return this}}(),applyAxisAngle:function(){var quaternion=new THREE.Quaternion;return function(axis,angle){this.applyQuaternion(quaternion.setFromAxisAngle(axis,angle));return this}}(),projectOnVector:function(){var v1=new THREE.Vector3;return function(vector){v1.copy(vector).normalize();var d=this.dot(v1);return this.copy(v1).multiplyScalar(d)}}(),projectOnPlane:function(){var v1=new THREE.Vector3;return function(planeNormal){v1.copy(this).projectOnVector(planeNormal);return this.sub(v1)}}(),reflect:function(){var v1=new THREE.Vector3;return function(vector){v1.copy(this).projectOnVector(vector).multiplyScalar(2);return this.subVectors(v1,this)}}()});THREE.Vector4=function(x,y,z,w){this.x=x||0;this.y=y||0;this.z=z||0;this.w=w!==undefined?w:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setZ:function(z){this.z=z;return this},setW:function(w){this.w=w;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+index)}},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this},add:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(v,w)}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(v,w)}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this},applyMatrix4:function(m){var x=this.x;var y=this.y;var z=this.z;var w=this.w;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this},divideScalar:function(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar;this.z*=invScalar;this.w*=invScalar}else{this.x=0;this.y=0;this.z=0;this.w=1}return this},setAxisAngleFromQuaternion:function(q){this.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);if(s<1e-4){this.x=1;this.y=0;this.z=0}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s}return this},setAxisAngleFromRotationMatrix:function(m){var angle,x,y,z,epsilon=.01,epsilon2=.1,te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){if(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){this.set(1,0,0,0);return this}angle=Math.PI;var xx=(m11+1)/2;var yy=(m22+1)/2;var zz=(m33+1)/2;var xy=(m12+m21)/4;var xz=(m13+m31)/4;var yz=(m23+m32)/4;if(xx>yy&&xx>zz){if(xx<epsilon){x=0;y=.707106781;z=.707106781}else{x=Math.sqrt(xx);y=xy/x;z=xz/x}}else if(yy>zz){if(yy<epsilon){x=.707106781;y=0;z=.707106781}else{y=Math.sqrt(yy);x=xy/y;z=yz/y}}else{if(zz<epsilon){x=.707106781;y=.707106781;z=0}else{z=Math.sqrt(zz);x=xz/z;y=yz/z}}this.set(x,y,z,angle);return this}var s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));if(Math.abs(s)<.001)s=1;this.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this},min:function(v){if(this.x>v.x){this.x=v.x}if(this.y>v.y){this.y=v.y}if(this.z>v.z){this.z=v.z}if(this.w>v.w){this.w=v.w}return this},max:function(v){if(this.x<v.x){this.x=v.x}if(this.y<v.y){this.y=v.y}if(this.z<v.z){this.z=v.z}if(this.w<v.w){this.w=v.w}return this},clamp:function(min,max){if(this.x<min.x){this.x=min.x}else if(this.x>max.x){this.x=max.x}if(this.y<min.y){this.y=min.y}else if(this.y>max.y){this.y=max.y}if(this.z<min.z){this.z=min.z}else if(this.z>max.z){this.z=max.z}if(this.w<min.w){this.w=min.w}else if(this.w>max.w){this.w=max.w}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(l){var oldLength=this.length();if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength)}return this},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w},fromArray:function(array){this.x=array[0];this.y=array[1];this.z=array[2];this.w=array[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(x,y,z,order){this._x=x||0;this._y=y||0;this._z=z||0;this._order=order||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:undefined,_updateQuaternion:function(){if(this._quaternion!==undefined){this._quaternion.setFromEuler(this,false)}},get x(){return this._x},set x(value){this._x=value;this._updateQuaternion()},get y(){return this._y},set y(value){this._y=value;this._updateQuaternion()},get z(){return this._z},set z(value){this._z=value;this._updateQuaternion()},get order(){return this._order},set order(value){this._order=value;this._updateQuaternion()},set:function(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._updateQuaternion();return this},copy:function(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._updateQuaternion();return this},setFromRotationMatrix:function(m,order){function clamp(x){return Math.min(Math.max(x,-1),1)}var te=m.elements;var m11=te[0],m12=te[4],m13=te[8];var m21=te[1],m22=te[5],m23=te[9];var m31=te[2],m32=te[6],m33=te[10];order=order||this._order;if(order==="XYZ"){this._y=Math.asin(clamp(m13));if(Math.abs(m13)<.99999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11)}else{this._x=Math.atan2(m32,m22);this._z=0}}else if(order==="YXZ"){this._x=Math.asin(-clamp(m23));if(Math.abs(m23)<.99999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22)}else{this._y=Math.atan2(-m31,m11);this._z=0}}else if(order==="ZXY"){this._x=Math.asin(clamp(m32));if(Math.abs(m32)<.99999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22)}else{this._y=0;this._z=Math.atan2(m21,m11)}}else if(order==="ZYX"){this._y=Math.asin(-clamp(m31));if(Math.abs(m31)<.99999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11)}else{this._x=0;this._z=Math.atan2(-m12,m22)}}else if(order==="YZX"){this._z=Math.asin(clamp(m21));if(Math.abs(m21)<.99999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11)}else{this._x=0;this._y=Math.atan2(m13,m33)}}else if(order==="XZY"){this._z=Math.asin(-clamp(m12));if(Math.abs(m12)<.99999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11)}else{this._x=Math.atan2(-m23,m33);this._y=0}}else{console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+order)}this._order=order;this._updateQuaternion();return this},setFromQuaternion:function(q,order,update){function clamp(x){return Math.min(Math.max(x,-1),1)}var sqx=q.x*q.x;var sqy=q.y*q.y;var sqz=q.z*q.z;var sqw=q.w*q.w;order=order||this._order;if(order==="XYZ"){this._x=Math.atan2(2*(q.x*q.w-q.y*q.z),sqw-sqx-sqy+sqz);this._y=Math.asin(clamp(2*(q.x*q.z+q.y*q.w)));this._z=Math.atan2(2*(q.z*q.w-q.x*q.y),sqw+sqx-sqy-sqz)}else if(order==="YXZ"){this._x=Math.asin(clamp(2*(q.x*q.w-q.y*q.z)));this._y=Math.atan2(2*(q.x*q.z+q.y*q.w),sqw-sqx-sqy+sqz);this._z=Math.atan2(2*(q.x*q.y+q.z*q.w),sqw-sqx+sqy-sqz)}else if(order==="ZXY"){this._x=Math.asin(clamp(2*(q.x*q.w+q.y*q.z)));this._y=Math.atan2(2*(q.y*q.w-q.z*q.x),sqw-sqx-sqy+sqz);this._z=Math.atan2(2*(q.z*q.w-q.x*q.y),sqw-sqx+sqy-sqz)}else if(order==="ZYX"){this._x=Math.atan2(2*(q.x*q.w+q.z*q.y),sqw-sqx-sqy+sqz);this._y=Math.asin(clamp(2*(q.y*q.w-q.x*q.z)));this._z=Math.atan2(2*(q.x*q.y+q.z*q.w),sqw+sqx-sqy-sqz)}else if(order==="YZX"){this._x=Math.atan2(2*(q.x*q.w-q.z*q.y),sqw-sqx+sqy-sqz);this._y=Math.atan2(2*(q.y*q.w-q.x*q.z),sqw+sqx-sqy-sqz);this._z=Math.asin(clamp(2*(q.x*q.y+q.z*q.w)))}else if(order==="XZY"){this._x=Math.atan2(2*(q.x*q.w+q.y*q.z),sqw-sqx+sqy-sqz);this._y=Math.atan2(2*(q.x*q.z+q.y*q.w),sqw+sqx-sqy-sqz);this._z=Math.asin(clamp(2*(q.z*q.w-q.x*q.y)))}else{console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+order)}this._order=order;if(update!==false)this._updateQuaternion();return this},reorder:function(){var q=new THREE.Quaternion;return function(newOrder){q.setFromEuler(this);this.setFromQuaternion(q,newOrder)}}(),fromArray:function(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._updateQuaternion();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}};THREE.Line3=function(start,end){this.start=start!==undefined?start:new THREE.Vector3;this.end=end!==undefined?end:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(start,end){this.start.copy(start);this.end.copy(end);return this},copy:function(line){this.start.copy(line.start);this.end.copy(line.end);return this},center:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,optionalTarget){var result=optionalTarget||new THREE.Vector3;return this.delta(result).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var startP=new THREE.Vector3;var startEnd=new THREE.Vector3;return function(point,clampToLine){startP.subVectors(point,this.start);startEnd.subVectors(this.end,this.start);var startEnd2=startEnd.dot(startEnd);var startEnd_startP=startEnd.dot(startP);var t=startEnd_startP/startEnd2;if(clampToLine){t=THREE.Math.clamp(t,0,1)}return t}}(),closestPointToPoint:function(point,clampToLine,optionalTarget){var t=this.closestPointToPointParameter(point,clampToLine);var result=optionalTarget||new THREE.Vector3;return this.delta(result).multiplyScalar(t).add(this.start)},applyMatrix4:function(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this},equals:function(line){return line.start.equals(this.start)&&line.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(min,max){this.min=min!==undefined?min:new THREE.Vector2(Infinity,Infinity);this.max=max!==undefined?max:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(min,max){this.min.copy(min);this.max.copy(max);return this},setFromPoints:function(points){if(points.length>0){var point=points[0];this.min.copy(point);this.max.copy(point);for(var i=1,il=points.length;i<il;i++){point=points[i];if(point.x<this.min.x){this.min.x=point.x}else if(point.x>this.max.x){this.max.x=point.x}if(point.y<this.min.y){this.min.y=point.y}else if(point.y>this.max.y){this.max.y=point.y}}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var v1=new THREE.Vector2;return function(center,size){var halfSize=v1.copy(size).multiplyScalar(.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this}}(),copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(optionalTarget){var result=optionalTarget||new THREE.Vector2;return result.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(optionalTarget){var result=optionalTarget||new THREE.Vector2;return result.subVectors(this.max,this.min)},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this},expandByScalar:function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this},containsPoint:function(point){if(point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y){return false}return true},containsBox:function(box){if(this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y){return true}return false},getParameter:function(point){return new THREE.Vector2((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(box){if(box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y){return false}return true},clampPoint:function(point,optionalTarget){var result=optionalTarget||new THREE.Vector2;return result.copy(point).clamp(this.min,this.max)},distanceToPoint:function(){var v1=new THREE.Vector2;return function(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length()}}(),intersect:function(box){this.min.max(box.min);this.max.min(box.max);return this},union:function(box){this.min.min(box.min);this.max.max(box.max);return this},translate:function(offset){this.min.add(offset);this.max.add(offset);return this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(min,max){this.min=min!==undefined?min:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=max!==undefined?max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(min,max){this.min.copy(min);this.max.copy(max);return this},addPoint:function(point){if(point.x<this.min.x){this.min.x=point.x}else if(point.x>this.max.x){this.max.x=point.x}if(point.y<this.min.y){this.min.y=point.y}else if(point.y>this.max.y){this.max.y=point.y}if(point.z<this.min.z){this.min.z=point.z}else if(point.z>this.max.z){this.max.z=point.z}},setFromPoints:function(points){if(points.length>0){var point=points[0];this.min.copy(point);this.max.copy(point);for(var i=1,il=points.length;i<il;i++){this.addPoint(points[i])}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var v1=new THREE.Vector3;return function(center,size){var halfSize=v1.copy(size).multiplyScalar(.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this}}(),setFromObject:function(){var v1=new THREE.Vector3;return function(object){var scope=this;object.updateMatrixWorld(true);this.makeEmpty();object.traverse(function(node){if(node.geometry!==undefined&&node.geometry.vertices!==undefined){var vertices=node.geometry.vertices;for(var i=0,il=vertices.length;i<il;i++){v1.copy(vertices[i]);v1.applyMatrix4(node.matrixWorld);scope.expandByPoint(v1)}}});return this}}(),copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.subVectors(this.max,this.min)},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this},expandByScalar:function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this},containsPoint:function(point){if(point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z){return false}return true},containsBox:function(box){if(this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z){return true}return false},getParameter:function(point){return new THREE.Vector3((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(box){if(box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z){return false}return true},clampPoint:function(point,optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.copy(point).clamp(this.min,this.max)},distanceToPoint:function(){var v1=new THREE.Vector3;return function(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length()}}(),getBoundingSphere:function(){var v1=new THREE.Vector3;return function(optionalTarget){var result=optionalTarget||new THREE.Sphere;result.center=this.center();result.radius=this.size(v1).length()*.5;return result}}(),intersect:function(box){this.min.max(box.min);this.max.min(box.max);return this},union:function(box){this.min.min(box.min);this.max.max(box.max);return this},applyMatrix4:function(){var points=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(matrix){points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);this.makeEmpty();this.setFromPoints(points);return this}}(),translate:function(offset){this.min.add(offset);this.max.add(offset);return this},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(n11,n12,n13,n21,n22,n23,n31,n32,n33){this.elements=new Float32Array(9);this.set(n11!==undefined?n11:1,n12||0,n13||0,n21||0,n22!==undefined?n22:1,n23||0,n31||0,n32||0,n33!==undefined?n33:1)};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[3]=n12;te[6]=n13;te[1]=n21;te[4]=n22;te[7]=n23;te[2]=n31;te[5]=n32;te[8]=n33;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(m){var me=m.elements;this.set(me[0],me[3],me[6],me[1],me[4],me[7],me[2],me[5],me[8]);return this},multiplyVector3:function(vector){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return vector.applyMatrix3(this)},multiplyVector3Array:function(){var v1=new THREE.Vector3;return function(a){for(var i=0,il=a.length;i<il;i+=3){v1.x=a[i];v1.y=a[i+1];v1.z=a[i+2];v1.applyMatrix3(this);a[i]=v1.x;a[i+1]=v1.y;a[i+2]=v1.z}return a}}(),multiplyScalar:function(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this},determinant:function(){var te=this.elements;var a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g},getInverse:function(matrix,throwOnInvertible){var me=matrix.elements;var te=this.elements;te[0]=me[10]*me[5]-me[6]*me[9];te[1]=-me[10]*me[1]+me[2]*me[9];te[2]=me[6]*me[1]-me[2]*me[5];te[3]=-me[10]*me[4]+me[6]*me[8];te[4]=me[10]*me[0]-me[2]*me[8];te[5]=-me[6]*me[0]+me[2]*me[4];te[6]=me[9]*me[4]-me[5]*me[8];te[7]=-me[9]*me[0]+me[1]*me[8];te[8]=me[5]*me[0]-me[1]*me[4];var det=me[0]*te[0]+me[1]*te[3]+me[2]*te[6];if(det===0){var msg="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(throwOnInvertible||false){throw new Error(msg)}else{console.warn(msg)}this.identity();return this}this.multiplyScalar(1/det);return this},transpose:function(){var tmp,m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this},getNormalMatrix:function(m){this.getInverse(m).transpose();return this},transposeIntoArray:function(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this},clone:function(){var te=this.elements;return new THREE.Matrix3(te[0],te[3],te[6],te[1],te[4],te[7],te[2],te[5],te[8])}};THREE.Matrix4=function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){this.elements=new Float32Array(16);var te=this.elements;te[0]=n11!==undefined?n11:1;te[4]=n12||0;te[8]=n13||0;te[12]=n14||0;te[1]=n21||0;te[5]=n22!==undefined?n22:1;te[9]=n23||0;te[13]=n24||0;te[2]=n31||0;te[6]=n32||0;te[10]=n33!==undefined?n33:1;te[14]=n34||0;te[3]=n41||0;te[7]=n42||0;te[11]=n43||0;te[15]=n44!==undefined?n44:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(m){this.elements.set(m.elements);return this},extractPosition:function(m){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(m)},copyPosition:function(m){var te=this.elements;var me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this},extractRotation:function(){var v1=new THREE.Vector3;return function(m){var te=this.elements;var me=m.elements;var scaleX=1/v1.set(me[0],me[1],me[2]).length();var scaleY=1/v1.set(me[4],me[5],me[6]).length();var scaleZ=1/v1.set(me[8],me[9],me[10]).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;return this}}(),makeRotationFromEuler:function(euler){if(euler instanceof THREE.Euler===false){console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.")}var te=this.elements;var x=euler.x,y=euler.y,z=euler.z;var a=Math.cos(x),b=Math.sin(x);var c=Math.cos(y),d=Math.sin(y);var e=Math.cos(z),f=Math.sin(z);if(euler.order==="XYZ"){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c}else if(euler.order==="YXZ"){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c}else if(euler.order==="ZXY"){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c}else if(euler.order==="ZYX"){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c}else if(euler.order==="YZX"){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f}else if(euler.order==="XZY"){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac}te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this},setRotationFromQuaternion:function(q){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(q)},makeRotationFromQuaternion:function(q){var te=this.elements;var x=q.x,y=q.y,z=q.z,w=q.w;var x2=x+x,y2=y+y,z2=z+z;var xx=x*x2,xy=x*y2,xz=x*z2;var yy=y*y2,yz=y*z2,zz=z*z2;var wx=w*x2,wy=w*y2,wz=w*z2;te[0]=1-(yy+zz);te[4]=xy-wz;te[8]=xz+wy;te[1]=xy+wz;te[5]=1-(xx+zz);te[9]=yz-wx;te[2]=xz-wy;te[6]=yz+wx;te[10]=1-(xx+yy);te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this},lookAt:function(){var x=new THREE.Vector3;var y=new THREE.Vector3;var z=new THREE.Vector3;return function(eye,target,up){var te=this.elements;z.subVectors(eye,target).normalize();if(z.length()===0){z.z=1}x.crossVectors(up,z).normalize();if(x.length()===0){z.x+=1e-4;x.crossVectors(up,z).normalize()}y.crossVectors(z,x);te[0]=x.x;te[4]=y.x;te[8]=z.x;te[1]=x.y;te[5]=y.y;te[9]=z.y;te[2]=x.z;te[6]=y.z;te[10]=z.z;return this}}(),multiply:function(m,n){if(n!==undefined){console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(m,n)}return this.multiplyMatrices(this,m)},multiplyMatrices:function(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];var a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];var a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];var a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12];var b21=be[1],b22=be[5],b23=be[9],b24=be[13];var b31=be[2],b32=be[6],b33=be[10],b34=be[14];var b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this},multiplyToArray:function(a,b,r){var te=this.elements;this.multiplyMatrices(a,b);r[0]=te[0];r[1]=te[1];r[2]=te[2];r[3]=te[3];r[4]=te[4];r[5]=te[5];r[6]=te[6];r[7]=te[7];r[8]=te[8];r[9]=te[9];r[10]=te[10];r[11]=te[11];r[12]=te[12];r[13]=te[13];r[14]=te[14];r[15]=te[15];return this},multiplyScalar:function(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this},multiplyVector3:function(vector){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return vector.applyProjection(this)},multiplyVector4:function(vector){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},multiplyVector3Array:function(){var v1=new THREE.Vector3;return function(a){for(var i=0,il=a.length;i<il;i+=3){v1.x=a[i];v1.y=a[i+1];v1.z=a[i+2];v1.applyProjection(this);a[i]=v1.x;a[i+1]=v1.y;a[i+2]=v1.z}return a}}(),rotateAxis:function(v){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");v.transformDirection(this)},crossVector:function(vector){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return vector.applyMatrix4(this)},determinant:function(){var te=this.elements;var n11=te[0],n12=te[4],n13=te[8],n14=te[12];var n21=te[1],n22=te[5],n23=te[9],n24=te[13];var n31=te[2],n32=te[6],n33=te[10],n34=te[14];var n41=te[3],n42=te[7],n43=te[11],n44=te[15];return n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31)},transpose:function(){var te=this.elements;var tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;
tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this},flattenToArray:function(flat){var te=this.elements;flat[0]=te[0];flat[1]=te[1];flat[2]=te[2];flat[3]=te[3];flat[4]=te[4];flat[5]=te[5];flat[6]=te[6];flat[7]=te[7];flat[8]=te[8];flat[9]=te[9];flat[10]=te[10];flat[11]=te[11];flat[12]=te[12];flat[13]=te[13];flat[14]=te[14];flat[15]=te[15];return flat},flattenToArrayOffset:function(flat,offset){var te=this.elements;flat[offset]=te[0];flat[offset+1]=te[1];flat[offset+2]=te[2];flat[offset+3]=te[3];flat[offset+4]=te[4];flat[offset+5]=te[5];flat[offset+6]=te[6];flat[offset+7]=te[7];flat[offset+8]=te[8];flat[offset+9]=te[9];flat[offset+10]=te[10];flat[offset+11]=te[11];flat[offset+12]=te[12];flat[offset+13]=te[13];flat[offset+14]=te[14];flat[offset+15]=te[15];return flat},getPosition:function(){var v1=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var te=this.elements;return v1.set(te[12],te[13],te[14])}}(),setPosition:function(v){var te=this.elements;te[12]=v.x;te[13]=v.y;te[14]=v.z;return this},getInverse:function(m,throwOnInvertible){var te=this.elements;var me=m.elements;var n11=me[0],n12=me[4],n13=me[8],n14=me[12];var n21=me[1],n22=me[5],n23=me[9],n24=me[13];var n31=me[2],n32=me[6],n33=me[10],n34=me[14];var n41=me[3],n42=me[7],n43=me[11],n44=me[15];te[0]=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44;te[4]=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44;te[8]=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44;te[12]=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;te[1]=n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44;te[5]=n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44;te[9]=n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44;te[13]=n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34;te[2]=n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44;te[6]=n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44;te[10]=n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44;te[14]=n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34;te[3]=n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43;te[7]=n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43;te[11]=n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43;te[15]=n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33;var det=n11*te[0]+n21*te[4]+n31*te[8]+n41*te[12];if(det==0){var msg="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(throwOnInvertible||false){throw new Error(msg)}else{console.warn(msg)}this.identity();return this}this.multiplyScalar(1/det);return this},translate:function(v){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(angle){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(angle){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(angle){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(axis,angle){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(v){var te=this.elements;var x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this},getMaxScaleOnAxis:function(){var te=this.elements;var scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];var scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];var scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,Math.max(scaleYSq,scaleZSq)))},makeTranslation:function(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this},makeRotationX:function(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this},makeRotationY:function(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this},makeRotationZ:function(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(axis,angle){var c=Math.cos(angle);var s=Math.sin(angle);var t=1-c;var x=axis.x,y=axis.y,z=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this},makeScale:function(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this},compose:function(position,quaternion,scale){this.makeRotationFromQuaternion(quaternion);this.scale(scale);this.setPosition(position);return this},decompose:function(){var vector=new THREE.Vector3;var matrix=new THREE.Matrix4;return function(position,quaternion,scale){var te=this.elements;var sx=vector.set(te[0],te[1],te[2]).length();var sy=vector.set(te[4],te[5],te[6]).length();var sz=vector.set(te[8],te[9],te[10]).length();position.x=te[12];position.y=te[13];position.z=te[14];matrix.elements.set(this.elements);var invSX=1/sx;var invSY=1/sy;var invSZ=1/sz;matrix.elements[0]*=invSX;matrix.elements[1]*=invSX;matrix.elements[2]*=invSX;matrix.elements[4]*=invSY;matrix.elements[5]*=invSY;matrix.elements[6]*=invSY;matrix.elements[8]*=invSZ;matrix.elements[9]*=invSZ;matrix.elements[10]*=invSZ;quaternion.setFromRotationMatrix(matrix);scale.x=sx;scale.y=sy;scale.z=sz;return this}}(),makeFrustum:function(left,right,bottom,top,near,far){var te=this.elements;var x=2*near/(right-left);var y=2*near/(top-bottom);var a=(right+left)/(right-left);var b=(top+bottom)/(top-bottom);var c=-(far+near)/(far-near);var d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this},makePerspective:function(fov,aspect,near,far){var ymax=near*Math.tan(THREE.Math.degToRad(fov*.5));var ymin=-ymax;var xmin=ymin*aspect;var xmax=ymax*aspect;return this.makeFrustum(xmin,xmax,ymin,ymax,near,far)},makeOrthographic:function(left,right,top,bottom,near,far){var te=this.elements;var w=right-left;var h=top-bottom;var p=far-near;var x=(right+left)/w;var y=(top+bottom)/h;var z=(far+near)/p;te[0]=2/w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2/h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2/p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this},fromArray:function(array){this.elements.set(array);return this},toArray:function(){var te=this.elements;return[te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7],te[8],te[9],te[10],te[11],te[12],te[13],te[14],te[15]]},clone:function(){var te=this.elements;return new THREE.Matrix4(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15])}};THREE.Ray=function(origin,direction){this.origin=origin!==undefined?origin:new THREE.Vector3;this.direction=direction!==undefined?direction:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this},copy:function(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this},at:function(t,optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var v1=new THREE.Vector3;return function(t){this.origin.copy(this.at(t,v1));return this}}(),closestPointToPoint:function(point,optionalTarget){var result=optionalTarget||new THREE.Vector3;result.subVectors(point,this.origin);var directionDistance=result.dot(this.direction);if(directionDistance<0){return result.copy(this.origin)}return result.copy(this.direction).multiplyScalar(directionDistance).add(this.origin)},distanceToPoint:function(){var v1=new THREE.Vector3;return function(point){var directionDistance=v1.subVectors(point,this.origin).dot(this.direction);if(directionDistance<0){return this.origin.distanceTo(point)}v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return v1.distanceTo(point)}}(),distanceSqToSegment:function(v0,v1,optionalPointOnRay,optionalPointOnSegment){var segCenter=v0.clone().add(v1).multiplyScalar(.5);var segDir=v1.clone().sub(v0).normalize();var segExtent=v0.distanceTo(v1)*.5;var diff=this.origin.clone().sub(segCenter);var a01=-this.direction.dot(segDir);var b0=diff.dot(this.direction);var b1=-diff.dot(segDir);var c=diff.lengthSq();var det=Math.abs(1-a01*a01);var s0,s1,sqrDist,extDet;if(det>=0){s0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){var invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c}else{s1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c}}else{s1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c}}else{if(s1<=-extDet){s0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c}else if(s1<=extDet){s0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c}else{s0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c}}}else{s1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction.clone().multiplyScalar(s0).add(this.origin))}if(optionalPointOnSegment){optionalPointOnSegment.copy(segDir.clone().multiplyScalar(s1).add(segCenter))}return sqrDist},isIntersectionSphere:function(sphere){return this.distanceToPoint(sphere.center)<=sphere.radius},isIntersectionPlane:function(plane){var distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true}var denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true}return false},distanceToPlane:function(plane){var denominator=plane.normal.dot(this.direction);if(denominator==0){if(plane.distanceToPoint(this.origin)==0){return 0}return null}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return t>=0?t:null},intersectPlane:function(plane,optionalTarget){var t=this.distanceToPlane(plane);if(t===null){return null}return this.at(t,optionalTarget)},isIntersectionBox:function(){var v=new THREE.Vector3;return function(box){return this.intersectBox(box,v)!==null}}(),intersectBox:function(box,optionalTarget){var tmin,tmax,tymin,tymax,tzmin,tzmax;var invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;var origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry}if(tmin>tymax||tymin>tmax)return null;if(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;if(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,optionalTarget)},intersectTriangle:function(){var diff=new THREE.Vector3;var edge1=new THREE.Vector3;var edge2=new THREE.Vector3;var normal=new THREE.Vector3;return function(a,b,c,backfaceCulling,optionalTarget){edge1.subVectors(b,a);edge2.subVectors(c,a);normal.crossVectors(edge1,edge2);var DdN=this.direction.dot(normal);var sign;if(DdN>0){if(backfaceCulling)return null;sign=1}else if(DdN<0){sign=-1;DdN=-DdN}else{return null}diff.subVectors(this.origin,a);var DdQxE2=sign*this.direction.dot(edge2.crossVectors(diff,edge2));if(DdQxE2<0){return null}var DdE1xQ=sign*this.direction.dot(edge1.cross(diff));if(DdE1xQ<0){return null}if(DdQxE2+DdE1xQ>DdN){return null}var QdN=-sign*diff.dot(normal);if(QdN<0){return null}return this.at(QdN/DdN,optionalTarget)}}(),applyMatrix4:function(matrix4){this.direction.add(this.origin).applyMatrix4(matrix4);this.origin.applyMatrix4(matrix4);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(center,radius){this.center=center!==undefined?center:new THREE.Vector3;this.radius=radius!==undefined?radius:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(center,radius){this.center.copy(center);this.radius=radius;return this},setFromPoints:function(){var box=new THREE.Box3;return function(points,optionalCenter){var center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter)}else{box.setFromPoints(points).center(center)}var maxRadiusSq=0;for(var i=0,il=points.length;i<il;i++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]))}this.radius=Math.sqrt(maxRadiusSq);return this}}(),copy:function(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this},empty:function(){return this.radius<=0},containsPoint:function(point){return point.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(point){return point.distanceTo(this.center)-this.radius},intersectsSphere:function(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum},clampPoint:function(point,optionalTarget){var deltaLengthSq=this.center.distanceToSquared(point);var result=optionalTarget||new THREE.Vector3;result.copy(point);if(deltaLengthSq>this.radius*this.radius){result.sub(this.center).normalize();result.multiplyScalar(this.radius).add(this.center)}return result},getBoundingBox:function(optionalTarget){var box=optionalTarget||new THREE.Box3;box.set(this.center,this.center);box.expandByScalar(this.radius);return box},applyMatrix4:function(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this},translate:function(offset){this.center.add(offset);return this},equals:function(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(p0,p1,p2,p3,p4,p5){this.planes=[p0!==undefined?p0:new THREE.Plane,p1!==undefined?p1:new THREE.Plane,p2!==undefined?p2:new THREE.Plane,p3!==undefined?p3:new THREE.Plane,p4!==undefined?p4:new THREE.Plane,p5!==undefined?p5:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this},copy:function(frustum){var planes=this.planes;for(var i=0;i<6;i++){planes[i].copy(frustum.planes[i])}return this},setFromMatrix:function(m){var planes=this.planes;var me=m.elements;var me0=me[0],me1=me[1],me2=me[2],me3=me[3];var me4=me[4],me5=me[5],me6=me[6],me7=me[7];var me8=me[8],me9=me[9],me10=me[10],me11=me[11];var me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this},intersectsObject:function(){var sphere=new THREE.Sphere;return function(object){var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(object.matrixWorld);return this.intersectsSphere(sphere)}}(),intersectsSphere:function(sphere){var planes=this.planes;var center=sphere.center;var negRadius=-sphere.radius;for(var i=0;i<6;i++){var distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false}}return true},intersectsBox:function(){var p1=new THREE.Vector3,p2=new THREE.Vector3;return function(box){var planes=this.planes;for(var i=0;i<6;i++){var plane=planes[i];p1.x=plane.normal.x>0?box.min.x:box.max.x;p2.x=plane.normal.x>0?box.max.x:box.min.x;p1.y=plane.normal.y>0?box.min.y:box.max.y;p2.y=plane.normal.y>0?box.max.y:box.min.y;p1.z=plane.normal.z>0?box.min.z:box.max.z;p2.z=plane.normal.z>0?box.max.z:box.min.z;var d1=plane.distanceToPoint(p1);var d2=plane.distanceToPoint(p2);if(d1<0&&d2<0){return false}}return true}}(),containsPoint:function(point){var planes=this.planes;for(var i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false}}return true},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(normal,constant){this.normal=normal!==undefined?normal:new THREE.Vector3(1,0,0);this.constant=constant!==undefined?constant:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(normal,constant){this.normal.copy(normal);this.constant=constant;return this},setComponents:function(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this},setFromNormalAndCoplanarPoint:function(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this},setFromCoplanarPoints:function(){var v1=new THREE.Vector3;var v2=new THREE.Vector3;return function(a,b,c){var normal=v1.subVectors(c,b).cross(v2.subVectors(a,b)).normalize();this.setFromNormalAndCoplanarPoint(normal,a);return this}}(),copy:function(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this},normalize:function(){var inverseNormalLength=1/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(point){return this.normal.dot(point)+this.constant},distanceToSphere:function(sphere){return this.distanceToPoint(sphere.center)-sphere.radius},projectPoint:function(point,optionalTarget){return this.orthoPoint(point,optionalTarget).sub(point).negate()},orthoPoint:function(point,optionalTarget){var perpendicularMagnitude=this.distanceToPoint(point);var result=optionalTarget||new THREE.Vector3;return result.copy(this.normal).multiplyScalar(perpendicularMagnitude)},isIntersectionLine:function(line){var startSign=this.distanceToPoint(line.start);var endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0},intersectLine:function(){var v1=new THREE.Vector3;return function(line,optionalTarget){var result=optionalTarget||new THREE.Vector3;var direction=line.delta(v1);var denominator=this.normal.dot(direction);if(denominator==0){if(this.distanceToPoint(line.start)==0){return result.copy(line.start)}return undefined}var t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return undefined}return result.copy(direction).multiplyScalar(t).add(line.start)}}(),coplanarPoint:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var v1=new THREE.Vector3;var v2=new THREE.Vector3;return function(matrix,optionalNormalMatrix){optionalNormalMatrix=optionalNormalMatrix||(new THREE.Matrix3).getNormalMatrix(matrix);var newNormal=v1.copy(this.normal).applyMatrix3(optionalNormalMatrix);var newCoplanarPoint=this.coplanarPoint(v2);newCoplanarPoint.applyMatrix4(matrix);this.setFromNormalAndCoplanarPoint(newNormal,newCoplanarPoint);return this}}(),translate:function(offset){this.constant=this.constant-offset.dot(this.normal);return this},equals:function(plane){return plane.normal.equals(this.normal)&&plane.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={PI2:Math.PI*2,generateUUID:function(){var chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");var uuid=new Array(36);var rnd=0,r;return function(){for(var i=0;i<36;i++){if(i==8||i==13||i==18||i==23){uuid[i]="-"}else if(i==14){uuid[i]="4"}else{if(rnd<=2)rnd=33554432+Math.random()*16777216|0;r=rnd&15;rnd=rnd>>4;uuid[i]=chars[i==19?r&3|8:r]}}return uuid.join("")}}(),clamp:function(x,a,b){return x<a?a:x>b?b:x},clampBottom:function(x,a){return x<a?a:x},mapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)},smoothstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x)},smootherstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1))},randFloat:function(low,high){return low+Math.random()*(high-low)},randFloatSpread:function(range){return range*(.5-Math.random())},sign:function(x){return x<0?-1:x>0?1:0},degToRad:function(){var degreeToRadiansFactor=Math.PI/180;return function(degrees){return degrees*degreeToRadiansFactor}}(),radToDeg:function(){var radianToDegreesFactor=180/Math.PI;return function(radians){return radians*radianToDegreesFactor}}()};THREE.Spline=function(points){this.points=points;var c=[],v3={x:0,y:0,z:0},point,intPoint,weight,w2,w3,pa,pb,pc,pd;this.initFromArray=function(a){this.points=[];for(var i=0;i<a.length;i++){this.points[i]={x:a[i][0],y:a[i][1],z:a[i][2]}}};this.getPoint=function(k){point=(this.points.length-1)*k;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint===0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>this.points.length-2?this.points.length-1:intPoint+1;c[3]=intPoint>this.points.length-3?this.points.length-1:intPoint+2;pa=this.points[c[0]];pb=this.points[c[1]];pc=this.points[c[2]];pd=this.points[c[3]];w2=weight*weight;w3=weight*w2;v3.x=interpolate(pa.x,pb.x,pc.x,pd.x,weight,w2,w3);v3.y=interpolate(pa.y,pb.y,pc.y,pd.y,weight,w2,w3);v3.z=interpolate(pa.z,pb.z,pc.z,pd.z,weight,w2,w3);return v3};this.getControlPointsArray=function(){var i,p,l=this.points.length,coords=[];for(i=0;i<l;i++){p=this.points[i];coords[i]=[p.x,p.y,p.z]}return coords};this.getLength=function(nSubDivisions){var i,index,nSamples,position,point=0,intPoint=0,oldIntPoint=0,oldPosition=new THREE.Vector3,tmpVec=new THREE.Vector3,chunkLengths=[],totalLength=0;chunkLengths[0]=0;if(!nSubDivisions)nSubDivisions=100;nSamples=this.points.length*nSubDivisions;oldPosition.copy(this.points[0]);for(i=1;i<nSamples;i++){index=i/nSamples;position=this.getPoint(index);tmpVec.copy(position);totalLength+=tmpVec.distanceTo(oldPosition);oldPosition.copy(position);point=(this.points.length-1)*index;intPoint=Math.floor(point);if(intPoint!=oldIntPoint){chunkLengths[intPoint]=totalLength;oldIntPoint=intPoint}}chunkLengths[chunkLengths.length]=totalLength;return{chunks:chunkLengths,total:totalLength}};this.reparametrizeByArcLength=function(samplingCoef){var i,j,index,indexCurrent,indexNext,linearDistance,realDistance,sampling,position,newpoints=[],tmpVec=new THREE.Vector3,sl=this.getLength();newpoints.push(tmpVec.copy(this.points[0]).clone());for(i=1;i<this.points.length;i++){realDistance=sl.chunks[i]-sl.chunks[i-1];sampling=Math.ceil(samplingCoef*realDistance/sl.total);indexCurrent=(i-1)/(this.points.length-1);indexNext=i/(this.points.length-1);for(j=1;j<sampling-1;j++){index=indexCurrent+j*(1/sampling)*(indexNext-indexCurrent);position=this.getPoint(index);newpoints.push(tmpVec.copy(position).clone())}newpoints.push(tmpVec.copy(this.points[i]).clone())}this.points=newpoints};function interpolate(p0,p1,p2,p3,t,t2,t3){var v0=(p2-p0)*.5,v1=(p3-p1)*.5;return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1}};THREE.Triangle=function(a,b,c){this.a=a!==undefined?a:new THREE.Vector3;this.b=b!==undefined?b:new THREE.Vector3;this.c=c!==undefined?c:new THREE.Vector3};THREE.Triangle.normal=function(){var v0=new THREE.Vector3;return function(a,b,c,optionalTarget){var result=optionalTarget||new THREE.Vector3;result.subVectors(c,b);v0.subVectors(a,b);result.cross(v0);var resultLengthSq=result.lengthSq();if(resultLengthSq>0){return result.multiplyScalar(1/Math.sqrt(resultLengthSq))}return result.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var v0=new THREE.Vector3;var v1=new THREE.Vector3;var v2=new THREE.Vector3;return function(point,a,b,c,optionalTarget){v0.subVectors(c,a);v1.subVectors(b,a);v2.subVectors(point,a);var dot00=v0.dot(v0);var dot01=v0.dot(v1);var dot02=v0.dot(v2);var dot11=v1.dot(v1);var dot12=v1.dot(v2);var denom=dot00*dot11-dot01*dot01;var result=optionalTarget||new THREE.Vector3;if(denom==0){return result.set(-2,-1,-1)}var invDenom=1/denom;var u=(dot11*dot02-dot01*dot12)*invDenom;var v=(dot00*dot12-dot01*dot02)*invDenom;return result.set(1-u-v,v,u)}}();THREE.Triangle.containsPoint=function(){var v1=new THREE.Vector3;return function(point,a,b,c){var result=THREE.Triangle.barycoordFromPoint(point,a,b,c,v1);return result.x>=0&&result.y>=0&&result.x+result.y<=1}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this},copy:function(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this},area:function(){var v0=new THREE.Vector3;var v1=new THREE.Vector3;return function(){v0.subVectors(this.c,this.b);v1.subVectors(this.a,this.b);return v0.cross(v1).length()*.5}}(),midpoint:function(optionalTarget){var result=optionalTarget||new THREE.Vector3;return result.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(optionalTarget){return THREE.Triangle.normal(this.a,this.b,this.c,optionalTarget)},plane:function(optionalTarget){var result=optionalTarget||new THREE.Plane;return result.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(point,optionalTarget){return THREE.Triangle.barycoordFromPoint(point,this.a,this.b,this.c,optionalTarget)},containsPoint:function(point){return THREE.Triangle.containsPoint(point,this.a,this.b,this.c)},equals:function(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(v){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return v};THREE.UV=function(u,v){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(u,v)};THREE.Clock=function(autoStart){this.autoStart=autoStart!==undefined?autoStart:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now();this.oldTime=this.startTime;this.running=true},stop:function(){this.getElapsedTime();this.running=false},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var diff=0;if(this.autoStart&&!this.running){this.start()}if(this.running){var newTime=self.performance!==undefined&&self.performance.now!==undefined?self.performance.now():Date.now();diff=.001*(newTime-this.oldTime);this.oldTime=newTime;this.elapsedTime+=diff}return diff}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(object){object.addEventListener=THREE.EventDispatcher.prototype.addEventListener;object.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;object.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;object.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(type,listener){if(this._listeners===undefined)this._listeners={};var listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[]}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener)}},hasEventListener:function(type,listener){if(this._listeners===undefined)return false;var listeners=this._listeners;if(listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1){return true}return false},removeEventListener:function(type,listener){if(this._listeners===undefined)return;var listeners=this._listeners;var index=listeners[type].indexOf(listener);if(index!==-1){listeners[type].splice(index,1)}},dispatchEvent:function(event){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;for(var i=0,l=listenerArray.length;i<l;i++){listenerArray[i].call(this,event)}}}};(function(THREE){THREE.Raycaster=function(origin,direction,near,far){this.ray=new THREE.Ray(origin,direction);this.near=near||0;this.far=far||Infinity};var sphere=new THREE.Sphere;var localRay=new THREE.Ray;var facePlane=new THREE.Plane;var intersectPoint=new THREE.Vector3;var matrixPosition=new THREE.Vector3;var inverseMatrix=new THREE.Matrix4;var descSort=function(a,b){return a.distance-b.distance};var vA=new THREE.Vector3;var vB=new THREE.Vector3;var vC=new THREE.Vector3;var intersectObject=function(object,raycaster,intersects){if(object instanceof THREE.Particle){matrixPosition.getPositionFromMatrix(object.matrixWorld);var distance=raycaster.ray.distanceToPoint(matrixPosition);if(distance>object.scale.x){return intersects}intersects.push({distance:distance,point:object.position,face:null,object:object})}else if(object instanceof THREE.LOD){matrixPosition.getPositionFromMatrix(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(matrixPosition);intersectObject(object.getObjectForDistance(distance),raycaster,intersects)}else if(object instanceof THREE.Mesh){var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(object.matrixWorld);if(raycaster.ray.isIntersectionSphere(sphere)===false){return intersects}inverseMatrix.getInverse(object.matrixWorld);localRay.copy(raycaster.ray).applyMatrix4(inverseMatrix);if(geometry.boundingBox!==null){if(localRay.isIntersectionBox(geometry.boundingBox)===false){return intersects}}if(geometry instanceof THREE.BufferGeometry){var material=object.material;if(material===undefined)return intersects;if(geometry.dynamic===false)return intersects;var a,b,c;var precision=raycaster.precision;if(geometry.attributes.index!==undefined){var offsets=geometry.offsets;var indices=geometry.attributes.index.array;var positions=geometry.attributes.position.array;var offLength=geometry.offsets.length;var fl=geometry.attributes.index.array.length/3;for(var oi=0;oi<offLength;++oi){var start=offsets[oi].start;var count=offsets[oi].count;var index=offsets[oi].index;for(var i=start,il=start+count;i<il;i+=3){a=index+indices[i];b=index+indices[i+1];c=index+indices[i+2];vA.set(positions[a*3],positions[a*3+1],positions[a*3+2]);vB.set(positions[b*3],positions[b*3+1],positions[b*3+2]);vC.set(positions[c*3],positions[c*3+1],positions[c*3+2]);var intersectionPoint=localRay.intersectTriangle(vA,vB,vC,material.side!==THREE.DoubleSide);if(intersectionPoint===null)continue;intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);if(distance<precision||distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:intersectionPoint,face:null,faceIndex:null,object:object})}}}else{var offsets=geometry.offsets;var positions=geometry.attributes.position.array;var offLength=geometry.offsets.length;var fl=geometry.attributes.position.array.length;for(var i=0;i<fl;i+=3){a=i;b=i+1;c=i+2;vA.set(positions[a*3],positions[a*3+1],positions[a*3+2]);
vB.set(positions[b*3],positions[b*3+1],positions[b*3+2]);vC.set(positions[c*3],positions[c*3+1],positions[c*3+2]);var intersectionPoint=localRay.intersectTriangle(vA,vB,vC,material.side!==THREE.DoubleSide);if(intersectionPoint===null)continue;intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);if(distance<precision||distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:intersectionPoint,face:null,faceIndex:null,object:object})}}}else if(geometry instanceof THREE.Geometry){var isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial;var objectMaterials=isFaceMaterial===true?object.material.materials:null;var a,b,c,d;var precision=raycaster.precision;var vertices=geometry.vertices;for(var f=0,fl=geometry.faces.length;f<fl;f++){var face=geometry.faces[f];var material=isFaceMaterial===true?objectMaterials[face.materialIndex]:object.material;if(material===undefined)continue;a=vertices[face.a];b=vertices[face.b];c=vertices[face.c];var intersectionPoint=localRay.intersectTriangle(a,b,c,material.side!==THREE.DoubleSide);if(intersectionPoint===null)continue;intersectionPoint.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPoint);if(distance<precision||distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:intersectionPoint,face:face,faceIndex:f,object:object})}}}else if(object instanceof THREE.Line){var precision=raycaster.linePrecision;var precisionSq=precision*precision;var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(object.matrixWorld);if(raycaster.ray.isIntersectionSphere(sphere)===false){return intersects}inverseMatrix.getInverse(object.matrixWorld);localRay.copy(raycaster.ray).applyMatrix4(inverseMatrix);if(geometry instanceof THREE.Geometry){var vertices=geometry.vertices;var nbVertices=vertices.length;var interSegment=new THREE.Vector3;var interRay=new THREE.Vector3;var step=object.type===THREE.LineStrip?1:2;for(var i=0;i<nbVertices-1;i=i+step){var distSq=localRay.distanceSqToSegment(vertices[i],vertices[i+1],interRay,interSegment);if(distSq>precisionSq)continue;var distance=localRay.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,point:interSegment.clone().applyMatrix4(object.matrixWorld),face:null,faceIndex:null,object:object})}}}};var intersectDescendants=function(object,raycaster,intersects){var descendants=object.getDescendants();for(var i=0,l=descendants.length;i<l;i++){intersectObject(descendants[i],raycaster,intersects)}};THREE.Raycaster.prototype.precision=1e-4;THREE.Raycaster.prototype.linePrecision=1;THREE.Raycaster.prototype.set=function(origin,direction){this.ray.set(origin,direction)};THREE.Raycaster.prototype.intersectObject=function(object,recursive){var intersects=[];if(recursive===true){intersectDescendants(object,this,intersects)}intersectObject(object,this,intersects);intersects.sort(descSort);return intersects};THREE.Raycaster.prototype.intersectObjects=function(objects,recursive){var intersects=[];for(var i=0,l=objects.length;i<l;i++){intersectObject(objects[i],this,intersects);if(recursive===true){intersectDescendants(objects[i],this,intersects)}}intersects.sort(descSort);return intersects}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=undefined;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Euler;this.quaternion=new THREE.Quaternion;this.scale=new THREE.Vector3(1,1,1);this.rotation._quaternion=this.quaternion;this.quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=true;this.matrixWorldNeedsUpdate=true;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");return this.rotation.order},set eulerOrder(value){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=value},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(value){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var m1=new THREE.Matrix4;return function(matrix){this.matrix.multiplyMatrices(matrix,this.matrix);this.position.getPositionFromMatrix(this.matrix);this.scale.getScaleFromMatrix(this.matrix);m1.extractRotation(this.matrix);this.quaternion.setFromRotationMatrix(m1)}}(),setRotationFromAxisAngle:function(axis,angle){this.quaternion.setFromAxisAngle(axis,angle)},setRotationFromEuler:function(euler){this.quaternion.setFromEuler(euler,true)},setRotationFromMatrix:function(m){this.quaternion.setFromRotationMatrix(m)},setRotationFromQuaternion:function(q){this.quaternion.copy(q)},rotateOnAxis:function(){var q1=new THREE.Quaternion;return function(axis,angle){q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(q1);return this}}(),rotateX:function(){var v1=new THREE.Vector3(1,0,0);return function(angle){return this.rotateOnAxis(v1,angle)}}(),rotateY:function(){var v1=new THREE.Vector3(0,1,0);return function(angle){return this.rotateOnAxis(v1,angle)}}(),rotateZ:function(){var v1=new THREE.Vector3(0,0,1);return function(angle){return this.rotateOnAxis(v1,angle)}}(),translateOnAxis:function(){var v1=new THREE.Vector3;return function(axis,distance){v1.copy(axis);v1.applyQuaternion(this.quaternion);this.position.add(v1.multiplyScalar(distance));return this}}(),translate:function(distance,axis){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(axis,distance)},translateX:function(){var v1=new THREE.Vector3(1,0,0);return function(distance){return this.translateOnAxis(v1,distance)}}(),translateY:function(){var v1=new THREE.Vector3(0,1,0);return function(distance){return this.translateOnAxis(v1,distance)}}(),translateZ:function(){var v1=new THREE.Vector3(0,0,1);return function(distance){return this.translateOnAxis(v1,distance)}}(),localToWorld:function(vector){return vector.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var m1=new THREE.Matrix4;return function(vector){return vector.applyMatrix4(m1.getInverse(this.matrixWorld))}}(),lookAt:function(){var m1=new THREE.Matrix4;return function(vector){m1.lookAt(vector,this.position,this.up);this.quaternion.setFromRotationMatrix(m1)}}(),add:function(object){if(object===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");return}if(object instanceof THREE.Object3D){if(object.parent!==undefined){object.parent.remove(object)}object.parent=this;object.dispatchEvent({type:"added"});this.children.push(object);var scene=this;while(scene.parent!==undefined){scene=scene.parent}if(scene!==undefined&&scene instanceof THREE.Scene){scene.__addObject(object)}}},remove:function(object){var index=this.children.indexOf(object);if(index!==-1){object.parent=undefined;object.dispatchEvent({type:"removed"});this.children.splice(index,1);var scene=this;while(scene.parent!==undefined){scene=scene.parent}if(scene!==undefined&&scene instanceof THREE.Scene){scene.__removeObject(object)}}},traverse:function(callback){callback(this);for(var i=0,l=this.children.length;i<l;i++){this.children[i].traverse(callback)}},getObjectById:function(id,recursive){for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];if(child.id===id){return child}if(recursive===true){child=child.getObjectById(id,recursive);if(child!==undefined){return child}}}return undefined},getObjectByName:function(name,recursive){for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];if(child.name===name){return child}if(recursive===true){child=child.getObjectByName(name,recursive);if(child!==undefined){return child}}}return undefined},getChildByName:function(name,recursive){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(name,recursive)},getDescendants:function(array){if(array===undefined)array=[];Array.prototype.push.apply(array,this.children);for(var i=0,l=this.children.length;i<l;i++){this.children[i].getDescendants(array)}return array},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(force){if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||force===true){if(this.parent===undefined){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;force=true}for(var i=0,l=this.children.length;i<l;i++){this.children[i].updateMatrixWorld(force)}},clone:function(object,recursive){if(object===undefined)object=new THREE.Object3D;if(recursive===undefined)recursive=true;object.name=this.name;object.up.copy(this.up);object.position.copy(this.position);object.quaternion.copy(this.quaternion);object.scale.copy(this.scale);object.renderDepth=this.renderDepth;object.rotationAutoUpdate=this.rotationAutoUpdate;object.matrix.copy(this.matrix);object.matrixWorld.copy(this.matrixWorld);object.matrixAutoUpdate=this.matrixAutoUpdate;object.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;object.visible=this.visible;object.castShadow=this.castShadow;object.receiveShadow=this.receiveShadow;object.frustumCulled=this.frustumCulled;object.userData=JSON.parse(JSON.stringify(this.userData));if(recursive===true){for(var i=0;i<this.children.length;i++){var child=this.children[i];object.add(child.clone())}}return object}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Projector=function(){var _object,_objectCount,_objectPool=[],_objectPoolLength=0,_vertex,_vertexCount,_vertexPool=[],_vertexPoolLength=0,_face,_face3Count,_face3Pool=[],_face3PoolLength=0,_line,_lineCount,_linePool=[],_linePoolLength=0,_particle,_particleCount,_particlePool=[],_particlePoolLength=0,_renderData={objects:[],sprites:[],lights:[],elements:[]},_vector3=new THREE.Vector3,_vector4=new THREE.Vector4,_clipBox=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),_boundingBox=new THREE.Box3,_points3=new Array(3),_points4=new Array(4),_viewMatrix=new THREE.Matrix4,_viewProjectionMatrix=new THREE.Matrix4,_modelMatrix,_modelViewProjectionMatrix=new THREE.Matrix4,_normalMatrix=new THREE.Matrix3,_normalViewMatrix=new THREE.Matrix3,_centroid=new THREE.Vector3,_frustum=new THREE.Frustum,_clippedVertex1PositionScreen=new THREE.Vector4,_clippedVertex2PositionScreen=new THREE.Vector4;this.projectVector=function(vector,camera){camera.matrixWorldInverse.getInverse(camera.matrixWorld);_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);return vector.applyProjection(_viewProjectionMatrix)};this.unprojectVector=function(vector,camera){camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);_viewProjectionMatrix.multiplyMatrices(camera.matrixWorld,camera.projectionMatrixInverse);return vector.applyProjection(_viewProjectionMatrix)};this.pickingRay=function(vector,camera){vector.z=-1;var end=new THREE.Vector3(vector.x,vector.y,1);this.unprojectVector(vector,camera);this.unprojectVector(end,camera);end.sub(vector).normalize();return new THREE.Raycaster(vector,end)};var getObject=function(object){_object=getNextObjectInPool();_object.id=object.id;_object.object=object;if(object.renderDepth!==null){_object.z=object.renderDepth}else{_vector3.getPositionFromMatrix(object.matrixWorld);_vector3.applyProjection(_viewProjectionMatrix);_object.z=_vector3.z}return _object};var projectObject=function(object){if(object.visible===false)return;if(object instanceof THREE.Light){_renderData.lights.push(object)}else if(object instanceof THREE.Mesh||object instanceof THREE.Line){if(object.frustumCulled===false||_frustum.intersectsObject(object)===true){_renderData.objects.push(getObject(object))}}else if(object instanceof THREE.Sprite||object instanceof THREE.Particle){_renderData.sprites.push(getObject(object))}for(var i=0,l=object.children.length;i<l;i++){projectObject(object.children[i])}};var projectGraph=function(root,sortObjects){_objectCount=0;_renderData.objects.length=0;_renderData.sprites.length=0;_renderData.lights.length=0;projectObject(root);if(sortObjects===true){_renderData.objects.sort(painterSort)}};this.projectScene=function(scene,camera,sortObjects,sortElements){var visible=false,o,ol,v,vl,f,fl,n,nl,c,cl,u,ul,object,geometry,vertices,faces,face,faceVertexNormals,faceVertexUvs,uvs,v1,v2,v3,v4,isFaceMaterial,objectMaterials;_face3Count=0;_lineCount=0;_particleCount=0;_renderData.elements.length=0;if(scene.autoUpdate===true)scene.updateMatrixWorld();if(camera.parent===undefined)camera.updateMatrixWorld();_viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));_viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix,_viewMatrix);_normalViewMatrix.getNormalMatrix(_viewMatrix);_frustum.setFromMatrix(_viewProjectionMatrix);projectGraph(scene,sortObjects);for(o=0,ol=_renderData.objects.length;o<ol;o++){object=_renderData.objects[o].object;_modelMatrix=object.matrixWorld;_vertexCount=0;if(object instanceof THREE.Mesh){geometry=object.geometry;vertices=geometry.vertices;faces=geometry.faces;faceVertexUvs=geometry.faceVertexUvs;_normalMatrix.getNormalMatrix(_modelMatrix);isFaceMaterial=object.material instanceof THREE.MeshFaceMaterial;objectMaterials=isFaceMaterial===true?object.material:null;for(v=0,vl=vertices.length;v<vl;v++){_vertex=getNextVertexInPool();_vertex.positionWorld.copy(vertices[v]).applyMatrix4(_modelMatrix);_vertex.positionScreen.copy(_vertex.positionWorld).applyMatrix4(_viewProjectionMatrix);var invW=1/_vertex.positionScreen.w;_vertex.positionScreen.x*=invW;_vertex.positionScreen.y*=invW;_vertex.positionScreen.z*=invW;_vertex.visible=!(_vertex.positionScreen.x<-1||_vertex.positionScreen.x>1||_vertex.positionScreen.y<-1||_vertex.positionScreen.y>1||_vertex.positionScreen.z<-1||_vertex.positionScreen.z>1)}for(f=0,fl=faces.length;f<fl;f++){face=faces[f];var material=isFaceMaterial===true?objectMaterials.materials[face.materialIndex]:object.material;if(material===undefined)continue;var side=material.side;v1=_vertexPool[face.a];v2=_vertexPool[face.b];v3=_vertexPool[face.c];_points3[0]=v1.positionScreen;_points3[1]=v2.positionScreen;_points3[2]=v3.positionScreen;if(v1.visible===true||v2.visible===true||v3.visible===true||_clipBox.isIntersectionBox(_boundingBox.setFromPoints(_points3))){visible=(v3.positionScreen.x-v1.positionScreen.x)*(v2.positionScreen.y-v1.positionScreen.y)-(v3.positionScreen.y-v1.positionScreen.y)*(v2.positionScreen.x-v1.positionScreen.x)<0;if(side===THREE.DoubleSide||visible===(side===THREE.FrontSide)){_face=getNextFace3InPool();_face.id=object.id;_face.v1.copy(v1);_face.v2.copy(v2);_face.v3.copy(v3)}else{continue}}else{continue}_face.normalModel.copy(face.normal);if(visible===false&&(side===THREE.BackSide||side===THREE.DoubleSide)){_face.normalModel.negate()}_face.normalModel.applyMatrix3(_normalMatrix).normalize();_face.normalModelView.copy(_face.normalModel).applyMatrix3(_normalViewMatrix);_face.centroidModel.copy(face.centroid).applyMatrix4(_modelMatrix);faceVertexNormals=face.vertexNormals;for(n=0,nl=Math.min(faceVertexNormals.length,3);n<nl;n++){var normalModel=_face.vertexNormalsModel[n];normalModel.copy(faceVertexNormals[n]);if(visible===false&&(side===THREE.BackSide||side===THREE.DoubleSide)){normalModel.negate()}normalModel.applyMatrix3(_normalMatrix).normalize();var normalModelView=_face.vertexNormalsModelView[n];normalModelView.copy(normalModel).applyMatrix3(_normalViewMatrix)}_face.vertexNormalsLength=faceVertexNormals.length;for(c=0,cl=Math.min(faceVertexUvs.length,3);c<cl;c++){uvs=faceVertexUvs[c][f];if(uvs===undefined)continue;for(u=0,ul=uvs.length;u<ul;u++){_face.uvs[c][u]=uvs[u]}}_face.color=face.color;_face.material=material;_centroid.copy(_face.centroidModel).applyProjection(_viewProjectionMatrix);_face.z=_centroid.z;_renderData.elements.push(_face)}}else if(object instanceof THREE.Line){_modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix,_modelMatrix);vertices=object.geometry.vertices;v1=getNextVertexInPool();v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);var step=object.type===THREE.LinePieces?2:1;for(v=1,vl=vertices.length;v<vl;v++){v1=getNextVertexInPool();v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);if((v+1)%step>0)continue;v2=_vertexPool[_vertexCount-2];_clippedVertex1PositionScreen.copy(v1.positionScreen);_clippedVertex2PositionScreen.copy(v2.positionScreen);if(clipLine(_clippedVertex1PositionScreen,_clippedVertex2PositionScreen)===true){_clippedVertex1PositionScreen.multiplyScalar(1/_clippedVertex1PositionScreen.w);_clippedVertex2PositionScreen.multiplyScalar(1/_clippedVertex2PositionScreen.w);_line=getNextLineInPool();_line.id=object.id;_line.v1.positionScreen.copy(_clippedVertex1PositionScreen);_line.v2.positionScreen.copy(_clippedVertex2PositionScreen);_line.z=Math.max(_clippedVertex1PositionScreen.z,_clippedVertex2PositionScreen.z);_line.material=object.material;if(object.material.vertexColors===THREE.VertexColors){_line.vertexColors[0].copy(object.geometry.colors[v]);_line.vertexColors[1].copy(object.geometry.colors[v-1])}_renderData.elements.push(_line)}}}}for(o=0,ol=_renderData.sprites.length;o<ol;o++){object=_renderData.sprites[o].object;_modelMatrix=object.matrixWorld;if(object instanceof THREE.Particle){_vector4.set(_modelMatrix.elements[12],_modelMatrix.elements[13],_modelMatrix.elements[14],1);_vector4.applyMatrix4(_viewProjectionMatrix);var invW=1/_vector4.w;_vector4.z*=invW;if(_vector4.z>0&&_vector4.z<1){_particle=getNextParticleInPool();_particle.id=object.id;_particle.x=_vector4.x*invW;_particle.y=_vector4.y*invW;_particle.z=_vector4.z;_particle.object=object;_particle.rotation=object.rotation.z;_particle.scale.x=object.scale.x*Math.abs(_particle.x-(_vector4.x+camera.projectionMatrix.elements[0])/(_vector4.w+camera.projectionMatrix.elements[12]));_particle.scale.y=object.scale.y*Math.abs(_particle.y-(_vector4.y+camera.projectionMatrix.elements[5])/(_vector4.w+camera.projectionMatrix.elements[13]));_particle.material=object.material;_renderData.elements.push(_particle)}}}if(sortElements===true)_renderData.elements.sort(painterSort);return _renderData};function getNextObjectInPool(){if(_objectCount===_objectPoolLength){var object=new THREE.RenderableObject;_objectPool.push(object);_objectPoolLength++;_objectCount++;return object}return _objectPool[_objectCount++]}function getNextVertexInPool(){if(_vertexCount===_vertexPoolLength){var vertex=new THREE.RenderableVertex;_vertexPool.push(vertex);_vertexPoolLength++;_vertexCount++;return vertex}return _vertexPool[_vertexCount++]}function getNextFace3InPool(){if(_face3Count===_face3PoolLength){var face=new THREE.RenderableFace3;_face3Pool.push(face);_face3PoolLength++;_face3Count++;return face}return _face3Pool[_face3Count++]}function getNextLineInPool(){if(_lineCount===_linePoolLength){var line=new THREE.RenderableLine;_linePool.push(line);_linePoolLength++;_lineCount++;return line}return _linePool[_lineCount++]}function getNextParticleInPool(){if(_particleCount===_particlePoolLength){var particle=new THREE.RenderableParticle;_particlePool.push(particle);_particlePoolLength++;_particleCount++;return particle}return _particlePool[_particleCount++]}function painterSort(a,b){if(a.z!==b.z){return b.z-a.z}else if(a.id!==b.id){return a.id-b.id}else{return 0}}function clipLine(s1,s2){var alpha1=0,alpha2=1,bc1near=s1.z+s1.w,bc2near=s2.z+s2.w,bc1far=-s1.z+s1.w,bc2far=-s2.z+s2.w;if(bc1near>=0&&bc2near>=0&&bc1far>=0&&bc2far>=0){return true}else if(bc1near<0&&bc2near<0||bc1far<0&&bc2far<0){return false}else{if(bc1near<0){alpha1=Math.max(alpha1,bc1near/(bc1near-bc2near))}else if(bc2near<0){alpha2=Math.min(alpha2,bc1near/(bc1near-bc2near))}if(bc1far<0){alpha1=Math.max(alpha1,bc1far/(bc1far-bc2far))}else if(bc2far<0){alpha2=Math.min(alpha2,bc1far/(bc1far-bc2far))}if(alpha2<alpha1){return false}else{s1.lerp(s2,alpha1);s2.lerp(s1,1-alpha2);return true}}}};THREE.Face3=function(a,b,c,normal,color,materialIndex){this.a=a;this.b=b;this.c=c;this.normal=normal instanceof THREE.Vector3?normal:new THREE.Vector3;this.vertexNormals=normal instanceof Array?normal:[];this.color=color instanceof THREE.Color?color:new THREE.Color;this.vertexColors=color instanceof Array?color:[];this.vertexTangents=[];this.materialIndex=materialIndex!==undefined?materialIndex:0;this.centroid=new THREE.Vector3};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var face=new THREE.Face3(this.a,this.b,this.c);face.normal.copy(this.normal);face.color.copy(this.color);face.centroid.copy(this.centroid);face.materialIndex=this.materialIndex;var i,il;for(i=0,il=this.vertexNormals.length;i<il;i++)face.vertexNormals[i]=this.vertexNormals[i].clone();for(i=0,il=this.vertexColors.length;i<il;i++)face.vertexColors[i]=this.vertexColors[i].clone();for(i=0,il=this.vertexTangents.length;i<il;i++)face.vertexTangents[i]=this.vertexTangents[i].clone();return face}};THREE.Face4=function(a,b,c,d,normal,color,materialIndex){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(a,b,c,normal,color,materialIndex)};THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=false;this.dynamic=true;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.tangentsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.buffersNeedUpdate=false};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(matrix){var normalMatrix=(new THREE.Matrix3).getNormalMatrix(matrix);for(var i=0,il=this.vertices.length;i<il;i++){var vertex=this.vertices[i];vertex.applyMatrix4(matrix)}for(var i=0,il=this.faces.length;i<il;i++){var face=this.faces[i];face.normal.applyMatrix3(normalMatrix).normalize();for(var j=0,jl=face.vertexNormals.length;j<jl;j++){face.vertexNormals[j].applyMatrix3(normalMatrix).normalize()}face.centroid.applyMatrix4(matrix)}if(this.boundingBox instanceof THREE.Box3){this.computeBoundingBox()}if(this.boundingSphere instanceof THREE.Sphere){this.computeBoundingSphere()}},computeCentroids:function(){var f,fl,face;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.centroid.set(0,0,0);face.centroid.add(this.vertices[face.a]);face.centroid.add(this.vertices[face.b]);face.centroid.add(this.vertices[face.c]);face.centroid.divideScalar(3)}},computeFaceNormals:function(){var cb=new THREE.Vector3,ab=new THREE.Vector3;for(var f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f];var vA=this.vertices[face.a];var vB=this.vertices[face.b];var vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);cb.normalize();face.normal.copy(cb)}},computeVertexNormals:function(areaWeighted){var v,vl,f,fl,face,vertices;if(this.__tmpVertices===undefined){this.__tmpVertices=new Array(this.vertices.length);vertices=this.__tmpVertices;for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v]=new THREE.Vector3}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{vertices=this.__tmpVertices;for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v].set(0,0,0)}}if(areaWeighted){var vA,vB,vC,vD;var cb=new THREE.Vector3,ab=new THREE.Vector3,db=new THREE.Vector3,dc=new THREE.Vector3,bc=new THREE.Vector3;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vA=this.vertices[face.a];vB=this.vertices[face.b];vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);vertices[face.a].add(cb);vertices[face.b].add(cb);vertices[face.c].add(cb)}}else{for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vertices[face.a].add(face.normal);vertices[face.b].add(face.normal);vertices[face.c].add(face.normal)}}for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v].normalize()}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.vertexNormals[0].copy(vertices[face.a]);face.vertexNormals[1].copy(vertices[face.b]);face.vertexNormals[2].copy(vertices[face.c])}},computeMorphNormals:function(){var i,il,f,fl,face;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];if(!face.__originalFaceNormal){face.__originalFaceNormal=face.normal.clone()}else{face.__originalFaceNormal.copy(face.normal)}if(!face.__originalVertexNormals)face.__originalVertexNormals=[];for(i=0,il=face.vertexNormals.length;i<il;i++){if(!face.__originalVertexNormals[i]){face.__originalVertexNormals[i]=face.vertexNormals[i].clone()}else{face.__originalVertexNormals[i].copy(face.vertexNormals[i])}}}var tmpGeo=new THREE.Geometry;tmpGeo.faces=this.faces;for(i=0,il=this.morphTargets.length;i<il;i++){if(!this.morphNormals[i]){this.morphNormals[i]={};this.morphNormals[i].faceNormals=[];this.morphNormals[i].vertexNormals=[];var dstNormalsFace=this.morphNormals[i].faceNormals;var dstNormalsVertex=this.morphNormals[i].vertexNormals;var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];faceNormal=new THREE.Vector3;vertexNormals={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3};dstNormalsFace.push(faceNormal);dstNormalsVertex.push(vertexNormals)}}var morphNormals=this.morphNormals[i];tmpGeo.vertices=this.morphTargets[i].vertices;tmpGeo.computeFaceNormals();tmpGeo.computeVertexNormals();var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];faceNormal=morphNormals.faceNormals[f];vertexNormals=morphNormals.vertexNormals[f];faceNormal.copy(face.normal);vertexNormals.a.copy(face.vertexNormals[0]);vertexNormals.b.copy(face.vertexNormals[1]);vertexNormals.c.copy(face.vertexNormals[2])}}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.normal=face.__originalFaceNormal;face.vertexNormals=face.__originalVertexNormals}},computeTangents:function(){var f,fl,v,vl,i,il,vertexIndex,face,uv,vA,vB,vC,uvA,uvB,uvC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r,t,test,tan1=[],tan2=[],sdir=new THREE.Vector3,tdir=new THREE.Vector3,tmp=new THREE.Vector3,tmp2=new THREE.Vector3,n=new THREE.Vector3,w;for(v=0,vl=this.vertices.length;v<vl;v++){tan1[v]=new THREE.Vector3;tan2[v]=new THREE.Vector3}function handleTriangle(context,a,b,c,ua,ub,uc){vA=context.vertices[a];vB=context.vertices[b];vC=context.vertices[c];uvA=uv[ua];uvB=uv[ub];uvC=uv[uc];x1=vB.x-vA.x;x2=vC.x-vA.x;y1=vB.y-vA.y;y2=vC.y-vA.y;z1=vB.z-vA.z;z2=vC.z-vA.z;s1=uvB.x-uvA.x;s2=uvC.x-uvA.x;t1=uvB.y-uvA.y;t2=uvC.y-uvA.y;r=1/(s1*t2-s2*t1);sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r);tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir)}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];uv=this.faceVertexUvs[0][f];handleTriangle(this,face.a,face.b,face.c,0,1,2)}var faceIndex=["a","b","c","d"];for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];for(i=0;i<Math.min(face.vertexNormals.length,3);i++){n.copy(face.vertexNormals[i]);vertexIndex=face[faceIndex[i]];t=tan1[vertexIndex];tmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();tmp2.crossVectors(face.vertexNormals[i],t);test=tmp2.dot(tan2[vertexIndex]);w=test<0?-1:1;face.vertexTangents[i]=new THREE.Vector4(tmp.x,tmp.y,tmp.z,w)}}this.hasTangents=true},computeLineDistances:function(){var d=0;var vertices=this.vertices;for(var i=0,il=vertices.length;i<il;i++){if(i>0){d+=vertices[i].distanceTo(vertices[i-1])}this.lineDistances[i]=d}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3}this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere}this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var verticesMap={};var unique=[],changes=[];var v,key;var precisionPoints=4;var precision=Math.pow(10,precisionPoints);var i,il,face;var indices,k,j,jl,u;this.__tmpVertices=undefined;for(i=0,il=this.vertices.length;i<il;i++){v=this.vertices[i];key=Math.round(v.x*precision)+"_"+Math.round(v.y*precision)+"_"+Math.round(v.z*precision);if(verticesMap[key]===undefined){verticesMap[key]=i;unique.push(this.vertices[i]);changes[i]=unique.length-1}else{changes[i]=changes[verticesMap[key]]}}var faceIndicesToRemove=[];for(i=0,il=this.faces.length;i<il;i++){face=this.faces[i];face.a=changes[face.a];face.b=changes[face.b];face.c=changes[face.c];indices=[face.a,face.b,face.c];var dupIndex=-1;for(var n=0;n<3;n++){if(indices[n]==indices[(n+1)%3]){dupIndex=n;faceIndicesToRemove.push(i);break}}}for(i=faceIndicesToRemove.length-1;i>=0;i--){var idx=faceIndicesToRemove[i];this.faces.splice(idx,1);for(j=0,jl=this.faceVertexUvs.length;j<jl;j++){this.faceVertexUvs[j].splice(idx,1)}}var diff=this.vertices.length-unique.length;this.vertices=unique;return diff},clone:function(){var geometry=new THREE.Geometry;var vertices=this.vertices;for(var i=0,il=vertices.length;i<il;i++){geometry.vertices.push(vertices[i].clone())}var faces=this.faces;for(var i=0,il=faces.length;i<il;i++){geometry.faces.push(faces[i].clone())}var uvs=this.faceVertexUvs[0];for(var i=0,il=uvs.length;i<il;i++){var uv=uvs[i],uvCopy=[];for(var j=0,jl=uv.length;j<jl;j++){uvCopy.push(new THREE.Vector2(uv[j].x,uv[j].y))}geometry.faceVertexUvs[0].push(uvCopy)}return geometry},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.dynamic=true;this.offsets=[];this.boundingBox=null;this.boundingSphere=null;this.hasTangents=false;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(matrix){var positionArray;var normalArray;if(this.attributes["position"])positionArray=this.attributes["position"].array;if(this.attributes["normal"])normalArray=this.attributes["normal"].array;if(positionArray!==undefined){matrix.multiplyVector3Array(positionArray);this.verticesNeedUpdate=true}if(normalArray!==undefined){var normalMatrix=(new THREE.Matrix3).getNormalMatrix(matrix);normalMatrix.multiplyVector3Array(normalArray);this.normalizeNormals();this.normalsNeedUpdate=true}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3}var positions=this.attributes["position"].array;if(positions){var bb=this.boundingBox;var x,y,z;if(positions.length>=3){bb.min.x=bb.max.x=positions[0];bb.min.y=bb.max.y=positions[1];bb.min.z=bb.max.z=positions[2]}for(var i=3,il=positions.length;i<il;i+=3){x=positions[i];y=positions[i+1];z=positions[i+2];if(x<bb.min.x){bb.min.x=x}else if(x>bb.max.x){bb.max.x=x}if(y<bb.min.y){bb.min.y=y}else if(y>bb.max.y){bb.max.y=y}if(z<bb.min.z){bb.min.z=z}else if(z>bb.max.z){bb.max.z=z}}}if(positions===undefined||positions.length===0){
this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){var box=new THREE.Box3;var vector=new THREE.Vector3;return function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere}var positions=this.attributes["position"].array;if(positions){var center=this.boundingSphere.center;for(var i=0,il=positions.length;i<il;i+=3){vector.set(positions[i],positions[i+1],positions[i+2]);box.addPoint(vector)}box.center(center);var maxRadiusSq=0;for(var i=0,il=positions.length;i<il;i+=3){vector.set(positions[i],positions[i+1],positions[i+2]);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(vector))}this.boundingSphere.radius=Math.sqrt(maxRadiusSq)}}}(),computeVertexNormals:function(){if(this.attributes["position"]){var i,il;var j,jl;var nVertexElements=this.attributes["position"].array.length;if(this.attributes["normal"]===undefined){this.attributes["normal"]={itemSize:3,array:new Float32Array(nVertexElements)}}else{for(i=0,il=this.attributes["normal"].array.length;i<il;i++){this.attributes["normal"].array[i]=0}}var positions=this.attributes["position"].array;var normals=this.attributes["normal"].array;var vA,vB,vC,x,y,z,pA=new THREE.Vector3,pB=new THREE.Vector3,pC=new THREE.Vector3,cb=new THREE.Vector3,ab=new THREE.Vector3;if(this.attributes["index"]){var indices=this.attributes["index"].array;var offsets=this.offsets;for(j=0,jl=offsets.length;j<jl;++j){var start=offsets[j].start;var count=offsets[j].count;var index=offsets[j].index;for(i=start,il=start+count;i<il;i+=3){vA=index+indices[i];vB=index+indices[i+1];vC=index+indices[i+2];x=positions[vA*3];y=positions[vA*3+1];z=positions[vA*3+2];pA.set(x,y,z);x=positions[vB*3];y=positions[vB*3+1];z=positions[vB*3+2];pB.set(x,y,z);x=positions[vC*3];y=positions[vC*3+1];z=positions[vC*3+2];pC.set(x,y,z);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[vA*3]+=cb.x;normals[vA*3+1]+=cb.y;normals[vA*3+2]+=cb.z;normals[vB*3]+=cb.x;normals[vB*3+1]+=cb.y;normals[vB*3+2]+=cb.z;normals[vC*3]+=cb.x;normals[vC*3+1]+=cb.y;normals[vC*3+2]+=cb.z}}}else{for(i=0,il=positions.length;i<il;i+=9){x=positions[i];y=positions[i+1];z=positions[i+2];pA.set(x,y,z);x=positions[i+3];y=positions[i+4];z=positions[i+5];pB.set(x,y,z);x=positions[i+6];y=positions[i+7];z=positions[i+8];pC.set(x,y,z);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[i]=cb.x;normals[i+1]=cb.y;normals[i+2]=cb.z;normals[i+3]=cb.x;normals[i+4]=cb.y;normals[i+5]=cb.z;normals[i+6]=cb.x;normals[i+7]=cb.y;normals[i+8]=cb.z}}this.normalizeNormals();this.normalsNeedUpdate=true}},normalizeNormals:function(){var normals=this.attributes["normal"].array;var x,y,z,n;for(var i=0,il=normals.length;i<il;i+=3){x=normals[i];y=normals[i+1];z=normals[i+2];n=1/Math.sqrt(x*x+y*y+z*z);normals[i]*=n;normals[i+1]*=n;normals[i+2]*=n}},computeTangents:function(){if(this.attributes["index"]===undefined||this.attributes["position"]===undefined||this.attributes["normal"]===undefined||this.attributes["uv"]===undefined){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");return}var indices=this.attributes["index"].array;var positions=this.attributes["position"].array;var normals=this.attributes["normal"].array;var uvs=this.attributes["uv"].array;var nVertices=positions.length/3;if(this.attributes["tangent"]===undefined){var nTangentElements=4*nVertices;this.attributes["tangent"]={itemSize:4,array:new Float32Array(nTangentElements)}}var tangents=this.attributes["tangent"].array;var tan1=[],tan2=[];for(var k=0;k<nVertices;k++){tan1[k]=new THREE.Vector3;tan2[k]=new THREE.Vector3}var xA,yA,zA,xB,yB,zB,xC,yC,zC,uA,vA,uB,vB,uC,vC,x1,x2,y1,y2,z1,z2,s1,s2,t1,t2,r;var sdir=new THREE.Vector3,tdir=new THREE.Vector3;function handleTriangle(a,b,c){xA=positions[a*3];yA=positions[a*3+1];zA=positions[a*3+2];xB=positions[b*3];yB=positions[b*3+1];zB=positions[b*3+2];xC=positions[c*3];yC=positions[c*3+1];zC=positions[c*3+2];uA=uvs[a*2];vA=uvs[a*2+1];uB=uvs[b*2];vB=uvs[b*2+1];uC=uvs[c*2];vC=uvs[c*2+1];x1=xB-xA;x2=xC-xA;y1=yB-yA;y2=yC-yA;z1=zB-zA;z2=zC-zA;s1=uB-uA;s2=uC-uA;t1=vB-vA;t2=vC-vA;r=1/(s1*t2-s2*t1);sdir.set((t2*x1-t1*x2)*r,(t2*y1-t1*y2)*r,(t2*z1-t1*z2)*r);tdir.set((s1*x2-s2*x1)*r,(s1*y2-s2*y1)*r,(s1*z2-s2*z1)*r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir)}var i,il;var j,jl;var iA,iB,iC;var offsets=this.offsets;for(j=0,jl=offsets.length;j<jl;++j){var start=offsets[j].start;var count=offsets[j].count;var index=offsets[j].index;for(i=start,il=start+count;i<il;i+=3){iA=index+indices[i];iB=index+indices[i+1];iC=index+indices[i+2];handleTriangle(iA,iB,iC)}}var tmp=new THREE.Vector3,tmp2=new THREE.Vector3;var n=new THREE.Vector3,n2=new THREE.Vector3;var w,t,test;function handleVertex(v){n.x=normals[v*3];n.y=normals[v*3+1];n.z=normals[v*3+2];n2.copy(n);t=tan1[v];tmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();tmp2.crossVectors(n2,t);test=tmp2.dot(tan2[v]);w=test<0?-1:1;tangents[v*4]=tmp.x;tangents[v*4+1]=tmp.y;tangents[v*4+2]=tmp.z;tangents[v*4+3]=w}for(j=0,jl=offsets.length;j<jl;++j){var start=offsets[j].start;var count=offsets[j].count;var index=offsets[j].index;for(i=start,il=start+count;i<il;i+=3){iA=index+indices[i];iB=index+indices[i+1];iC=index+indices[i+2];handleVertex(iA);handleVertex(iB);handleVertex(iC)}}this.hasTangents=true;this.tangentsNeedUpdate=true},clone:function(){var geometry=new THREE.BufferGeometry;var types=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(var attr in this.attributes){var sourceAttr=this.attributes[attr];var sourceArray=sourceAttr.array;var attribute={itemSize:sourceAttr.itemSize,numItems:sourceAttr.numItems,array:null};for(var i=0,il=types.length;i<il;i++){var type=types[i];if(sourceArray instanceof type){attribute.array=new type(sourceArray);break}}geometry.attributes[attr]=attribute}for(var i=0,il=this.offsets.length;i<il;i++){var offset=this.offsets[i];geometry.offsets.push({start:offset.start,index:offset.index,count:offset.count})}return geometry},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var m1=new THREE.Matrix4;return function(vector){m1.lookAt(this.position,vector,this.up);this.quaternion.setFromRotationMatrix(m1)}}();THREE.Camera.prototype.clone=function(camera){if(camera===undefined)camera=new THREE.Camera;THREE.Object3D.prototype.clone.call(this,camera);camera.matrixWorldInverse.copy(this.matrixWorldInverse);camera.projectionMatrix.copy(this.projectionMatrix);camera.projectionMatrixInverse.copy(this.projectionMatrixInverse);return camera};THREE.OrthographicCamera=function(left,right,top,bottom,near,far){THREE.Camera.call(this);this.left=left;this.right=right;this.top=top;this.bottom=bottom;this.near=near!==undefined?near:.1;this.far=far!==undefined?far:2e3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.OrthographicCamera.prototype.clone=function(){var camera=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,camera);camera.left=this.left;camera.right=this.right;camera.top=this.top;camera.bottom=this.bottom;camera.near=this.near;camera.far=this.far;return camera};THREE.PerspectiveCamera=function(fov,aspect,near,far){THREE.Camera.call(this);this.fov=fov!==undefined?fov:50;this.aspect=aspect!==undefined?aspect:1;this.near=near!==undefined?near:.1;this.far=far!==undefined?far:2e3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(focalLength,frameHeight){if(frameHeight===undefined)frameHeight=24;this.fov=2*THREE.Math.radToDeg(Math.atan(frameHeight/(focalLength*2)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(fullWidth,fullHeight,x,y,width,height){this.fullWidth=fullWidth;this.fullHeight=fullHeight;this.x=x;this.y=y;this.width=width;this.height=height;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var aspect=this.fullWidth/this.fullHeight;var top=Math.tan(THREE.Math.degToRad(this.fov*.5))*this.near;var bottom=-top;var left=aspect*bottom;var right=aspect*top;var width=Math.abs(right-left);var height=Math.abs(top-bottom);this.projectionMatrix.makeFrustum(left+this.x*width/this.fullWidth,left+(this.x+this.width)*width/this.fullWidth,top-(this.y+this.height)*height/this.fullHeight,top-this.y*height/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.PerspectiveCamera.prototype.clone=function(){var camera=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,camera);camera.fov=this.fov;camera.aspect=this.aspect;camera.near=this.near;camera.far=this.far;return camera};THREE.Light=function(hex){THREE.Object3D.call(this);this.color=new THREE.Color(hex)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(light){if(light===undefined)light=new THREE.Light;THREE.Object3D.prototype.clone.call(this,light);light.color.copy(this.color);return light};THREE.AmbientLight=function(hex){THREE.Light.call(this,hex)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var light=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,light);return light};THREE.AreaLight=function(hex,intensity){THREE.Light.call(this,hex);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=intensity!==undefined?intensity:1;this.width=1;this.height=1;this.constantAttenuation=1.5;this.linearAttenuation=.5;this.quadraticAttenuation=.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(hex,intensity){THREE.Light.call(this,hex);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=intensity!==undefined?intensity:1;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraLeft=-500;this.shadowCameraRight=500;this.shadowCameraTop=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowCascade=false;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,.99,.998];this.shadowCascadeFarZ=[.99,.998,1];this.shadowCascadeArray=[];this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var light=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,light);light.target=this.target.clone();light.intensity=this.intensity;light.castShadow=this.castShadow;light.onlyShadow=this.onlyShadow;return light};THREE.HemisphereLight=function(skyColorHex,groundColorHex,intensity){THREE.Light.call(this,skyColorHex);this.position.set(0,100,0);this.groundColor=new THREE.Color(groundColorHex);this.intensity=intensity!==undefined?intensity:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var light=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,light);light.groundColor.copy(this.groundColor);light.intensity=this.intensity;return light};THREE.PointLight=function(hex,intensity,distance){THREE.Light.call(this,hex);this.intensity=intensity!==undefined?intensity:1;this.distance=distance!==undefined?distance:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var light=new THREE.PointLight;THREE.Light.prototype.clone.call(this,light);light.intensity=this.intensity;light.distance=this.distance;return light};THREE.SpotLight=function(hex,intensity,distance,angle,exponent){THREE.Light.call(this,hex);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=intensity!==undefined?intensity:1;this.distance=distance!==undefined?distance:0;this.angle=angle!==undefined?angle:Math.PI/3;this.exponent=exponent!==undefined?exponent:10;this.castShadow=false;this.onlyShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5e3;this.shadowCameraFov=50;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapWidth=512;this.shadowMapHeight=512;this.shadowMap=null;this.shadowMapSize=null;this.shadowCamera=null;this.shadowMatrix=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var light=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,light);light.target=this.target.clone();light.intensity=this.intensity;light.distance=this.distance;light.angle=this.angle;light.exponent=this.exponent;light.castShadow=this.castShadow;light.onlyShadow=this.onlyShadow;return light};THREE.Loader=function(showStatus){this.showStatus=showStatus;this.statusDomElement=showStatus?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");e.style.position="absolute";e.style.right="0px";e.style.top="0px";e.style.fontSize="0.8em";e.style.textAlign="left";e.style.background="rgba(0,0,0,0.25)";e.style.color="#fff";e.style.width="120px";e.style.padding="0.5em 0.5em 0.5em 0.5em";e.style.zIndex=1e3;e.innerHTML="Loading ...";return e},updateProgress:function(progress){var message="Loaded ";if(progress.total){message+=(100*progress.loaded/progress.total).toFixed(0)+"%"}else{message+=(progress.loaded/1e3).toFixed(2)+" KB"}this.statusDomElement.innerHTML=message},extractUrlBase:function(url){var parts=url.split("/");parts.pop();return(parts.length<1?".":parts.join("/"))+"/"},initMaterials:function(materials,texturePath){var array=[];for(var i=0;i<materials.length;++i){array[i]=THREE.Loader.prototype.createMaterial(materials[i],texturePath)}return array},needsTangents:function(materials){for(var i=0,il=materials.length;i<il;i++){var m=materials[i];if(m instanceof THREE.ShaderMaterial)return true}return false},createMaterial:function(m,texturePath){var _this=this;function is_pow2(n){var l=Math.log(n)/Math.LN2;return Math.floor(l)==l}function nearest_pow2(n){var l=Math.log(n)/Math.LN2;return Math.pow(2,Math.round(l))}function load_image(where,url){var image=new Image;image.onload=function(){if(!is_pow2(this.width)||!is_pow2(this.height)){var width=nearest_pow2(this.width);var height=nearest_pow2(this.height);where.image.width=width;where.image.height=height;where.image.getContext("2d").drawImage(this,0,0,width,height)}else{where.image=this}where.needsUpdate=true};image.crossOrigin=_this.crossOrigin;image.src=url}function create_texture(where,name,sourceFile,repeat,offset,wrap,anisotropy){var isCompressed=/\.dds$/i.test(sourceFile);var fullPath=texturePath+"/"+sourceFile;if(isCompressed){var texture=THREE.ImageUtils.loadCompressedTexture(fullPath);where[name]=texture}else{var texture=document.createElement("canvas");where[name]=new THREE.Texture(texture)}where[name].sourceFile=sourceFile;if(repeat){where[name].repeat.set(repeat[0],repeat[1]);if(repeat[0]!==1)where[name].wrapS=THREE.RepeatWrapping;if(repeat[1]!==1)where[name].wrapT=THREE.RepeatWrapping}if(offset){where[name].offset.set(offset[0],offset[1])}if(wrap){var wrapMap={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(wrapMap[wrap[0]]!==undefined)where[name].wrapS=wrapMap[wrap[0]];if(wrapMap[wrap[1]]!==undefined)where[name].wrapT=wrapMap[wrap[1]]}if(anisotropy){where[name].anisotropy=anisotropy}if(!isCompressed){load_image(where[name],fullPath)}}function rgb2hex(rgb){return(rgb[0]*255<<16)+(rgb[1]*255<<8)+rgb[2]*255}var mtype="MeshLambertMaterial";var mpars={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(m.shading){var shading=m.shading.toLowerCase();if(shading==="phong")mtype="MeshPhongMaterial";else if(shading==="basic")mtype="MeshBasicMaterial"}if(m.blending!==undefined&&THREE[m.blending]!==undefined){mpars.blending=THREE[m.blending]}if(m.transparent!==undefined||m.opacity<1){mpars.transparent=m.transparent}if(m.depthTest!==undefined){mpars.depthTest=m.depthTest}if(m.depthWrite!==undefined){mpars.depthWrite=m.depthWrite}if(m.visible!==undefined){mpars.visible=m.visible}if(m.flipSided!==undefined){mpars.side=THREE.BackSide}if(m.doubleSided!==undefined){mpars.side=THREE.DoubleSide}if(m.wireframe!==undefined){mpars.wireframe=m.wireframe}if(m.vertexColors!==undefined){if(m.vertexColors==="face"){mpars.vertexColors=THREE.FaceColors}else if(m.vertexColors){mpars.vertexColors=THREE.VertexColors}}if(m.colorDiffuse){mpars.color=rgb2hex(m.colorDiffuse)}else if(m.DbgColor){mpars.color=m.DbgColor}if(m.colorSpecular){mpars.specular=rgb2hex(m.colorSpecular)}if(m.colorAmbient){mpars.ambient=rgb2hex(m.colorAmbient)}if(m.transparency){mpars.opacity=m.transparency}if(m.specularCoef){mpars.shininess=m.specularCoef}if(m.mapDiffuse&&texturePath){create_texture(mpars,"map",m.mapDiffuse,m.mapDiffuseRepeat,m.mapDiffuseOffset,m.mapDiffuseWrap,m.mapDiffuseAnisotropy)}if(m.mapLight&&texturePath){create_texture(mpars,"lightMap",m.mapLight,m.mapLightRepeat,m.mapLightOffset,m.mapLightWrap,m.mapLightAnisotropy)}if(m.mapBump&&texturePath){create_texture(mpars,"bumpMap",m.mapBump,m.mapBumpRepeat,m.mapBumpOffset,m.mapBumpWrap,m.mapBumpAnisotropy)}if(m.mapNormal&&texturePath){create_texture(mpars,"normalMap",m.mapNormal,m.mapNormalRepeat,m.mapNormalOffset,m.mapNormalWrap,m.mapNormalAnisotropy)}if(m.mapSpecular&&texturePath){create_texture(mpars,"specularMap",m.mapSpecular,m.mapSpecularRepeat,m.mapSpecularOffset,m.mapSpecularWrap,m.mapSpecularAnisotropy)}if(m.mapBumpScale){mpars.bumpScale=m.mapBumpScale}if(m.mapNormal){var shader=THREE.ShaderLib["normalmap"];var uniforms=THREE.UniformsUtils.clone(shader.uniforms);uniforms["tNormal"].value=mpars.normalMap;if(m.mapNormalFactor){uniforms["uNormalScale"].value.set(m.mapNormalFactor,m.mapNormalFactor)}if(mpars.map){uniforms["tDiffuse"].value=mpars.map;uniforms["enableDiffuse"].value=true}if(mpars.specularMap){uniforms["tSpecular"].value=mpars.specularMap;uniforms["enableSpecular"].value=true}if(mpars.lightMap){uniforms["tAO"].value=mpars.lightMap;uniforms["enableAO"].value=true}uniforms["uDiffuseColor"].value.setHex(mpars.color);uniforms["uSpecularColor"].value.setHex(mpars.specular);uniforms["uAmbientColor"].value.setHex(mpars.ambient);uniforms["uShininess"].value=mpars.shininess;if(mpars.opacity!==undefined){uniforms["uOpacity"].value=mpars.opacity}var parameters={fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:true,fog:true};var material=new THREE.ShaderMaterial(parameters);if(mpars.transparent){material.transparent=true}}else{var material=new THREE[mtype](mpars)}if(m.DbgName!==undefined)material.name=m.DbgName;return material}};THREE.XHRLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var request=new XMLHttpRequest;if(onLoad!==undefined){request.addEventListener("load",function(event){onLoad(event.target.responseText);scope.manager.itemEnd(url)},false)}if(onProgress!==undefined){request.addEventListener("progress",function(event){onProgress(event)},false)}if(onError!==undefined){request.addEventListener("error",function(event){onError(event)},false)}if(this.crossOrigin!==undefined)request.crossOrigin=this.crossOrigin;request.open("GET",url,true);request.send(null);scope.manager.itemStart(url)},setCrossOrigin:function(value){this.crossOrigin=value}};THREE.ImageLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var image=document.createElement("img");if(onLoad!==undefined){image.addEventListener("load",function(event){scope.manager.itemEnd(url);onLoad(this)},false)}if(onProgress!==undefined){image.addEventListener("progress",function(event){onProgress(event)},false)}if(onError!==undefined){image.addEventListener("error",function(event){onError(event)},false)}if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;image.src=url;scope.manager.itemStart(url);return image},setCrossOrigin:function(value){this.crossOrigin=value}};THREE.JSONLoader=function(showStatus){THREE.Loader.call(this,showStatus);this.withCredentials=false};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(url,callback,texturePath){var scope=this;texturePath=texturePath&&typeof texturePath==="string"?texturePath:this.extractUrlBase(url);this.onLoadStart();this.loadAjaxJSON(this,url,callback,texturePath)};THREE.JSONLoader.prototype.loadAjaxJSON=function(context,url,callback,texturePath,callbackProgress){var xhr=new XMLHttpRequest;var length=0;xhr.onreadystatechange=function(){if(xhr.readyState===xhr.DONE){if(xhr.status===200||xhr.status===0){if(xhr.responseText){var json=JSON.parse(xhr.responseText);var result=context.parse(json,texturePath);callback(result.geometry,result.materials)}else{console.warn("THREE.JSONLoader: ["+url+"] seems to be unreachable or file there is empty")}context.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load ["+url+"] ["+xhr.status+"]")}}else if(xhr.readyState===xhr.LOADING){if(callbackProgress){if(length===0){length=xhr.getResponseHeader("Content-Length")}callbackProgress({total:length,loaded:xhr.responseText.length})}}else if(xhr.readyState===xhr.HEADERS_RECEIVED){if(callbackProgress!==undefined){length=xhr.getResponseHeader("Content-Length")}}};xhr.open("GET",url,true);xhr.withCredentials=this.withCredentials;xhr.send(null)};THREE.JSONLoader.prototype.parse=function(json,texturePath){var scope=this,geometry=new THREE.Geometry,scale=json.scale!==undefined?1/json.scale:1;parseModel(scale);parseSkin();parseMorphing(scale);geometry.computeCentroids();geometry.computeFaceNormals();geometry.computeBoundingSphere();function parseModel(scale){function isBitSet(value,position){return value&1<<position}var i,j,fi,offset,zLength,colorIndex,normalIndex,uvIndex,materialIndex,type,isQuad,hasMaterial,hasFaceVertexUv,hasFaceNormal,hasFaceVertexNormal,hasFaceColor,hasFaceVertexColor,vertex,face,faceA,faceB,color,hex,normal,uvLayer,uv,u,v,faces=json.faces,vertices=json.vertices,normals=json.normals,colors=json.colors,nUvLayers=0;if(json.uvs!==undefined){for(i=0;i<json.uvs.length;i++){if(json.uvs[i].length)nUvLayers++}for(i=0;i<nUvLayers;i++){geometry.faceVertexUvs[i]=[]}}offset=0;zLength=vertices.length;while(offset<zLength){vertex=new THREE.Vector3;vertex.x=vertices[offset++]*scale;vertex.y=vertices[offset++]*scale;vertex.z=vertices[offset++]*scale;geometry.vertices.push(vertex)}offset=0;zLength=faces.length;while(offset<zLength){type=faces[offset++];isQuad=isBitSet(type,0);hasMaterial=isBitSet(type,1);hasFaceVertexUv=isBitSet(type,3);hasFaceNormal=isBitSet(type,4);hasFaceVertexNormal=isBitSet(type,5);hasFaceColor=isBitSet(type,6);hasFaceVertexColor=isBitSet(type,7);if(isQuad){faceA=new THREE.Face3;faceA.a=faces[offset];faceA.b=faces[offset+1];faceA.c=faces[offset+3];faceB=new THREE.Face3;faceB.a=faces[offset+1];faceB.b=faces[offset+2];faceB.c=faces[offset+3];offset+=4;if(hasMaterial){materialIndex=faces[offset++];faceA.materialIndex=materialIndex;faceB.materialIndex=materialIndex}fi=geometry.faces.length;if(hasFaceVertexUv){for(i=0;i<nUvLayers;i++){uvLayer=json.uvs[i];geometry.faceVertexUvs[i][fi]=[];geometry.faceVertexUvs[i][fi+1]=[];for(j=0;j<4;j++){uvIndex=faces[offset++];u=uvLayer[uvIndex*2];v=uvLayer[uvIndex*2+1];uv=new THREE.Vector2(u,v);if(j!==2)geometry.faceVertexUvs[i][fi].push(uv);if(j!==0)geometry.faceVertexUvs[i][fi+1].push(uv)}}}if(hasFaceNormal){normalIndex=faces[offset++]*3;faceA.normal.set(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]);faceB.normal.copy(faceA.normal)}if(hasFaceVertexNormal){for(i=0;i<4;i++){normalIndex=faces[offset++]*3;normal=new THREE.Vector3(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]);if(i!==2)faceA.vertexNormals.push(normal);if(i!==0)faceB.vertexNormals.push(normal)}}if(hasFaceColor){colorIndex=faces[offset++];hex=colors[colorIndex];faceA.color.setHex(hex);faceB.color.setHex(hex)}if(hasFaceVertexColor){for(i=0;i<4;i++){colorIndex=faces[offset++];hex=colors[colorIndex];if(i!==2)faceA.vertexColors.push(new THREE.Color(hex));if(i!==0)faceB.vertexColors.push(new THREE.Color(hex))}}geometry.faces.push(faceA);geometry.faces.push(faceB)}else{face=new THREE.Face3;face.a=faces[offset++];face.b=faces[offset++];face.c=faces[offset++];if(hasMaterial){materialIndex=faces[offset++];face.materialIndex=materialIndex}fi=geometry.faces.length;if(hasFaceVertexUv){for(i=0;i<nUvLayers;i++){uvLayer=json.uvs[i];geometry.faceVertexUvs[i][fi]=[];for(j=0;j<3;j++){uvIndex=faces[offset++];u=uvLayer[uvIndex*2];v=uvLayer[uvIndex*2+1];uv=new THREE.Vector2(u,v);geometry.faceVertexUvs[i][fi].push(uv)}}}if(hasFaceNormal){normalIndex=faces[offset++]*3;face.normal.set(normals[normalIndex++],normals[normalIndex++],normals[normalIndex])}if(hasFaceVertexNormal){for(i=0;i<3;i++){normalIndex=faces[offset++]*3;normal=new THREE.Vector3(normals[normalIndex++],normals[normalIndex++],normals[normalIndex]);face.vertexNormals.push(normal)}}if(hasFaceColor){colorIndex=faces[offset++];face.color.setHex(colors[colorIndex])}if(hasFaceVertexColor){for(i=0;i<3;i++){colorIndex=faces[offset++];face.vertexColors.push(new THREE.Color(colors[colorIndex]))}}geometry.faces.push(face)}}}function parseSkin(){var i,l,x,y,z,w,a,b,c,d;if(json.skinWeights){for(i=0,l=json.skinWeights.length;i<l;i+=2){x=json.skinWeights[i];y=json.skinWeights[i+1];z=0;w=0;geometry.skinWeights.push(new THREE.Vector4(x,y,z,w))}}if(json.skinIndices){for(i=0,l=json.skinIndices.length;i<l;i+=2){a=json.skinIndices[i];b=json.skinIndices[i+1];c=0;d=0;geometry.skinIndices.push(new THREE.Vector4(a,b,c,d))}}geometry.bones=json.bones;geometry.animation=json.animation}function parseMorphing(scale){if(json.morphTargets!==undefined){var i,l,v,vl,dstVertices,srcVertices;for(i=0,l=json.morphTargets.length;i<l;i++){geometry.morphTargets[i]={};geometry.morphTargets[i].name=json.morphTargets[i].name;geometry.morphTargets[i].vertices=[];dstVertices=geometry.morphTargets[i].vertices;srcVertices=json.morphTargets[i].vertices;for(v=0,vl=srcVertices.length;v<vl;v+=3){var vertex=new THREE.Vector3;vertex.x=srcVertices[v]*scale;vertex.y=srcVertices[v+1]*scale;vertex.z=srcVertices[v+2]*scale;dstVertices.push(vertex)}}}if(json.morphColors!==undefined){var i,l,c,cl,dstColors,srcColors,color;for(i=0,l=json.morphColors.length;i<l;i++){geometry.morphColors[i]={};geometry.morphColors[i].name=json.morphColors[i].name;geometry.morphColors[i].colors=[];dstColors=geometry.morphColors[i].colors;srcColors=json.morphColors[i].colors;for(c=0,cl=srcColors.length;c<cl;c+=3){color=new THREE.Color(16755200);color.setRGB(srcColors[c],srcColors[c+1],srcColors[c+2]);dstColors.push(color)}}}}if(json.materials===undefined){return{geometry:geometry}}else{var materials=this.initMaterials(json.materials,texturePath);if(this.needsTangents(materials)){geometry.computeTangents()}return{geometry:geometry,materials:materials}}};THREE.LoadingManager=function(onLoad,onProgress,onError){var scope=this;var loaded=0,total=0;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){total++};this.itemEnd=function(url){loaded++;if(scope.onProgress!==undefined){scope.onProgress(url,loaded,total)}if(loaded===total&&scope.onLoad!==undefined){scope.onLoad()}}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader;loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(json){var geometry=new THREE.BufferGeometry;var attributes=json.attributes;var offsets=json.offsets;var boundingSphere=json.boundingSphere;for(var key in attributes){var attribute=attributes[key];geometry.attributes[key]={itemSize:attribute.itemSize,array:new self[attribute.type](attribute.array)}}if(offsets!==undefined){geometry.offsets=JSON.parse(JSON.stringify(offsets))}if(boundingSphere!==undefined){geometry.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(boundingSphere.center!==undefined?boundingSphere.center:[0,0,0]),boundingSphere.radius)}return geometry}};THREE.GeometryLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader;loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(json){}};THREE.MaterialLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader;loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(json){var material=new THREE[json.type];if(json.color!==undefined)material.color.setHex(json.color);if(json.ambient!==undefined)material.ambient.setHex(json.ambient);if(json.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined)material.specular.setHex(json.specular);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.vertexColors!==undefined)material.vertexColors=json.vertexColors;if(json.blending!==undefined)material.blending=json.blending;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.materials!==undefined){for(var i=0,l=json.materials.length;i<l;i++){material.materials.push(this.parse(json.materials[i]))}}return material}};THREE.ObjectLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)))})},setCrossOrigin:function(value){this.crossOrigin=value},parse:function(json){var geometries=this.parseGeometries(json.geometries);var materials=this.parseMaterials(json.materials);
var object=this.parseObject(json.object,geometries,materials);return object},parseGeometries:function(json){var geometries={};if(json!==undefined){var geometryLoader=new THREE.JSONLoader;var bufferGeometryLoader=new THREE.BufferGeometryLoader;for(var i=0,l=json.length;i<l;i++){var geometry;var data=json[i];switch(data.type){case"PlaneGeometry":geometry=new THREE.PlaneGeometry(data.width,data.height,data.widthSegments,data.heightSegments);break;case"CircleGeometry":geometry=new THREE.CircleGeometry(data.radius,data.segments);break;case"CubeGeometry":geometry=new THREE.CubeGeometry(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case"CylinderGeometry":geometry=new THREE.CylinderGeometry(data.radiusTop,data.radiusBottom,data.height,data.radiusSegments,data.heightSegments,data.openEnded);break;case"SphereGeometry":geometry=new THREE.SphereGeometry(data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case"IcosahedronGeometry":geometry=new THREE.IcosahedronGeometry(data.radius,data.detail);break;case"TorusGeometry":geometry=new THREE.TorusGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case"TorusKnotGeometry":geometry=new THREE.TorusKnotGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.p,data.q,data.heightScale);break;case"BufferGeometry":geometry=bufferGeometryLoader.parse(data.data);break;case"Geometry":geometry=geometryLoader.parse(data.data).geometry;break}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;geometries[data.uuid]=geometry}}return geometries},parseMaterials:function(json){var materials={};if(json!==undefined){var loader=new THREE.MaterialLoader;for(var i=0,l=json.length;i<l;i++){var data=json[i];var material=loader.parse(data);material.uuid=data.uuid;if(data.name!==undefined)material.name=data.name;materials[data.uuid]=material}}return materials},parseObject:function(){var matrix=new THREE.Matrix4;return function(data,geometries,materials){var object;switch(data.type){case"Scene":object=new THREE.Scene;break;case"PerspectiveCamera":object=new THREE.PerspectiveCamera(data.fov,data.aspect,data.near,data.far);break;case"OrthographicCamera":object=new THREE.OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);break;case"AmbientLight":object=new THREE.AmbientLight(data.color);break;case"DirectionalLight":object=new THREE.DirectionalLight(data.color,data.intensity);break;case"PointLight":object=new THREE.PointLight(data.color,data.intensity,data.distance);break;case"SpotLight":object=new THREE.SpotLight(data.color,data.intensity,data.distance,data.angle,data.exponent);break;case"HemisphereLight":object=new THREE.HemisphereLight(data.color,data.groundColor,data.intensity);break;case"Mesh":var geometry=geometries[data.geometry];var material=materials[data.material];if(geometry===undefined){console.error("THREE.ObjectLoader: Undefined geometry "+data.geometry)}if(material===undefined){console.error("THREE.ObjectLoader: Undefined material "+data.material)}object=new THREE.Mesh(geometry,material);break;default:object=new THREE.Object3D}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){matrix.fromArray(data.matrix);matrix.decompose(object.position,object.quaternion,object.scale)}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.scale!==undefined)object.scale.fromArray(data.scale)}if(data.visible!==undefined)object.visible=data.visible;if(data.userData!==undefined)object.userData=data.userData;if(data.children!==undefined){for(var child in data.children){object.add(this.parseObject(data.children[child],geometries,materials))}}return object}}()};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.XHRLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(text){scope.parse(JSON.parse(text),onLoad,url)})},setCrossOrigin:function(value){this.crossOrigin=value},addGeometryHandler:function(typeID,loaderClass){this.geometryHandlers[typeID]={loaderClass:loaderClass}},addHierarchyHandler:function(typeID,loaderClass){this.hierarchyHandlers[typeID]={loaderClass:loaderClass}},parse:function(json,callbackFinished,url){var scope=this;var urlBase=THREE.Loader.prototype.extractUrlBase(url);var geometry,material,camera,fog,texture,images,color,light,hex,intensity,counter_models,counter_textures,total_models,total_textures,result;var target_array=[];var data=json;for(var typeID in this.geometryHandlers){var loaderClass=this.geometryHandlers[typeID]["loaderClass"];this.geometryHandlers[typeID]["loaderObject"]=new loaderClass}for(var typeID in this.hierarchyHandlers){var loaderClass=this.hierarchyHandlers[typeID]["loaderClass"];this.hierarchyHandlers[typeID]["loaderObject"]=new loaderClass}counter_models=0;counter_textures=0;result={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(data.transform){var position=data.transform.position,rotation=data.transform.rotation,scale=data.transform.scale;if(position){result.scene.position.fromArray(position)}if(rotation){result.scene.rotation.fromArray(rotation)}if(scale){result.scene.scale.fromArray(scale)}if(position||rotation||scale){result.scene.updateMatrix();result.scene.updateMatrixWorld()}}function get_url(source_url,url_type){if(url_type=="relativeToHTML"){return source_url}else{return urlBase+"/"+source_url}}function handle_objects(){handle_children(result.scene,data.objects)}function handle_children(parent,children){var mat,dst,pos,rot,scl,quat;for(var objID in children){var object=result.objects[objID];var objJSON=children[objID];if(object===undefined){if(objJSON.type&&objJSON.type in scope.hierarchyHandlers){if(objJSON.loading===undefined){var reservedTypes={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var loaderParameters={};for(var parType in objJSON){if(!(parType in reservedTypes)){loaderParameters[parType]=objJSON[parType]}}material=result.materials[objJSON.material];objJSON.loading=true;var loader=scope.hierarchyHandlers[objJSON.type]["loaderObject"];if(loader.options){loader.load(get_url(objJSON.url,data.urlBaseType),create_callback_hierachy(objID,parent,material,objJSON))}else{loader.load(get_url(objJSON.url,data.urlBaseType),create_callback_hierachy(objID,parent,material,objJSON),loaderParameters)}}}else if(objJSON.geometry!==undefined){geometry=result.geometries[objJSON.geometry];if(geometry){var needsTangents=false;material=result.materials[objJSON.material];needsTangents=material instanceof THREE.ShaderMaterial;pos=objJSON.position;rot=objJSON.rotation;scl=objJSON.scale;mat=objJSON.matrix;quat=objJSON.quaternion;if(!objJSON.material){material=new THREE.MeshFaceMaterial(result.face_materials[objJSON.geometry])}if(material instanceof THREE.MeshFaceMaterial&&material.materials.length===0){material=new THREE.MeshFaceMaterial(result.face_materials[objJSON.geometry])}if(material instanceof THREE.MeshFaceMaterial){for(var i=0;i<material.materials.length;i++){needsTangents=needsTangents||material.materials[i]instanceof THREE.ShaderMaterial}}if(needsTangents){geometry.computeTangents()}if(objJSON.skin){object=new THREE.SkinnedMesh(geometry,material)}else if(objJSON.morph){object=new THREE.MorphAnimMesh(geometry,material);if(objJSON.duration!==undefined){object.duration=objJSON.duration}if(objJSON.time!==undefined){object.time=objJSON.time}if(objJSON.mirroredLoop!==undefined){object.mirroredLoop=objJSON.mirroredLoop}if(material.morphNormals){geometry.computeMorphNormals()}}else{object=new THREE.Mesh(geometry,material)}object.name=objID;if(mat){object.matrixAutoUpdate=false;object.matrix.set(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15])}else{object.position.fromArray(pos);if(quat){object.quaternion.fromArray(quat)}else{object.rotation.fromArray(rot)}object.scale.fromArray(scl)}object.visible=objJSON.visible;object.castShadow=objJSON.castShadow;object.receiveShadow=objJSON.receiveShadow;parent.add(object);result.objects[objID]=object}}else if(objJSON.type==="DirectionalLight"||objJSON.type==="PointLight"||objJSON.type==="AmbientLight"){hex=objJSON.color!==undefined?objJSON.color:16777215;intensity=objJSON.intensity!==undefined?objJSON.intensity:1;if(objJSON.type==="DirectionalLight"){pos=objJSON.direction;light=new THREE.DirectionalLight(hex,intensity);light.position.fromArray(pos);if(objJSON.target){target_array.push({object:light,targetName:objJSON.target});light.target=null}}else if(objJSON.type==="PointLight"){pos=objJSON.position;dst=objJSON.distance;light=new THREE.PointLight(hex,intensity,dst);light.position.fromArray(pos)}else if(objJSON.type==="AmbientLight"){light=new THREE.AmbientLight(hex)}parent.add(light);light.name=objID;result.lights[objID]=light;result.objects[objID]=light}else if(objJSON.type==="PerspectiveCamera"||objJSON.type==="OrthographicCamera"){pos=objJSON.position;rot=objJSON.rotation;quat=objJSON.quaternion;if(objJSON.type==="PerspectiveCamera"){camera=new THREE.PerspectiveCamera(objJSON.fov,objJSON.aspect,objJSON.near,objJSON.far)}else if(objJSON.type==="OrthographicCamera"){camera=new THREE.OrthographicCamera(objJSON.left,objJSON.right,objJSON.top,objJSON.bottom,objJSON.near,objJSON.far)}camera.name=objID;camera.position.fromArray(pos);if(quat!==undefined){camera.quaternion.fromArray(quat)}else if(rot!==undefined){camera.rotation.fromArray(rot)}parent.add(camera);result.cameras[objID]=camera;result.objects[objID]=camera}else{pos=objJSON.position;rot=objJSON.rotation;scl=objJSON.scale;quat=objJSON.quaternion;object=new THREE.Object3D;object.name=objID;object.position.fromArray(pos);if(quat){object.quaternion.fromArray(quat)}else{object.rotation.fromArray(rot)}object.scale.fromArray(scl);object.visible=objJSON.visible!==undefined?objJSON.visible:false;parent.add(object);result.objects[objID]=object;result.empties[objID]=object}if(object){if(objJSON.userData!==undefined){for(var key in objJSON.userData){var value=objJSON.userData[key];object.userData[key]=value}}if(objJSON.groups!==undefined){for(var i=0;i<objJSON.groups.length;i++){var groupID=objJSON.groups[i];if(result.groups[groupID]===undefined){result.groups[groupID]=[]}result.groups[groupID].push(objID)}}}}if(object!==undefined&&objJSON.children!==undefined){handle_children(object,objJSON.children)}}}function handle_mesh(geo,mat,id){result.geometries[id]=geo;result.face_materials[id]=mat;handle_objects()}function handle_hierarchy(node,id,parent,material,obj){var p=obj.position;var r=obj.rotation;var q=obj.quaternion;var s=obj.scale;node.position.fromArray(p);if(q){node.quaternion.fromArray(q)}else{node.rotation.fromArray(r)}node.scale.fromArray(s);if(material){node.traverse(function(child){child.material=material})}var visible=obj.visible!==undefined?obj.visible:true;node.traverse(function(child){child.visible=visible});parent.add(node);node.name=id;result.objects[id]=node;handle_objects()}function create_callback_geometry(id){return function(geo,mat){geo.name=id;handle_mesh(geo,mat,id);counter_models-=1;scope.onLoadComplete();async_callback_gate()}}function create_callback_hierachy(id,parent,material,obj){return function(event){var result;if(event.content){result=event.content}else if(event.dae){result=event.scene}else{result=event}handle_hierarchy(result,id,parent,material,obj);counter_models-=1;scope.onLoadComplete();async_callback_gate()}}function create_callback_embed(id){return function(geo,mat){geo.name=id;result.geometries[id]=geo;result.face_materials[id]=mat}}function async_callback_gate(){var progress={totalModels:total_models,totalTextures:total_textures,loadedModels:total_models-counter_models,loadedTextures:total_textures-counter_textures};scope.callbackProgress(progress,result);scope.onLoadProgress();if(counter_models===0&&counter_textures===0){finalize();callbackFinished(result)}}function finalize(){for(var i=0;i<target_array.length;i++){var ta=target_array[i];var target=result.objects[ta.targetName];if(target){ta.object.target=target}else{ta.object.target=new THREE.Object3D;result.scene.add(ta.object.target)}ta.object.target.userData.targetInverse=ta.object}}var callbackTexture=function(count){counter_textures-=count;async_callback_gate();scope.onLoadComplete()};var generateTextureCallback=function(count){return function(){callbackTexture(count)}};function traverse_json_hierarchy(objJSON,callback){callback(objJSON);if(objJSON.children!==undefined){for(var objChildID in objJSON.children){traverse_json_hierarchy(objJSON.children[objChildID],callback)}}}var fogID,fogJSON;for(fogID in data.fogs){fogJSON=data.fogs[fogID];if(fogJSON.type==="linear"){fog=new THREE.Fog(0,fogJSON.near,fogJSON.far)}else if(fogJSON.type==="exp2"){fog=new THREE.FogExp2(0,fogJSON.density)}color=fogJSON.color;fog.color.setRGB(color[0],color[1],color[2]);result.fogs[fogID]=fog}var geoID,geoJSON;for(geoID in data.geometries){geoJSON=data.geometries[geoID];if(geoJSON.type in this.geometryHandlers){counter_models+=1;scope.onLoadStart()}}for(var objID in data.objects){traverse_json_hierarchy(data.objects[objID],function(objJSON){if(objJSON.type&&objJSON.type in scope.hierarchyHandlers){counter_models+=1;scope.onLoadStart()}})}total_models=counter_models;for(geoID in data.geometries){geoJSON=data.geometries[geoID];if(geoJSON.type==="cube"){geometry=new THREE.CubeGeometry(geoJSON.width,geoJSON.height,geoJSON.depth,geoJSON.widthSegments,geoJSON.heightSegments,geoJSON.depthSegments);geometry.name=geoID;result.geometries[geoID]=geometry}else if(geoJSON.type==="plane"){geometry=new THREE.PlaneGeometry(geoJSON.width,geoJSON.height,geoJSON.widthSegments,geoJSON.heightSegments);geometry.name=geoID;result.geometries[geoID]=geometry}else if(geoJSON.type==="sphere"){geometry=new THREE.SphereGeometry(geoJSON.radius,geoJSON.widthSegments,geoJSON.heightSegments);geometry.name=geoID;result.geometries[geoID]=geometry}else if(geoJSON.type==="cylinder"){geometry=new THREE.CylinderGeometry(geoJSON.topRad,geoJSON.botRad,geoJSON.height,geoJSON.radSegs,geoJSON.heightSegs);geometry.name=geoID;result.geometries[geoID]=geometry}else if(geoJSON.type==="torus"){geometry=new THREE.TorusGeometry(geoJSON.radius,geoJSON.tube,geoJSON.segmentsR,geoJSON.segmentsT);geometry.name=geoID;result.geometries[geoID]=geometry}else if(geoJSON.type==="icosahedron"){geometry=new THREE.IcosahedronGeometry(geoJSON.radius,geoJSON.subdivisions);geometry.name=geoID;result.geometries[geoID]=geometry}else if(geoJSON.type in this.geometryHandlers){var loaderParameters={};for(var parType in geoJSON){if(parType!=="type"&&parType!=="url"){loaderParameters[parType]=geoJSON[parType]}}var loader=this.geometryHandlers[geoJSON.type]["loaderObject"];loader.load(get_url(geoJSON.url,data.urlBaseType),create_callback_geometry(geoID),loaderParameters)}else if(geoJSON.type==="embedded"){var modelJson=data.embeds[geoJSON.id],texture_path="";modelJson.metadata=data.metadata;if(modelJson){var jsonLoader=this.geometryHandlers["ascii"]["loaderObject"];var model=jsonLoader.parse(modelJson,texture_path);create_callback_embed(geoID)(model.geometry,model.materials)}}}var textureID,textureJSON;for(textureID in data.textures){textureJSON=data.textures[textureID];if(textureJSON.url instanceof Array){counter_textures+=textureJSON.url.length;for(var n=0;n<textureJSON.url.length;n++){scope.onLoadStart()}}else{counter_textures+=1;scope.onLoadStart()}}total_textures=counter_textures;for(textureID in data.textures){textureJSON=data.textures[textureID];if(textureJSON.mapping!==undefined&&THREE[textureJSON.mapping]!==undefined){textureJSON.mapping=new THREE[textureJSON.mapping]}if(textureJSON.url instanceof Array){var count=textureJSON.url.length;var url_array=[];for(var i=0;i<count;i++){url_array[i]=get_url(textureJSON.url[i],data.urlBaseType)}var isCompressed=/\.dds$/i.test(url_array[0]);if(isCompressed){texture=THREE.ImageUtils.loadCompressedTextureCube(url_array,textureJSON.mapping,generateTextureCallback(count))}else{texture=THREE.ImageUtils.loadTextureCube(url_array,textureJSON.mapping,generateTextureCallback(count))}}else{var isCompressed=/\.dds$/i.test(textureJSON.url);var fullUrl=get_url(textureJSON.url,data.urlBaseType);var textureCallback=generateTextureCallback(1);if(isCompressed){texture=THREE.ImageUtils.loadCompressedTexture(fullUrl,textureJSON.mapping,textureCallback)}else{texture=THREE.ImageUtils.loadTexture(fullUrl,textureJSON.mapping,textureCallback)}if(THREE[textureJSON.minFilter]!==undefined)texture.minFilter=THREE[textureJSON.minFilter];if(THREE[textureJSON.magFilter]!==undefined)texture.magFilter=THREE[textureJSON.magFilter];if(textureJSON.anisotropy)texture.anisotropy=textureJSON.anisotropy;if(textureJSON.repeat){texture.repeat.set(textureJSON.repeat[0],textureJSON.repeat[1]);if(textureJSON.repeat[0]!==1)texture.wrapS=THREE.RepeatWrapping;if(textureJSON.repeat[1]!==1)texture.wrapT=THREE.RepeatWrapping}if(textureJSON.offset){texture.offset.set(textureJSON.offset[0],textureJSON.offset[1])}if(textureJSON.wrap){var wrapMap={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(wrapMap[textureJSON.wrap[0]]!==undefined)texture.wrapS=wrapMap[textureJSON.wrap[0]];if(wrapMap[textureJSON.wrap[1]]!==undefined)texture.wrapT=wrapMap[textureJSON.wrap[1]]}}result.textures[textureID]=texture}var matID,matJSON;var parID;for(matID in data.materials){matJSON=data.materials[matID];for(parID in matJSON.parameters){if(parID==="envMap"||parID==="map"||parID==="lightMap"||parID==="bumpMap"){matJSON.parameters[parID]=result.textures[matJSON.parameters[parID]]}else if(parID==="shading"){matJSON.parameters[parID]=matJSON.parameters[parID]==="flat"?THREE.FlatShading:THREE.SmoothShading}else if(parID==="side"){if(matJSON.parameters[parID]=="double"){matJSON.parameters[parID]=THREE.DoubleSide}else if(matJSON.parameters[parID]=="back"){matJSON.parameters[parID]=THREE.BackSide}else{matJSON.parameters[parID]=THREE.FrontSide}}else if(parID==="blending"){matJSON.parameters[parID]=matJSON.parameters[parID]in THREE?THREE[matJSON.parameters[parID]]:THREE.NormalBlending}else if(parID==="combine"){matJSON.parameters[parID]=matJSON.parameters[parID]in THREE?THREE[matJSON.parameters[parID]]:THREE.MultiplyOperation}else if(parID==="vertexColors"){if(matJSON.parameters[parID]=="face"){matJSON.parameters[parID]=THREE.FaceColors}else if(matJSON.parameters[parID]){matJSON.parameters[parID]=THREE.VertexColors}}else if(parID==="wrapRGB"){var v3=matJSON.parameters[parID];matJSON.parameters[parID]=new THREE.Vector3(v3[0],v3[1],v3[2])}}if(matJSON.parameters.opacity!==undefined&&matJSON.parameters.opacity<1){matJSON.parameters.transparent=true}if(matJSON.parameters.normalMap){var shader=THREE.ShaderLib["normalmap"];var uniforms=THREE.UniformsUtils.clone(shader.uniforms);var diffuse=matJSON.parameters.color;var specular=matJSON.parameters.specular;var ambient=matJSON.parameters.ambient;var shininess=matJSON.parameters.shininess;uniforms["tNormal"].value=result.textures[matJSON.parameters.normalMap];if(matJSON.parameters.normalScale){uniforms["uNormalScale"].value.set(matJSON.parameters.normalScale[0],matJSON.parameters.normalScale[1])}if(matJSON.parameters.map){uniforms["tDiffuse"].value=matJSON.parameters.map;uniforms["enableDiffuse"].value=true}if(matJSON.parameters.envMap){uniforms["tCube"].value=matJSON.parameters.envMap;uniforms["enableReflection"].value=true;uniforms["uReflectivity"].value=matJSON.parameters.reflectivity}if(matJSON.parameters.lightMap){uniforms["tAO"].value=matJSON.parameters.lightMap;uniforms["enableAO"].value=true}if(matJSON.parameters.specularMap){uniforms["tSpecular"].value=result.textures[matJSON.parameters.specularMap];uniforms["enableSpecular"].value=true}if(matJSON.parameters.displacementMap){uniforms["tDisplacement"].value=result.textures[matJSON.parameters.displacementMap];uniforms["enableDisplacement"].value=true;uniforms["uDisplacementBias"].value=matJSON.parameters.displacementBias;uniforms["uDisplacementScale"].value=matJSON.parameters.displacementScale}uniforms["uDiffuseColor"].value.setHex(diffuse);uniforms["uSpecularColor"].value.setHex(specular);uniforms["uAmbientColor"].value.setHex(ambient);uniforms["uShininess"].value=shininess;if(matJSON.parameters.opacity){uniforms["uOpacity"].value=matJSON.parameters.opacity}var parameters={fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:true,fog:true};material=new THREE.ShaderMaterial(parameters)}else{material=new THREE[matJSON.type](matJSON.parameters)}material.name=matID;result.materials[matID]=material}for(matID in data.materials){matJSON=data.materials[matID];if(matJSON.parameters.materials){var materialArray=[];for(var i=0;i<matJSON.parameters.materials.length;i++){var label=matJSON.parameters.materials[i];materialArray.push(result.materials[label])}result.materials[matID].materials=materialArray}}handle_objects();if(result.cameras&&data.defaults.camera){result.currentCamera=result.cameras[data.defaults.camera]}if(result.fogs&&data.defaults.fog){result.scene.fog=result.fogs[data.defaults.fog]}scope.callbackSync(result);async_callback_gate()}};THREE.TextureLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.ImageLoader(scope.manager);loader.setCrossOrigin(this.crossOrigin);loader.load(url,function(image){var texture=new THREE.Texture(image);texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture)}})},setCrossOrigin:function(value){this.crossOrigin=value}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthTest=true;this.depthWrite=true;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=0;this.visible=true;this.needsUpdate=true};THREE.Material.prototype={constructor:THREE.Material,setValues:function(values){if(values===undefined)return;for(var key in values){var newValue=values[key];if(newValue===undefined){console.warn("THREE.Material: '"+key+"' parameter is undefined.");continue}if(key in this){var currentValue=this[key];if(currentValue instanceof THREE.Color){currentValue.set(newValue)}else if(currentValue instanceof THREE.Vector3&&newValue instanceof THREE.Vector3){currentValue.copy(newValue)}else if(key=="overdraw"){this[key]=Number(newValue)}else{this[key]=newValue}}}},clone:function(material){if(material===undefined)material=new THREE.Material;material.name=this.name;material.side=this.side;material.opacity=this.opacity;material.transparent=this.transparent;material.blending=this.blending;material.blendSrc=this.blendSrc;material.blendDst=this.blendDst;material.blendEquation=this.blendEquation;material.depthTest=this.depthTest;material.depthWrite=this.depthWrite;material.polygonOffset=this.polygonOffset;material.polygonOffsetFactor=this.polygonOffsetFactor;material.polygonOffsetUnits=this.polygonOffsetUnits;material.alphaTest=this.alphaTest;material.overdraw=this.overdraw;material.visible=this.visible;return material},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=false;this.fog=true;this.setValues(parameters)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var material=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.linewidth=this.linewidth;material.linecap=this.linecap;material.linejoin=this.linejoin;material.vertexColors=this.vertexColors;material.fog=this.fog;return material};THREE.LineDashedMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=false;this.fog=true;this.setValues(parameters)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var material=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.linewidth=this.linewidth;material.scale=this.scale;material.dashSize=this.dashSize;material.gapSize=this.gapSize;material.vertexColors=this.vertexColors;material.fog=this.fog;return material};THREE.MeshBasicMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.setValues(parameters)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var material=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.lightMap=this.lightMap;material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.wireframeLinecap=this.wireframeLinecap;material.wireframeLinejoin=this.wireframeLinejoin;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;return material};THREE.MeshLambertMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var material=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.ambient.copy(this.ambient);material.emissive.copy(this.emissive);material.wrapAround=this.wrapAround;material.wrapRGB.copy(this.wrapRGB);material.map=this.map;material.lightMap=this.lightMap;material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.wireframeLinecap=this.wireframeLinecap;material.wireframeLinejoin=this.wireframeLinejoin;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material};THREE.MeshPhongMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=false;this.perPixel=true;this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.map=null;this.lightMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.specularMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var material=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.ambient.copy(this.ambient);material.emissive.copy(this.emissive);material.specular.copy(this.specular);material.shininess=this.shininess;material.metal=this.metal;material.perPixel=this.perPixel;material.wrapAround=this.wrapAround;material.wrapRGB.copy(this.wrapRGB);material.map=this.map;material.lightMap=this.lightMap;material.bumpMap=this.bumpMap;material.bumpScale=this.bumpScale;material.normalMap=this.normalMap;material.normalScale.copy(this.normalScale);material.specularMap=this.specularMap;material.envMap=this.envMap;material.combine=this.combine;material.reflectivity=this.reflectivity;material.refractionRatio=this.refractionRatio;material.fog=this.fog;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.wireframeLinecap=this.wireframeLinecap;material.wireframeLinejoin=this.wireframeLinejoin;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material};THREE.MeshDepthMaterial=function(parameters){THREE.Material.call(this);this.wireframe=false;this.wireframeLinewidth=1;this.setValues(parameters)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var material=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,material);material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;return material};THREE.MeshNormalMaterial=function(parameters){THREE.Material.call(this,parameters);this.shading=THREE.FlatShading;this.wireframe=false;this.wireframeLinewidth=1;this.morphTargets=false;this.setValues(parameters)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var material=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,material);material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;return material};THREE.MeshFaceMaterial=function(materials){this.materials=materials instanceof Array?materials:[]};THREE.MeshFaceMaterial.prototype.clone=function(){var material=new THREE.MeshFaceMaterial;
for(var i=0;i<this.materials.length;i++){material.materials.push(this.materials[i].clone())}return material};THREE.ParticleBasicMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=false;this.fog=true;this.setValues(parameters)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleBasicMaterial.prototype.clone=function(){var material=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.size=this.size;material.sizeAttenuation=this.sizeAttenuation;material.vertexColors=this.vertexColors;material.fog=this.fog;return material};THREE.ParticleCanvasMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(context,color){};this.setValues(parameters)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var material=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.program=this.program;return material};THREE.ShaderMaterial=function(parameters){THREE.Material.call(this);this.fragmentShader="void main() {}";this.vertexShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName="position";this.setValues(parameters)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var material=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,material);material.fragmentShader=this.fragmentShader;material.vertexShader=this.vertexShader;material.uniforms=THREE.UniformsUtils.clone(this.uniforms);material.attributes=this.attributes;material.defines=this.defines;material.shading=this.shading;material.wireframe=this.wireframe;material.wireframeLinewidth=this.wireframeLinewidth;material.fog=this.fog;material.lights=this.lights;material.vertexColors=this.vertexColors;material.skinning=this.skinning;material.morphTargets=this.morphTargets;material.morphNormals=this.morphNormals;return material};THREE.SpriteMaterial=function(parameters){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=true;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=false;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(parameters);parameters=parameters||{};if(parameters.depthTest===undefined)this.depthTest=!this.useScreenCoordinates;if(parameters.sizeAttenuation===undefined)this.sizeAttenuation=!this.useScreenCoordinates;if(parameters.scaleByViewport===undefined)this.scaleByViewport=!this.sizeAttenuation};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var material=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,material);material.color.copy(this.color);material.map=this.map;material.useScreenCoordinates=this.useScreenCoordinates;material.sizeAttenuation=this.sizeAttenuation;material.scaleByViewport=this.scaleByViewport;material.alignment.copy(this.alignment);material.uvOffset.copy(this.uvOffset);material.uvScale.copy(this.uvScale);material.fog=this.fog;return material};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=image;this.mipmaps=[];this.mapping=mapping!==undefined?mapping:new THREE.UVMapping;this.wrapS=wrapS!==undefined?wrapS:THREE.ClampToEdgeWrapping;this.wrapT=wrapT!==undefined?wrapT:THREE.ClampToEdgeWrapping;this.magFilter=magFilter!==undefined?magFilter:THREE.LinearFilter;this.minFilter=minFilter!==undefined?minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=anisotropy!==undefined?anisotropy:1;this.format=format!==undefined?format:THREE.RGBAFormat;this.type=type!==undefined?type:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.needsUpdate=false;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(texture){if(texture===undefined)texture=new THREE.Texture;texture.image=this.image;texture.mipmaps=this.mipmaps.slice(0);texture.mapping=this.mapping;texture.wrapS=this.wrapS;texture.wrapT=this.wrapT;texture.magFilter=this.magFilter;texture.minFilter=this.minFilter;texture.anisotropy=this.anisotropy;texture.format=this.format;texture.type=this.type;texture.offset.copy(this.offset);texture.repeat.copy(this.repeat);texture.generateMipmaps=this.generateMipmaps;texture.premultiplyAlpha=this.premultiplyAlpha;texture.flipY=this.flipY;texture.unpackAlignment=this.unpackAlignment;return texture},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.mipmaps=mipmaps;this.generateMipmaps=false};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var texture=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,texture);return texture};THREE.DataTexture=function(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy){THREE.Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={data:data,width:width,height:height}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var texture=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,texture);return texture};THREE.Particle=function(material){THREE.Object3D.call(this);this.material=material};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(object){if(object===undefined)object=new THREE.Particle(this.material);THREE.Object3D.prototype.clone.call(this,object);return object};THREE.ParticleSystem=function(geometry,material){THREE.Object3D.call(this);this.geometry=geometry!==undefined?geometry:new THREE.Geometry;this.material=material!==undefined?material:new THREE.ParticleBasicMaterial({color:Math.random()*16777215});this.sortParticles=false;this.frustumCulled=false};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(object){if(object===undefined)object=new THREE.ParticleSystem(this.geometry,this.material);object.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,object);return object};THREE.Line=function(geometry,material,type){THREE.Object3D.call(this);this.geometry=geometry!==undefined?geometry:new THREE.Geometry;this.material=material!==undefined?material:new THREE.LineBasicMaterial({color:Math.random()*16777215});this.type=type!==undefined?type:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(object){if(object===undefined)object=new THREE.Line(this.geometry,this.material,this.type);THREE.Object3D.prototype.clone.call(this,object);return object};THREE.Mesh=function(geometry,material){THREE.Object3D.call(this);this.geometry=geometry!==undefined?geometry:new THREE.Geometry;this.material=material!==undefined?material:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var m=0,ml=this.geometry.morphTargets.length;m<ml;m++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[m].name]=m}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(name){if(this.morphTargetDictionary[name]!==undefined){return this.morphTargetDictionary[name]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+name+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(object){if(object===undefined)object=new THREE.Mesh(this.geometry,this.material);THREE.Object3D.prototype.clone.call(this,object);return object};THREE.Bone=function(belongsToSkin){THREE.Object3D.call(this);this.skin=belongsToSkin;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(parentSkinMatrix,forceUpdate){if(this.matrixAutoUpdate){forceUpdate|=this.updateMatrix()}if(forceUpdate||this.matrixWorldNeedsUpdate){if(parentSkinMatrix){this.skinMatrix.multiplyMatrices(parentSkinMatrix,this.matrix)}else{this.skinMatrix.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;forceUpdate=true}var child,i,l=this.children.length;for(i=0;i<l;i++){this.children[i].update(this.skinMatrix,forceUpdate)}};THREE.SkinnedMesh=function(geometry,material,useVertexTexture){THREE.Mesh.call(this,geometry,material);this.useVertexTexture=useVertexTexture!==undefined?useVertexTexture:true;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var b,bone,gbone,p,q,s;if(this.geometry&&this.geometry.bones!==undefined){for(b=0;b<this.geometry.bones.length;b++){gbone=this.geometry.bones[b];p=gbone.pos;q=gbone.rotq;s=gbone.scl;bone=this.addBone();bone.name=gbone.name;bone.position.set(p[0],p[1],p[2]);bone.quaternion.set(q[0],q[1],q[2],q[3]);if(s!==undefined){bone.scale.set(s[0],s[1],s[2])}else{bone.scale.set(1,1,1)}}for(b=0;b<this.bones.length;b++){gbone=this.geometry.bones[b];bone=this.bones[b];if(gbone.parent===-1){this.add(bone)}else{this.bones[gbone.parent].add(bone)}}var nBones=this.bones.length;if(this.useVertexTexture){var size;if(nBones>256)size=64;else if(nBones>64)size=32;else if(nBones>16)size=16;else size=8;this.boneTextureWidth=size;this.boneTextureHeight=size;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType);this.boneTexture.minFilter=THREE.NearestFilter;this.boneTexture.magFilter=THREE.NearestFilter;this.boneTexture.generateMipmaps=false;this.boneTexture.flipY=false}else{this.boneMatrices=new Float32Array(16*nBones)}this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(bone){if(bone===undefined){bone=new THREE.Bone(this)}this.bones.push(bone);return bone};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var offsetMatrix=new THREE.Matrix4;return function(force){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent){this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}else{this.matrixWorld.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;force=true}for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];if(child instanceof THREE.Bone){child.update(this.identityMatrix,false)}else{child.updateMatrixWorld(true)}}if(this.boneInverses==undefined){this.boneInverses=[];for(var b=0,bl=this.bones.length;b<bl;b++){var inverse=new THREE.Matrix4;inverse.getInverse(this.bones[b].skinMatrix);this.boneInverses.push(inverse)}}for(var b=0,bl=this.bones.length;b<bl;b++){offsetMatrix.multiplyMatrices(this.bones[b].skinMatrix,this.boneInverses[b]);offsetMatrix.flattenToArrayOffset(this.boneMatrices,b*16)}if(this.useVertexTexture){this.boneTexture.needsUpdate=true}}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(true);this.normalizeSkinWeights()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var i=0;i<this.geometry.skinIndices.length;i++){var sw=this.geometry.skinWeights[i];var scale=1/sw.lengthManhattan();if(scale!==Infinity){sw.multiplyScalar(scale)}else{sw.set(1)}}}else{}};THREE.SkinnedMesh.prototype.clone=function(object){if(object===undefined){object=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)}THREE.Mesh.prototype.clone.call(this,object);return object};THREE.MorphAnimMesh=function(geometry,material){THREE.Mesh.call(this,geometry,material);this.duration=1e3;this.mirroredLoop=false;this.time=0;this.lastKeyframe=0;this.currentKeyframe=0;this.direction=1;this.directionBackwards=false;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(start,end){this.startKeyframe=start;this.endKeyframe=end;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=false};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=true};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var geometry=this.geometry;if(!geometry.animations)geometry.animations={};var firstAnimation,animations=geometry.animations;var pattern=/([a-z]+)(\d+)/;for(var i=0,il=geometry.morphTargets.length;i<il;i++){var morph=geometry.morphTargets[i];var parts=morph.name.match(pattern);if(parts&&parts.length>1){var label=parts[1];var num=parts[2];if(!animations[label])animations[label]={start:Infinity,end:-Infinity};var animation=animations[label];if(i<animation.start)animation.start=i;if(i>animation.end)animation.end=i;if(!firstAnimation)firstAnimation=label}}geometry.firstAnimation=firstAnimation};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(label,start,end){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[label]={start:start,end:end}};THREE.MorphAnimMesh.prototype.playAnimation=function(label,fps){var animation=this.geometry.animations[label];if(animation){this.setFrameRange(animation.start,animation.end);this.duration=1e3*((animation.end-animation.start)/fps);this.time=0}else{console.warn("animation["+label+"] undefined")}};THREE.MorphAnimMesh.prototype.updateAnimation=function(delta){var frameTime=this.duration/this.length;this.time+=this.direction*delta;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=true}if(this.time<0){this.time=0;this.directionBackwards=false}}}else{this.time=this.time%this.duration;if(this.time<0)this.time+=this.duration}var keyframe=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/frameTime),0,this.length-1);if(keyframe!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[keyframe]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=keyframe}var mix=this.time%frameTime/frameTime;if(this.directionBackwards){mix=1-mix}this.morphTargetInfluences[this.currentKeyframe]=mix;this.morphTargetInfluences[this.lastKeyframe]=1-mix};THREE.MorphAnimMesh.prototype.clone=function(object){if(object===undefined)object=new THREE.MorphAnimMesh(this.geometry,this.material);object.duration=this.duration;object.mirroredLoop=this.mirroredLoop;object.time=this.time;object.lastKeyframe=this.lastKeyframe;object.currentKeyframe=this.currentKeyframe;object.direction=this.direction;object.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,object);return object};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(object,distance){if(distance===undefined)distance=0;distance=Math.abs(distance);for(var l=0;l<this.objects.length;l++){if(distance<this.objects[l].distance){break}}this.objects.splice(l,0,{distance:distance,object:object});this.add(object)};THREE.LOD.prototype.getObjectForDistance=function(distance){for(var i=1,l=this.objects.length;i<l;i++){if(distance<this.objects[i].distance){break}}return this.objects[i-1].object};THREE.LOD.prototype.update=function(){var v1=new THREE.Vector3;var v2=new THREE.Vector3;return function(camera){if(this.objects.length>1){v1.getPositionFromMatrix(camera.matrixWorld);v2.getPositionFromMatrix(this.matrixWorld);var distance=v1.distanceTo(v2);this.objects[0].object.visible=true;for(var i=1,l=this.objects.length;i<l;i++){if(distance>=this.objects[i].distance){this.objects[i-1].object.visible=false;this.objects[i].object.visible=true}else{break}}for(;i<l;i++){this.objects[i].object.visible=false}}}}();THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(material){THREE.Object3D.call(this);this.material=material!==undefined?material:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation,this.rotation3d.order);this.quaternion.setFromEuler(this.rotation3d);this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true};THREE.Sprite.prototype.clone=function(object){if(object===undefined)object=new THREE.Sprite(this.material);THREE.Object3D.prototype.clone.call(this,object);return object};THREE.Scene=function(){THREE.Object3D.call(this);this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;this.matrixAutoUpdate=false;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(object){if(object instanceof THREE.Light){if(this.__lights.indexOf(object)===-1){this.__lights.push(object)}if(object.target&&object.target.parent===undefined){this.add(object.target)}}else if(!(object instanceof THREE.Camera||object instanceof THREE.Bone)){this.__objectsAdded.push(object);var i=this.__objectsRemoved.indexOf(object);if(i!==-1){this.__objectsRemoved.splice(i,1)}}for(var c=0;c<object.children.length;c++){this.__addObject(object.children[c])}};THREE.Scene.prototype.__removeObject=function(object){if(object instanceof THREE.Light){var i=this.__lights.indexOf(object);if(i!==-1){this.__lights.splice(i,1)}if(object.shadowCascadeArray){for(var x=0;x<object.shadowCascadeArray.length;x++){this.__removeObject(object.shadowCascadeArray[x])}}}else if(!(object instanceof THREE.Camera)){this.__objectsRemoved.push(object);var i=this.__objectsAdded.indexOf(object);if(i!==-1){this.__objectsAdded.splice(i,1)}}for(var c=0;c<object.children.length;c++){this.__removeObject(object.children[c])}};THREE.Scene.prototype.clone=function(object){if(object===undefined)object=new THREE.Scene;THREE.Object3D.prototype.clone.call(this,object);if(this.fog!==null)object.fog=this.fog.clone();if(this.overrideMaterial!==null)object.overrideMaterial=this.overrideMaterial.clone();object.autoUpdate=this.autoUpdate;object.matrixAutoUpdate=this.matrixAutoUpdate;return object};THREE.Fog=function(hex,near,far){this.name="";this.color=new THREE.Color(hex);this.near=near!==undefined?near:1;this.far=far!==undefined?far:1e3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(hex,density){this.name="";this.color=new THREE.Color(hex);this.density=density!==undefined?density:25e-5};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(parameters){console.log("THREE.CanvasRenderer",THREE.REVISION);var smoothstep=THREE.Math.smoothstep;parameters=parameters||{};var _this=this,_renderData,_elements,_lights,_projector=new THREE.Projector,_canvas=parameters.canvas!==undefined?parameters.canvas:document.createElement("canvas"),_canvasWidth,_canvasHeight,_canvasWidthHalf,_canvasHeightHalf,_context=_canvas.getContext("2d"),_clearColor=new THREE.Color(0),_clearAlpha=0,_contextGlobalAlpha=1,_contextGlobalCompositeOperation=0,_contextStrokeStyle=null,_contextFillStyle=null,_contextLineWidth=null,_contextLineCap=null,_contextLineJoin=null,_contextDashSize=null,_contextGapSize=0,_camera,_v1,_v2,_v3,_v4,_v5=new THREE.RenderableVertex,_v6=new THREE.RenderableVertex,_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_v4x,_v4y,_v5x,_v5y,_v6x,_v6y,_color=new THREE.Color,_color1=new THREE.Color,_color2=new THREE.Color,_color3=new THREE.Color,_color4=new THREE.Color,_diffuseColor=new THREE.Color,_emissiveColor=new THREE.Color,_lightColor=new THREE.Color,_patterns={},_imagedatas={},_near,_far,_image,_uvs,_uv1x,_uv1y,_uv2x,_uv2y,_uv3x,_uv3y,_clipBox=new THREE.Box2,_clearBox=new THREE.Box2,_elemBox=new THREE.Box2,_ambientLight=new THREE.Color,_directionalLights=new THREE.Color,_pointLights=new THREE.Color,_vector3=new THREE.Vector3,_pixelMap,_pixelMapContext,_pixelMapImage,_pixelMapData,_gradientMap,_gradientMapContext,_gradientMapQuality=16;_pixelMap=document.createElement("canvas");_pixelMap.width=_pixelMap.height=2;_pixelMapContext=_pixelMap.getContext("2d");_pixelMapContext.fillStyle="rgba(0,0,0,1)";_pixelMapContext.fillRect(0,0,2,2);_pixelMapImage=_pixelMapContext.getImageData(0,0,2,2);_pixelMapData=_pixelMapImage.data;_gradientMap=document.createElement("canvas");_gradientMap.width=_gradientMap.height=_gradientMapQuality;_gradientMapContext=_gradientMap.getContext("2d");_gradientMapContext.translate(-_gradientMapQuality/2,-_gradientMapQuality/2);_gradientMapContext.scale(_gradientMapQuality,_gradientMapQuality);_gradientMapQuality--;if(_context.setLineDash===undefined){if(_context.mozDash!==undefined){_context.setLineDash=function(values){_context.mozDash=values[0]!==null?values:null}}else{_context.setLineDash=function(){}}}this.domElement=_canvas;this.devicePixelRatio=parameters.devicePixelRatio!==undefined?parameters.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=true;this.sortObjects=true;this.sortElements=true;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(width,height,updateStyle){_canvasWidth=width*this.devicePixelRatio;_canvasHeight=height*this.devicePixelRatio;_canvasWidthHalf=Math.floor(_canvasWidth/2);_canvasHeightHalf=Math.floor(_canvasHeight/2);_canvas.width=_canvasWidth;_canvas.height=_canvasHeight;if(this.devicePixelRatio!==1&&updateStyle!==false){_canvas.style.width=width+"px";_canvas.style.height=height+"px"}_clipBox.set(new THREE.Vector2(-_canvasWidthHalf,-_canvasHeightHalf),new THREE.Vector2(_canvasWidthHalf,_canvasHeightHalf));_clearBox.set(new THREE.Vector2(-_canvasWidthHalf,-_canvasHeightHalf),new THREE.Vector2(_canvasWidthHalf,_canvasHeightHalf));_contextGlobalAlpha=1;_contextGlobalCompositeOperation=0;_contextStrokeStyle=null;_contextFillStyle=null;_contextLineWidth=null;_contextLineCap=null;_contextLineJoin=null};this.setClearColor=function(color,alpha){_clearColor.set(color);_clearAlpha=alpha!==undefined?alpha:1;_clearBox.set(new THREE.Vector2(-_canvasWidthHalf,-_canvasHeightHalf),new THREE.Vector2(_canvasWidthHalf,_canvasHeightHalf))};this.setClearColorHex=function(hex,alpha){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(hex,alpha)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){_context.setTransform(1,0,0,-1,_canvasWidthHalf,_canvasHeightHalf);if(_clearBox.empty()===false){_clearBox.intersect(_clipBox);_clearBox.expandByScalar(2);if(_clearAlpha<1){_context.clearRect(_clearBox.min.x|0,_clearBox.min.y|0,_clearBox.max.x-_clearBox.min.x|0,_clearBox.max.y-_clearBox.min.y|0)}if(_clearAlpha>0){setBlending(THREE.NormalBlending);setOpacity(1);setFillStyle("rgba("+Math.floor(_clearColor.r*255)+","+Math.floor(_clearColor.g*255)+","+Math.floor(_clearColor.b*255)+","+_clearAlpha+")");_context.fillRect(_clearBox.min.x|0,_clearBox.min.y|0,_clearBox.max.x-_clearBox.min.x|0,_clearBox.max.y-_clearBox.min.y|0)}_clearBox.makeEmpty()}};this.render=function(scene,camera){if(camera instanceof THREE.Camera===false){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");return}if(this.autoClear===true)this.clear();_context.setTransform(1,0,0,-1,_canvasWidthHalf,_canvasHeightHalf);_this.info.render.vertices=0;_this.info.render.faces=0;_renderData=_projector.projectScene(scene,camera,this.sortObjects,this.sortElements);_elements=_renderData.elements;_lights=_renderData.lights;_camera=camera;calculateLights();for(var e=0,el=_elements.length;e<el;e++){var element=_elements[e];var material=element.material;if(material===undefined||material.visible===false)continue;_elemBox.makeEmpty();if(element instanceof THREE.RenderableParticle){_v1=element;_v1.x*=_canvasWidthHalf;_v1.y*=_canvasHeightHalf;renderParticle(_v1,element,material)}else if(element instanceof THREE.RenderableLine){_v1=element.v1;_v2=element.v2;_v1.positionScreen.x*=_canvasWidthHalf;_v1.positionScreen.y*=_canvasHeightHalf;_v2.positionScreen.x*=_canvasWidthHalf;_v2.positionScreen.y*=_canvasHeightHalf;_elemBox.setFromPoints([_v1.positionScreen,_v2.positionScreen]);if(_clipBox.isIntersectionBox(_elemBox)===true){renderLine(_v1,_v2,element,material)}}else if(element instanceof THREE.RenderableFace3){_v1=element.v1;_v2=element.v2;_v3=element.v3;if(_v1.positionScreen.z<-1||_v1.positionScreen.z>1)continue;if(_v2.positionScreen.z<-1||_v2.positionScreen.z>1)continue;if(_v3.positionScreen.z<-1||_v3.positionScreen.z>1)continue;_v1.positionScreen.x*=_canvasWidthHalf;_v1.positionScreen.y*=_canvasHeightHalf;_v2.positionScreen.x*=_canvasWidthHalf;_v2.positionScreen.y*=_canvasHeightHalf;_v3.positionScreen.x*=_canvasWidthHalf;_v3.positionScreen.y*=_canvasHeightHalf;if(material.overdraw>0){expand(_v1.positionScreen,_v2.positionScreen,material.overdraw);expand(_v2.positionScreen,_v3.positionScreen,material.overdraw);expand(_v3.positionScreen,_v1.positionScreen,material.overdraw)}_elemBox.setFromPoints([_v1.positionScreen,_v2.positionScreen,_v3.positionScreen]);if(_clipBox.isIntersectionBox(_elemBox)===true){renderFace3(_v1,_v2,_v3,0,1,2,element,material)}}_clearBox.union(_elemBox)}_context.setTransform(1,0,0,1,0,0)};function calculateLights(){_ambientLight.setRGB(0,0,0);_directionalLights.setRGB(0,0,0);_pointLights.setRGB(0,0,0);for(var l=0,ll=_lights.length;l<ll;l++){var light=_lights[l];var lightColor=light.color;if(light instanceof THREE.AmbientLight){_ambientLight.add(lightColor)}else if(light instanceof THREE.DirectionalLight){_directionalLights.add(lightColor)}else if(light instanceof THREE.PointLight){_pointLights.add(lightColor)}}}function calculateLight(position,normal,color){for(var l=0,ll=_lights.length;l<ll;l++){var light=_lights[l];_lightColor.copy(light.color);if(light instanceof THREE.DirectionalLight){var lightPosition=_vector3.getPositionFromMatrix(light.matrixWorld).normalize();var amount=normal.dot(lightPosition);if(amount<=0)continue;amount*=light.intensity;color.add(_lightColor.multiplyScalar(amount))}else if(light instanceof THREE.PointLight){var lightPosition=_vector3.getPositionFromMatrix(light.matrixWorld);var amount=normal.dot(_vector3.subVectors(lightPosition,position).normalize());if(amount<=0)continue;amount*=light.distance==0?1:1-Math.min(position.distanceTo(lightPosition)/light.distance,1);if(amount==0)continue;amount*=light.intensity;color.add(_lightColor.multiplyScalar(amount))}}}function renderParticle(v1,element,material){setOpacity(material.opacity);setBlending(material.blending);var width,height,scaleX,scaleY,bitmap,bitmapWidth,bitmapHeight;if(material instanceof THREE.ParticleBasicMaterial){if(material.map===null){scaleX=element.object.scale.x;scaleY=element.object.scale.y;scaleX*=element.scale.x*_canvasWidthHalf;scaleY*=element.scale.y*_canvasHeightHalf;_elemBox.min.set(v1.x-scaleX,v1.y-scaleY);_elemBox.max.set(v1.x+scaleX,v1.y+scaleY);if(_clipBox.isIntersectionBox(_elemBox)===false){_elemBox.makeEmpty();return}setFillStyle(material.color.getStyle());_context.save();_context.translate(v1.x,v1.y);_context.rotate(-element.rotation);_context.scale(scaleX,scaleY);_context.fillRect(-1,-1,2,2);_context.restore()}else{bitmap=material.map.image;bitmapWidth=bitmap.width>>1;bitmapHeight=bitmap.height>>1;scaleX=element.scale.x*_canvasWidthHalf;scaleY=element.scale.y*_canvasHeightHalf;width=scaleX*bitmapWidth;height=scaleY*bitmapHeight;_elemBox.min.set(v1.x-width,v1.y-height);_elemBox.max.set(v1.x+width,v1.y+height);if(_clipBox.isIntersectionBox(_elemBox)===false){_elemBox.makeEmpty();return}_context.save();_context.translate(v1.x,v1.y);_context.rotate(-element.rotation);_context.scale(scaleX,-scaleY);_context.translate(-bitmapWidth,-bitmapHeight);_context.drawImage(bitmap,0,0);_context.restore()}}else if(material instanceof THREE.ParticleCanvasMaterial){width=element.scale.x*_canvasWidthHalf;height=element.scale.y*_canvasHeightHalf;_elemBox.min.set(v1.x-width,v1.y-height);_elemBox.max.set(v1.x+width,v1.y+height);if(_clipBox.isIntersectionBox(_elemBox)===false){_elemBox.makeEmpty();return}setStrokeStyle(material.color.getStyle());setFillStyle(material.color.getStyle());_context.save();_context.translate(v1.x,v1.y);_context.rotate(-element.rotation);_context.scale(width,height);material.program(_context);_context.restore()}}function renderLine(v1,v2,element,material){setOpacity(material.opacity);setBlending(material.blending);_context.beginPath();_context.moveTo(v1.positionScreen.x,v1.positionScreen.y);_context.lineTo(v2.positionScreen.x,v2.positionScreen.y);if(material instanceof THREE.LineBasicMaterial){setLineWidth(material.linewidth);setLineCap(material.linecap);setLineJoin(material.linejoin);if(material.vertexColors!==THREE.VertexColors){setStrokeStyle(material.color.getStyle())}else{var colorStyle1=element.vertexColors[0].getStyle();var colorStyle2=element.vertexColors[1].getStyle();if(colorStyle1===colorStyle2){setStrokeStyle(colorStyle1)}else{try{var grad=_context.createLinearGradient(v1.positionScreen.x,v1.positionScreen.y,v2.positionScreen.x,v2.positionScreen.y);grad.addColorStop(0,colorStyle1);grad.addColorStop(1,colorStyle2)}catch(exception){grad=colorStyle1}setStrokeStyle(grad)}}_context.stroke();_elemBox.expandByScalar(material.linewidth*2)}else if(material instanceof THREE.LineDashedMaterial){setLineWidth(material.linewidth);setLineCap(material.linecap);setLineJoin(material.linejoin);setStrokeStyle(material.color.getStyle());setDashAndGap(material.dashSize,material.gapSize);_context.stroke();_elemBox.expandByScalar(material.linewidth*2);setDashAndGap(null,null)}}function renderFace3(v1,v2,v3,uv1,uv2,uv3,element,material){_this.info.render.vertices+=3;
_this.info.render.faces++;setOpacity(material.opacity);setBlending(material.blending);_v1x=v1.positionScreen.x;_v1y=v1.positionScreen.y;_v2x=v2.positionScreen.x;_v2y=v2.positionScreen.y;_v3x=v3.positionScreen.x;_v3y=v3.positionScreen.y;drawTriangle(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y);if((material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial)&&material.map===null){_diffuseColor.copy(material.color);_emissiveColor.copy(material.emissive);if(material.vertexColors===THREE.FaceColors){_diffuseColor.multiply(element.color)}if(material.wireframe===false&&material.shading==THREE.SmoothShading&&element.vertexNormalsLength==3){_color1.copy(_ambientLight);_color2.copy(_ambientLight);_color3.copy(_ambientLight);calculateLight(element.v1.positionWorld,element.vertexNormalsModel[0],_color1);calculateLight(element.v2.positionWorld,element.vertexNormalsModel[1],_color2);calculateLight(element.v3.positionWorld,element.vertexNormalsModel[2],_color3);_color1.multiply(_diffuseColor).add(_emissiveColor);_color2.multiply(_diffuseColor).add(_emissiveColor);_color3.multiply(_diffuseColor).add(_emissiveColor);_color4.addColors(_color2,_color3).multiplyScalar(.5);_image=getGradientTexture(_color1,_color2,_color3,_color4);clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image)}else{_color.copy(_ambientLight);calculateLight(element.centroidModel,element.normalModel,_color);_color.multiply(_diffuseColor).add(_emissiveColor);material.wireframe===true?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color)}}else if(material instanceof THREE.MeshBasicMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial){if(material.map!==null){if(material.map.mapping instanceof THREE.UVMapping){_uvs=element.uvs[0];patternPath(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_uvs[uv1].x,_uvs[uv1].y,_uvs[uv2].x,_uvs[uv2].y,_uvs[uv3].x,_uvs[uv3].y,material.map)}}else if(material.envMap!==null){if(material.envMap.mapping instanceof THREE.SphericalReflectionMapping){_vector3.copy(element.vertexNormalsModelView[uv1]);_uv1x=.5*_vector3.x+.5;_uv1y=.5*_vector3.y+.5;_vector3.copy(element.vertexNormalsModelView[uv2]);_uv2x=.5*_vector3.x+.5;_uv2y=.5*_vector3.y+.5;_vector3.copy(element.vertexNormalsModelView[uv3]);_uv3x=.5*_vector3.x+.5;_uv3y=.5*_vector3.y+.5;patternPath(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,_uv1x,_uv1y,_uv2x,_uv2y,_uv3x,_uv3y,material.envMap)}}else{_color.copy(material.color);if(material.vertexColors===THREE.FaceColors){_color.multiply(element.color)}material.wireframe===true?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color)}}else if(material instanceof THREE.MeshDepthMaterial){_near=_camera.near;_far=_camera.far;_color1.r=_color1.g=_color1.b=1-smoothstep(v1.positionScreen.z*v1.positionScreen.w,_near,_far);_color2.r=_color2.g=_color2.b=1-smoothstep(v2.positionScreen.z*v2.positionScreen.w,_near,_far);_color3.r=_color3.g=_color3.b=1-smoothstep(v3.positionScreen.z*v3.positionScreen.w,_near,_far);_color4.addColors(_color2,_color3).multiplyScalar(.5);_image=getGradientTexture(_color1,_color2,_color3,_color4);clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image)}else if(material instanceof THREE.MeshNormalMaterial){var normal;if(material.shading==THREE.FlatShading){normal=element.normalModelView;_color.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5);material.wireframe===true?strokePath(_color,material.wireframeLinewidth,material.wireframeLinecap,material.wireframeLinejoin):fillPath(_color)}else if(material.shading==THREE.SmoothShading){normal=element.vertexNormalsModelView[uv1];_color1.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5);normal=element.vertexNormalsModelView[uv2];_color2.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5);normal=element.vertexNormalsModelView[uv3];_color3.setRGB(normal.x,normal.y,normal.z).multiplyScalar(.5).addScalar(.5);_color4.addColors(_color2,_color3).multiplyScalar(.5);_image=getGradientTexture(_color1,_color2,_color3,_color4);clipImage(_v1x,_v1y,_v2x,_v2y,_v3x,_v3y,0,0,1,0,0,1,_image)}}}function drawTriangle(x0,y0,x1,y1,x2,y2){_context.beginPath();_context.moveTo(x0,y0);_context.lineTo(x1,y1);_context.lineTo(x2,y2);_context.closePath()}function strokePath(color,linewidth,linecap,linejoin){setLineWidth(linewidth);setLineCap(linecap);setLineJoin(linejoin);setStrokeStyle(color.getStyle());_context.stroke();_elemBox.expandByScalar(linewidth*2)}function fillPath(color){setFillStyle(color.getStyle());_context.fill()}function patternPath(x0,y0,x1,y1,x2,y2,u0,v0,u1,v1,u2,v2,texture){if(texture instanceof THREE.DataTexture||texture.image===undefined||texture.image.width==0)return;if(texture.needsUpdate===true){var repeatX=texture.wrapS==THREE.RepeatWrapping;var repeatY=texture.wrapT==THREE.RepeatWrapping;_patterns[texture.id]=_context.createPattern(texture.image,repeatX===true&&repeatY===true?"repeat":repeatX===true&&repeatY===false?"repeat-x":repeatX===false&&repeatY===true?"repeat-y":"no-repeat");texture.needsUpdate=false}_patterns[texture.id]===undefined?setFillStyle("rgba(0,0,0,1)"):setFillStyle(_patterns[texture.id]);var a,b,c,d,e,f,det,idet,offsetX=texture.offset.x/texture.repeat.x,offsetY=texture.offset.y/texture.repeat.y,width=texture.image.width*texture.repeat.x,height=texture.image.height*texture.repeat.y;u0=(u0+offsetX)*width;v0=(1-v0+offsetY)*height;u1=(u1+offsetX)*width;v1=(1-v1+offsetY)*height;u2=(u2+offsetX)*width;v2=(1-v2+offsetY)*height;x1-=x0;y1-=y0;x2-=x0;y2-=y0;u1-=u0;v1-=v0;u2-=u0;v2-=v0;det=u1*v2-u2*v1;if(det===0){if(_imagedatas[texture.id]===undefined){var canvas=document.createElement("canvas");canvas.width=texture.image.width;canvas.height=texture.image.height;var context=canvas.getContext("2d");context.drawImage(texture.image,0,0);_imagedatas[texture.id]=context.getImageData(0,0,texture.image.width,texture.image.height).data}var data=_imagedatas[texture.id];var index=(Math.floor(u0)+Math.floor(v0)*texture.image.width)*4;_color.setRGB(data[index]/255,data[index+1]/255,data[index+2]/255);fillPath(_color);return}idet=1/det;a=(v2*x1-v1*x2)*idet;b=(v2*y1-v1*y2)*idet;c=(u1*x2-u2*x1)*idet;d=(u1*y2-u2*y1)*idet;e=x0-a*u0-c*v0;f=y0-b*u0-d*v0;_context.save();_context.transform(a,b,c,d,e,f);_context.fill();_context.restore()}function clipImage(x0,y0,x1,y1,x2,y2,u0,v0,u1,v1,u2,v2,image){var a,b,c,d,e,f,det,idet,width=image.width-1,height=image.height-1;u0*=width;v0*=height;u1*=width;v1*=height;u2*=width;v2*=height;x1-=x0;y1-=y0;x2-=x0;y2-=y0;u1-=u0;v1-=v0;u2-=u0;v2-=v0;det=u1*v2-u2*v1;idet=1/det;a=(v2*x1-v1*x2)*idet;b=(v2*y1-v1*y2)*idet;c=(u1*x2-u2*x1)*idet;d=(u1*y2-u2*y1)*idet;e=x0-a*u0-c*v0;f=y0-b*u0-d*v0;_context.save();_context.transform(a,b,c,d,e,f);_context.clip();_context.drawImage(image,0,0);_context.restore()}function getGradientTexture(color1,color2,color3,color4){_pixelMapData[0]=color1.r*255|0;_pixelMapData[1]=color1.g*255|0;_pixelMapData[2]=color1.b*255|0;_pixelMapData[4]=color2.r*255|0;_pixelMapData[5]=color2.g*255|0;_pixelMapData[6]=color2.b*255|0;_pixelMapData[8]=color3.r*255|0;_pixelMapData[9]=color3.g*255|0;_pixelMapData[10]=color3.b*255|0;_pixelMapData[12]=color4.r*255|0;_pixelMapData[13]=color4.g*255|0;_pixelMapData[14]=color4.b*255|0;_pixelMapContext.putImageData(_pixelMapImage,0,0);_gradientMapContext.drawImage(_pixelMap,0,0);return _gradientMap}function expand(v1,v2,pixels){var x=v2.x-v1.x,y=v2.y-v1.y,det=x*x+y*y,idet;if(det===0)return;idet=pixels/Math.sqrt(det);x*=idet;y*=idet;v2.x+=x;v2.y+=y;v1.x-=x;v1.y-=y}function setOpacity(value){if(_contextGlobalAlpha!==value){_context.globalAlpha=value;_contextGlobalAlpha=value}}function setBlending(value){if(_contextGlobalCompositeOperation!==value){if(value===THREE.NormalBlending){_context.globalCompositeOperation="source-over"}else if(value===THREE.AdditiveBlending){_context.globalCompositeOperation="lighter"}else if(value===THREE.SubtractiveBlending){_context.globalCompositeOperation="darker"}_contextGlobalCompositeOperation=value}}function setLineWidth(value){if(_contextLineWidth!==value){_context.lineWidth=value;_contextLineWidth=value}}function setLineCap(value){if(_contextLineCap!==value){_context.lineCap=value;_contextLineCap=value}}function setLineJoin(value){if(_contextLineJoin!==value){_context.lineJoin=value;_contextLineJoin=value}}function setStrokeStyle(value){if(_contextStrokeStyle!==value){_context.strokeStyle=value;_contextStrokeStyle=value}}function setFillStyle(value){if(_contextFillStyle!==value){_context.fillStyle=value;_contextFillStyle=value}}function setDashAndGap(dashSizeValue,gapSizeValue){if(_contextDashSize!==dashSizeValue||_contextGapSize!==gapSizeValue){_context.setLineDash([dashSizeValue,gapSizeValue]);_contextDashSize=dashSizeValue;_contextGapSize=gapSizeValue}}};THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),
color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","uniform int boneTextureWidth;","uniform int boneTextureHeight;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, float( boneTextureWidth ) );","float y = floor( j / float( boneTextureWidth ) );","float dx = 1.0 / float( boneTextureWidth );","float dy = 1.0 / float( boneTextureHeight );","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")};THREE.UniformsUtils={merge:function(uniforms){var u,p,tmp,merged={};for(u=0;u<uniforms.length;u++){tmp=this.clone(uniforms[u]);for(p in tmp){merged[p]=tmp[p]}}return merged},clone:function(uniforms_src){var u,p,parameter,parameter_src,uniforms_dst={};for(u in uniforms_src){uniforms_dst[u]={};for(p in uniforms_src[u]){parameter_src=uniforms_src[u][p];if(parameter_src instanceof THREE.Color||parameter_src instanceof THREE.Vector2||parameter_src instanceof THREE.Vector3||parameter_src instanceof THREE.Vector4||parameter_src instanceof THREE.Matrix4||parameter_src instanceof THREE.Texture){uniforms_dst[u][p]=parameter_src.clone()}else if(parameter_src instanceof Array){uniforms_dst[u][p]=parameter_src.slice()}else{uniforms_dst[u][p]=parameter_src}}}return uniforms_dst}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["fog"],THREE.UniformsLib["shadowmap"]]),vertexShader:[THREE.ShaderChunk["map_pars_vertex"],THREE.ShaderChunk["lightmap_pars_vertex"],THREE.ShaderChunk["envmap_pars_vertex"],THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],"void main() {",THREE.ShaderChunk["map_vertex"],THREE.ShaderChunk["lightmap_vertex"],THREE.ShaderChunk["color_vertex"],THREE.ShaderChunk["skinbase_vertex"],"#ifdef USE_ENVMAP",THREE.ShaderChunk["morphnormal_vertex"],THREE.ShaderChunk["skinnormal_vertex"],THREE.ShaderChunk["defaultnormal_vertex"],"#endif",THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["envmap_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_pars_fragment"],THREE.ShaderChunk["lightmap_pars_fragment"],THREE.ShaderChunk["envmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["specularmap_pars_fragment"],"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk["map_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["specularmap_fragment"],THREE.ShaderChunk["lightmap_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["envmap_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],THREE.UniformsLib["shadowmap"],{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk["map_pars_vertex"],THREE.ShaderChunk["lightmap_pars_vertex"],THREE.ShaderChunk["envmap_pars_vertex"],THREE.ShaderChunk["lights_lambert_pars_vertex"],THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],"void main() {",THREE.ShaderChunk["map_vertex"],THREE.ShaderChunk["lightmap_vertex"],THREE.ShaderChunk["color_vertex"],THREE.ShaderChunk["morphnormal_vertex"],THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["skinnormal_vertex"],THREE.ShaderChunk["defaultnormal_vertex"],THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["envmap_vertex"],THREE.ShaderChunk["lights_lambert_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_pars_fragment"],THREE.ShaderChunk["lightmap_pars_fragment"],THREE.ShaderChunk["envmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["specularmap_pars_fragment"],"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk["map_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["specularmap_fragment"],"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk["lightmap_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["envmap_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["bump"],THREE.UniformsLib["normalmap"],THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],THREE.UniformsLib["shadowmap"],{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk["map_pars_vertex"],THREE.ShaderChunk["lightmap_pars_vertex"],THREE.ShaderChunk["envmap_pars_vertex"],THREE.ShaderChunk["lights_phong_pars_vertex"],THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],"void main() {",THREE.ShaderChunk["map_vertex"],THREE.ShaderChunk["lightmap_vertex"],THREE.ShaderChunk["color_vertex"],THREE.ShaderChunk["morphnormal_vertex"],THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["skinnormal_vertex"],THREE.ShaderChunk["defaultnormal_vertex"],"vNormal = normalize( transformedNormal );",THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["envmap_vertex"],THREE.ShaderChunk["lights_phong_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_pars_fragment"],THREE.ShaderChunk["lightmap_pars_fragment"],THREE.ShaderChunk["envmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["lights_phong_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["bumpmap_pars_fragment"],THREE.ShaderChunk["normalmap_pars_fragment"],THREE.ShaderChunk["specularmap_pars_fragment"],"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk["map_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["specularmap_fragment"],THREE.ShaderChunk["lights_phong_fragment"],THREE.ShaderChunk["lightmap_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["envmap_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["particle"],THREE.UniformsLib["shadowmap"]]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk["color_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],"void main() {",THREE.ShaderChunk["color_vertex"],"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk["worldpos_vertex"],THREE.ShaderChunk["shadowmap_vertex"],"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["map_particle_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],THREE.ShaderChunk["shadowmap_pars_fragment"],"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk["map_particle_fragment"],THREE.ShaderChunk["alphatest_fragment"],THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["common"],THREE.UniformsLib["fog"],{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk["color_pars_vertex"],"void main() {",THREE.ShaderChunk["color_vertex"],"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk["color_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk["color_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk["morphtarget_pars_vertex"],"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["default_vertex"],"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib["fog"],THREE.UniformsLib["lights"],THREE.UniformsLib["shadowmap"],{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk["shadowmap_pars_fragment"],THREE.ShaderChunk["fog_pars_fragment"],"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk["shadowmap_fragment"],THREE.ShaderChunk["linear_to_gamma_fragment"],THREE.ShaderChunk["fog_fragment"],"}"].join("\n"),
vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk["skinning_pars_vertex"],THREE.ShaderChunk["shadowmap_pars_vertex"],"void main() {",THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["skinnormal_vertex"],"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk["morphtarget_pars_vertex"],THREE.ShaderChunk["skinning_pars_vertex"],"void main() {",THREE.ShaderChunk["skinbase_vertex"],THREE.ShaderChunk["morphtarget_vertex"],THREE.ShaderChunk["skinning_vertex"],THREE.ShaderChunk["default_vertex"],"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}};THREE.WebGLRenderer=function(parameters){console.log("THREE.WebGLRenderer",THREE.REVISION);parameters=parameters||{};var _canvas=parameters.canvas!==undefined?parameters.canvas:document.createElement("canvas"),_precision=parameters.precision!==undefined?parameters.precision:"highp",_alpha=parameters.alpha!==undefined?parameters.alpha:true,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_clearColor=new THREE.Color(0),_clearAlpha=0;this.domElement=_canvas;this.context=null;this.devicePixelRatio=parameters.devicePixelRatio!==undefined?parameters.devicePixelRatio:self.devicePixelRatio!==undefined?self.devicePixelRatio:1;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.autoUpdateObjects=true;this.gammaInput=false;this.gammaOutput=false;this.physicallyBasedShading=false;this.shadowMapEnabled=false;this.shadowMapAutoUpdate=true;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapDebug=false;this.shadowMapCascade=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var _this=this,_programs=[],_programs_counter=0,_currentProgram=null,_currentFramebuffer=null,_currentMaterialId=-1,_currentGeometryGroupHash=null,_currentCamera=null,_geometryGroupCounter=0,_usedTextureUnits=0,_oldDoubleSided=-1,_oldFlipSided=-1,_oldBlending=-1,_oldBlendEquation=-1,_oldBlendSrc=-1,_oldBlendDst=-1,_oldDepthTest=-1,_oldDepthWrite=-1,_oldPolygonOffset=null,_oldPolygonOffsetFactor=null,_oldPolygonOffsetUnits=null,_oldLineWidth=null,_viewportX=0,_viewportY=0,_viewportWidth=0,_viewportHeight=0,_currentWidth=0,_currentHeight=0,_enabledAttributes={},_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4,_projScreenMatrixPS=new THREE.Matrix4,_vector3=new THREE.Vector3,_direction=new THREE.Vector3,_lightsNeedUpdate=true,_lights={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};var _gl;var _glExtensionTextureFloat;var _glExtensionTextureFloatLinear;var _glExtensionStandardDerivatives;var _glExtensionTextureFilterAnisotropic;var _glExtensionCompressedTextureS3TC;initGL();setDefaultGLState();this.context=_gl;var _maxTextures=_gl.getParameter(_gl.MAX_TEXTURE_IMAGE_UNITS);var _maxVertexTextures=_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);var _maxTextureSize=_gl.getParameter(_gl.MAX_TEXTURE_SIZE);var _maxCubemapSize=_gl.getParameter(_gl.MAX_CUBE_MAP_TEXTURE_SIZE);var _maxAnisotropy=_glExtensionTextureFilterAnisotropic?_gl.getParameter(_glExtensionTextureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0;var _supportsVertexTextures=_maxVertexTextures>0;var _supportsBoneTextures=_supportsVertexTextures&&_glExtensionTextureFloat;var _compressedTextureFormats=_glExtensionCompressedTextureS3TC?_gl.getParameter(_gl.COMPRESSED_TEXTURE_FORMATS):[];var _vertexShaderPrecisionHighpFloat=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.HIGH_FLOAT);var _vertexShaderPrecisionMediumpFloat=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.MEDIUM_FLOAT);var _vertexShaderPrecisionLowpFloat=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.LOW_FLOAT);var _fragmentShaderPrecisionHighpFloat=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.HIGH_FLOAT);var _fragmentShaderPrecisionMediumpFloat=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.MEDIUM_FLOAT);var _fragmentShaderPrecisionLowpFloat=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.LOW_FLOAT);var _vertexShaderPrecisionHighpInt=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.HIGH_INT);var _vertexShaderPrecisionMediumpInt=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.MEDIUM_INT);var _vertexShaderPrecisionLowpInt=_gl.getShaderPrecisionFormat(_gl.VERTEX_SHADER,_gl.LOW_INT);var _fragmentShaderPrecisionHighpInt=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.HIGH_INT);var _fragmentShaderPrecisionMediumpInt=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.MEDIUM_INT);var _fragmentShaderPrecisionLowpInt=_gl.getShaderPrecisionFormat(_gl.FRAGMENT_SHADER,_gl.LOW_INT);var highpAvailable=_vertexShaderPrecisionHighpFloat.precision>0&&_fragmentShaderPrecisionHighpFloat.precision>0;var mediumpAvailable=_vertexShaderPrecisionMediumpFloat.precision>0&&_fragmentShaderPrecisionMediumpFloat.precision>0;if(_precision==="highp"&&!highpAvailable){if(mediumpAvailable){_precision="mediump";console.warn("WebGLRenderer: highp not supported, using mediump")}else{_precision="lowp";console.warn("WebGLRenderer: highp and mediump not supported, using lowp")}}if(_precision==="mediump"&&!mediumpAvailable){_precision="lowp";console.warn("WebGLRenderer: mediump not supported, using lowp")}this.getContext=function(){return _gl};this.supportsVertexTextures=function(){return _supportsVertexTextures};this.supportsFloatTextures=function(){return _glExtensionTextureFloat};this.supportsStandardDerivatives=function(){return _glExtensionStandardDerivatives};this.supportsCompressedTextureS3TC=function(){return _glExtensionCompressedTextureS3TC};this.getMaxAnisotropy=function(){return _maxAnisotropy};this.getPrecision=function(){return _precision};this.setSize=function(width,height,updateStyle){_canvas.width=width*this.devicePixelRatio;_canvas.height=height*this.devicePixelRatio;if(this.devicePixelRatio!==1&&updateStyle!==false){_canvas.style.width=width+"px";_canvas.style.height=height+"px"}this.setViewport(0,0,_canvas.width,_canvas.height)};this.setViewport=function(x,y,width,height){_viewportX=x!==undefined?x:0;_viewportY=y!==undefined?y:0;_viewportWidth=width!==undefined?width:_canvas.width;_viewportHeight=height!==undefined?height:_canvas.height;_gl.viewport(_viewportX,_viewportY,_viewportWidth,_viewportHeight)};this.setScissor=function(x,y,width,height){_gl.scissor(x,y,width,height)};this.enableScissorTest=function(enable){enable?_gl.enable(_gl.SCISSOR_TEST):_gl.disable(_gl.SCISSOR_TEST)};this.setClearColor=function(color,alpha){_clearColor.set(color);_clearAlpha=alpha!==undefined?alpha:1;_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)};this.setClearColorHex=function(hex,alpha){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(hex,alpha)};this.getClearColor=function(){return _clearColor};this.getClearAlpha=function(){return _clearAlpha};this.clear=function(color,depth,stencil){var bits=0;if(color===undefined||color)bits|=_gl.COLOR_BUFFER_BIT;if(depth===undefined||depth)bits|=_gl.DEPTH_BUFFER_BIT;if(stencil===undefined||stencil)bits|=_gl.STENCIL_BUFFER_BIT;_gl.clear(bits)};this.clearTarget=function(renderTarget,color,depth,stencil){this.setRenderTarget(renderTarget);this.clear(color,depth,stencil)};this.addPostPlugin=function(plugin){plugin.init(this);this.renderPluginsPost.push(plugin)};this.addPrePlugin=function(plugin){plugin.init(this);this.renderPluginsPre.push(plugin)};this.updateShadowMap=function(scene,camera){_currentProgram=null;_oldBlending=-1;_oldDepthTest=-1;_oldDepthWrite=-1;_currentGeometryGroupHash=-1;_currentMaterialId=-1;_lightsNeedUpdate=true;_oldDoubleSided=-1;_oldFlipSided=-1;this.shadowMapPlugin.update(scene,camera)};function createParticleBuffers(geometry){geometry.__webglVertexBuffer=_gl.createBuffer();geometry.__webglColorBuffer=_gl.createBuffer();_this.info.memory.geometries++}function createLineBuffers(geometry){geometry.__webglVertexBuffer=_gl.createBuffer();geometry.__webglColorBuffer=_gl.createBuffer();geometry.__webglLineDistanceBuffer=_gl.createBuffer();_this.info.memory.geometries++}function createMeshBuffers(geometryGroup){geometryGroup.__webglVertexBuffer=_gl.createBuffer();geometryGroup.__webglNormalBuffer=_gl.createBuffer();geometryGroup.__webglTangentBuffer=_gl.createBuffer();geometryGroup.__webglColorBuffer=_gl.createBuffer();geometryGroup.__webglUVBuffer=_gl.createBuffer();geometryGroup.__webglUV2Buffer=_gl.createBuffer();geometryGroup.__webglSkinIndicesBuffer=_gl.createBuffer();geometryGroup.__webglSkinWeightsBuffer=_gl.createBuffer();geometryGroup.__webglFaceBuffer=_gl.createBuffer();geometryGroup.__webglLineBuffer=_gl.createBuffer();var m,ml;if(geometryGroup.numMorphTargets){geometryGroup.__webglMorphTargetsBuffers=[];for(m=0,ml=geometryGroup.numMorphTargets;m<ml;m++){geometryGroup.__webglMorphTargetsBuffers.push(_gl.createBuffer())}}if(geometryGroup.numMorphNormals){geometryGroup.__webglMorphNormalsBuffers=[];for(m=0,ml=geometryGroup.numMorphNormals;m<ml;m++){geometryGroup.__webglMorphNormalsBuffers.push(_gl.createBuffer())}}_this.info.memory.geometries++}var onGeometryDispose=function(event){var geometry=event.target;geometry.removeEventListener("dispose",onGeometryDispose);deallocateGeometry(geometry)};var onTextureDispose=function(event){var texture=event.target;texture.removeEventListener("dispose",onTextureDispose);deallocateTexture(texture);_this.info.memory.textures--};var onRenderTargetDispose=function(event){var renderTarget=event.target;renderTarget.removeEventListener("dispose",onRenderTargetDispose);deallocateRenderTarget(renderTarget);_this.info.memory.textures--};var onMaterialDispose=function(event){var material=event.target;material.removeEventListener("dispose",onMaterialDispose);deallocateMaterial(material)};var deleteBuffers=function(geometry){if(geometry.__webglVertexBuffer!==undefined)_gl.deleteBuffer(geometry.__webglVertexBuffer);if(geometry.__webglNormalBuffer!==undefined)_gl.deleteBuffer(geometry.__webglNormalBuffer);if(geometry.__webglTangentBuffer!==undefined)_gl.deleteBuffer(geometry.__webglTangentBuffer);if(geometry.__webglColorBuffer!==undefined)_gl.deleteBuffer(geometry.__webglColorBuffer);if(geometry.__webglUVBuffer!==undefined)_gl.deleteBuffer(geometry.__webglUVBuffer);if(geometry.__webglUV2Buffer!==undefined)_gl.deleteBuffer(geometry.__webglUV2Buffer);if(geometry.__webglSkinIndicesBuffer!==undefined)_gl.deleteBuffer(geometry.__webglSkinIndicesBuffer);if(geometry.__webglSkinWeightsBuffer!==undefined)_gl.deleteBuffer(geometry.__webglSkinWeightsBuffer);if(geometry.__webglFaceBuffer!==undefined)_gl.deleteBuffer(geometry.__webglFaceBuffer);if(geometry.__webglLineBuffer!==undefined)_gl.deleteBuffer(geometry.__webglLineBuffer);if(geometry.__webglLineDistanceBuffer!==undefined)_gl.deleteBuffer(geometry.__webglLineDistanceBuffer);if(geometry.__webglCustomAttributesList!==undefined){for(var id in geometry.__webglCustomAttributesList){_gl.deleteBuffer(geometry.__webglCustomAttributesList[id].buffer)}}_this.info.memory.geometries--};var deallocateGeometry=function(geometry){geometry.__webglInit=undefined;if(geometry instanceof THREE.BufferGeometry){var attributes=geometry.attributes;for(var key in attributes){if(attributes[key].buffer!==undefined){_gl.deleteBuffer(attributes[key].buffer)}}_this.info.memory.geometries--}else{if(geometry.geometryGroups!==undefined){for(var g in geometry.geometryGroups){var geometryGroup=geometry.geometryGroups[g];if(geometryGroup.numMorphTargets!==undefined){for(var m=0,ml=geometryGroup.numMorphTargets;m<ml;m++){_gl.deleteBuffer(geometryGroup.__webglMorphTargetsBuffers[m])}}if(geometryGroup.numMorphNormals!==undefined){for(var m=0,ml=geometryGroup.numMorphNormals;m<ml;m++){_gl.deleteBuffer(geometryGroup.__webglMorphNormalsBuffers[m])}}deleteBuffers(geometryGroup)}}else{deleteBuffers(geometry)}}};var deallocateTexture=function(texture){if(texture.image&&texture.image.__webglTextureCube){_gl.deleteTexture(texture.image.__webglTextureCube)}else{if(!texture.__webglInit)return;texture.__webglInit=false;_gl.deleteTexture(texture.__webglTexture)}};var deallocateRenderTarget=function(renderTarget){if(!renderTarget||!renderTarget.__webglTexture)return;_gl.deleteTexture(renderTarget.__webglTexture);if(renderTarget instanceof THREE.WebGLRenderTargetCube){for(var i=0;i<6;i++){_gl.deleteFramebuffer(renderTarget.__webglFramebuffer[i]);_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer[i])}}else{_gl.deleteFramebuffer(renderTarget.__webglFramebuffer);_gl.deleteRenderbuffer(renderTarget.__webglRenderbuffer)}};var deallocateMaterial=function(material){var program=material.program;if(program===undefined)return;material.program=undefined;var i,il,programInfo;var deleteProgram=false;for(i=0,il=_programs.length;i<il;i++){programInfo=_programs[i];if(programInfo.program===program){programInfo.usedTimes--;if(programInfo.usedTimes===0){deleteProgram=true}break}}if(deleteProgram===true){var newPrograms=[];for(i=0,il=_programs.length;i<il;i++){programInfo=_programs[i];if(programInfo.program!==program){newPrograms.push(programInfo)}}_programs=newPrograms;_gl.deleteProgram(program);_this.info.memory.programs--}};function initCustomAttributes(geometry,object){var nvertices=geometry.vertices.length;var material=object.material;if(material.attributes){if(geometry.__webglCustomAttributesList===undefined){geometry.__webglCustomAttributesList=[]}for(var a in material.attributes){var attribute=material.attributes[a];if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=true;var size=1;if(attribute.type==="v2")size=2;else if(attribute.type==="v3")size=3;else if(attribute.type==="v4")size=4;else if(attribute.type==="c")size=3;attribute.size=size;attribute.array=new Float32Array(nvertices*size);attribute.buffer=_gl.createBuffer();attribute.buffer.belongsToAttribute=a;attribute.needsUpdate=true}geometry.__webglCustomAttributesList.push(attribute)}}}function initParticleBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(nvertices*3);geometry.__colorArray=new Float32Array(nvertices*3);geometry.__sortArray=[];geometry.__webglParticleCount=nvertices;initCustomAttributes(geometry,object)}function initLineBuffers(geometry,object){var nvertices=geometry.vertices.length;geometry.__vertexArray=new Float32Array(nvertices*3);geometry.__colorArray=new Float32Array(nvertices*3);geometry.__lineDistanceArray=new Float32Array(nvertices*1);geometry.__webglLineCount=nvertices;initCustomAttributes(geometry,object)}function initMeshBuffers(geometryGroup,object){var geometry=object.geometry,faces3=geometryGroup.faces3,nvertices=faces3.length*3,ntris=faces3.length*1,nlines=faces3.length*3,material=getBufferMaterial(object,geometryGroup),uvType=bufferGuessUVType(material),normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material);geometryGroup.__vertexArray=new Float32Array(nvertices*3);if(normalType){geometryGroup.__normalArray=new Float32Array(nvertices*3)}if(geometry.hasTangents){geometryGroup.__tangentArray=new Float32Array(nvertices*4)}if(vertexColorType){geometryGroup.__colorArray=new Float32Array(nvertices*3)}if(uvType){if(geometry.faceVertexUvs.length>0){geometryGroup.__uvArray=new Float32Array(nvertices*2)}if(geometry.faceVertexUvs.length>1){geometryGroup.__uv2Array=new Float32Array(nvertices*2)}}if(object.geometry.skinWeights.length&&object.geometry.skinIndices.length){geometryGroup.__skinIndexArray=new Float32Array(nvertices*4);geometryGroup.__skinWeightArray=new Float32Array(nvertices*4)}geometryGroup.__faceArray=new Uint16Array(ntris*3);geometryGroup.__lineArray=new Uint16Array(nlines*2);var m,ml;if(geometryGroup.numMorphTargets){geometryGroup.__morphTargetsArrays=[];for(m=0,ml=geometryGroup.numMorphTargets;m<ml;m++){geometryGroup.__morphTargetsArrays.push(new Float32Array(nvertices*3))}}if(geometryGroup.numMorphNormals){geometryGroup.__morphNormalsArrays=[];for(m=0,ml=geometryGroup.numMorphNormals;m<ml;m++){geometryGroup.__morphNormalsArrays.push(new Float32Array(nvertices*3))}}geometryGroup.__webglFaceCount=ntris*3;geometryGroup.__webglLineCount=nlines*2;if(material.attributes){if(geometryGroup.__webglCustomAttributesList===undefined){geometryGroup.__webglCustomAttributesList=[]}for(var a in material.attributes){var originalAttribute=material.attributes[a];var attribute={};for(var property in originalAttribute){attribute[property]=originalAttribute[property]}if(!attribute.__webglInitialized||attribute.createUniqueBuffers){attribute.__webglInitialized=true;var size=1;if(attribute.type==="v2")size=2;else if(attribute.type==="v3")size=3;else if(attribute.type==="v4")size=4;else if(attribute.type==="c")size=3;attribute.size=size;attribute.array=new Float32Array(nvertices*size);attribute.buffer=_gl.createBuffer();attribute.buffer.belongsToAttribute=a;originalAttribute.needsUpdate=true;attribute.__original=originalAttribute}geometryGroup.__webglCustomAttributesList.push(attribute)}}geometryGroup.__inittedArrays=true}function getBufferMaterial(object,geometryGroup){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[geometryGroup.materialIndex]:object.material}function materialNeedsSmoothNormals(material){return material&&material.shading!==undefined&&material.shading===THREE.SmoothShading}function bufferGuessNormalType(material){if(material instanceof THREE.MeshBasicMaterial&&!material.envMap||material instanceof THREE.MeshDepthMaterial){return false}if(materialNeedsSmoothNormals(material)){return THREE.SmoothShading}else{return THREE.FlatShading}}function bufferGuessVertexColorType(material){if(material.vertexColors){return material.vertexColors}return false}function bufferGuessUVType(material){if(material.map||material.lightMap||material.bumpMap||material.normalMap||material.specularMap||material instanceof THREE.ShaderMaterial){return true}return false}function initDirectBuffers(geometry){var a,attribute,type;for(a in geometry.attributes){if(a==="index"){type=_gl.ELEMENT_ARRAY_BUFFER}else{type=_gl.ARRAY_BUFFER}attribute=geometry.attributes[a];if(attribute.numItems===undefined){attribute.numItems=attribute.array.length}attribute.buffer=_gl.createBuffer();_gl.bindBuffer(type,attribute.buffer);_gl.bufferData(type,attribute.array,_gl.STATIC_DRAW)}}function setParticleBuffers(geometry,hint,object){var v,c,vertex,offset,index,color,vertices=geometry.vertices,vl=vertices.length,colors=geometry.colors,cl=colors.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,sortArray=geometry.__sortArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyElements=geometry.elementsNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,customAttributes=geometry.__webglCustomAttributesList,i,il,a,ca,cal,value,customAttribute;if(object.sortParticles){_projScreenMatrixPS.copy(_projScreenMatrix);_projScreenMatrixPS.multiply(object.matrixWorld);for(v=0;v<vl;v++){vertex=vertices[v];_vector3.copy(vertex);_vector3.applyProjection(_projScreenMatrixPS);sortArray[v]=[_vector3.z,v]}sortArray.sort(numericalSort);for(v=0;v<vl;v++){vertex=vertices[sortArray[v][1]];offset=v*3;vertexArray[offset]=vertex.x;vertexArray[offset+1]=vertex.y;vertexArray[offset+2]=vertex.z}for(c=0;c<cl;c++){offset=c*3;color=colors[sortArray[c][1]];colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(!(customAttribute.boundTo===undefined||customAttribute.boundTo==="vertices"))continue;offset=0;cal=customAttribute.value.length;if(customAttribute.size===1){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];customAttribute.array[ca]=customAttribute.value[index]}}else if(customAttribute.size===2){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;offset+=2}}else if(customAttribute.size===3){if(customAttribute.type==="c"){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.r;customAttribute.array[offset+1]=value.g;customAttribute.array[offset+2]=value.b;offset+=3}}else{for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;offset+=3}}}else if(customAttribute.size===4){for(ca=0;ca<cal;ca++){index=sortArray[ca][1];value=customAttribute.value[index];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;customAttribute.array[offset+3]=value.w;offset+=4}}}}}else{if(dirtyVertices){for(v=0;v<vl;v++){vertex=vertices[v];offset=v*3;vertexArray[offset]=vertex.x;vertexArray[offset+1]=vertex.y;vertexArray[offset+2]=vertex.z}}if(dirtyColors){for(c=0;c<cl;c++){color=colors[c];offset=c*3;colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b}}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(customAttribute.needsUpdate&&(customAttribute.boundTo===undefined||customAttribute.boundTo==="vertices")){cal=customAttribute.value.length;offset=0;if(customAttribute.size===1){for(ca=0;ca<cal;ca++){customAttribute.array[ca]=customAttribute.value[ca]}}else if(customAttribute.size===2){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;offset+=2}}else if(customAttribute.size===3){if(customAttribute.type==="c"){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.r;customAttribute.array[offset+1]=value.g;customAttribute.array[offset+2]=value.b;offset+=3}}else{for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;offset+=3}}}else if(customAttribute.size===4){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;customAttribute.array[offset+3]=value.w;offset+=4}}}}}}if(dirtyVertices||object.sortParticles){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyColors||object.sortParticles){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint)}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(customAttribute.needsUpdate||object.sortParticles){_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint)}}}}function setLineBuffers(geometry,hint){var v,c,d,vertex,offset,color,vertices=geometry.vertices,colors=geometry.colors,lineDistances=geometry.lineDistances,vl=vertices.length,cl=colors.length,dl=lineDistances.length,vertexArray=geometry.__vertexArray,colorArray=geometry.__colorArray,lineDistanceArray=geometry.__lineDistanceArray,dirtyVertices=geometry.verticesNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,dirtyLineDistances=geometry.lineDistancesNeedUpdate,customAttributes=geometry.__webglCustomAttributesList,i,il,a,ca,cal,value,customAttribute;if(dirtyVertices){for(v=0;v<vl;v++){vertex=vertices[v];offset=v*3;vertexArray[offset]=vertex.x;vertexArray[offset+1]=vertex.y;vertexArray[offset+2]=vertex.z}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyColors){for(c=0;c<cl;c++){color=colors[c];offset=c*3;colorArray[offset]=color.r;colorArray[offset+1]=color.g;colorArray[offset+2]=color.b}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint)}if(dirtyLineDistances){for(d=0;d<dl;d++){lineDistanceArray[d]=lineDistances[d]}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometry.__webglLineDistanceBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,lineDistanceArray,hint)}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(customAttribute.needsUpdate&&(customAttribute.boundTo===undefined||customAttribute.boundTo==="vertices")){offset=0;cal=customAttribute.value.length;if(customAttribute.size===1){for(ca=0;ca<cal;ca++){customAttribute.array[ca]=customAttribute.value[ca]}}else if(customAttribute.size===2){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;offset+=2}}else if(customAttribute.size===3){if(customAttribute.type==="c"){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.r;customAttribute.array[offset+1]=value.g;customAttribute.array[offset+2]=value.b;offset+=3}}else{for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;offset+=3}}}else if(customAttribute.size===4){for(ca=0;ca<cal;ca++){value=customAttribute.value[ca];customAttribute.array[offset]=value.x;customAttribute.array[offset+1]=value.y;customAttribute.array[offset+2]=value.z;customAttribute.array[offset+3]=value.w;offset+=4}}_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint)}}}}function setMeshBuffers(geometryGroup,object,hint,dispose,material){if(!geometryGroup.__inittedArrays){return}var normalType=bufferGuessNormalType(material),vertexColorType=bufferGuessVertexColorType(material),uvType=bufferGuessUVType(material),needsSmoothNormals=normalType===THREE.SmoothShading;var f,fl,fi,face,vertexNormals,faceNormal,normal,vertexColors,faceColor,vertexTangents,uv,uv2,v1,v2,v3,v4,t1,t2,t3,t4,n1,n2,n3,n4,c1,c2,c3,c4,sw1,sw2,sw3,sw4,si1,si2,si3,si4,sa1,sa2,sa3,sa4,sb1,sb2,sb3,sb4,m,ml,i,il,vn,uvi,uv2i,vk,vkl,vka,nka,chf,faceVertexNormals,a,vertexIndex=0,offset=0,offset_uv=0,offset_uv2=0,offset_face=0,offset_normal=0,offset_tangent=0,offset_line=0,offset_color=0,offset_skin=0,offset_morphTarget=0,offset_custom=0,offset_customSrc=0,value,vertexArray=geometryGroup.__vertexArray,uvArray=geometryGroup.__uvArray,uv2Array=geometryGroup.__uv2Array,normalArray=geometryGroup.__normalArray,tangentArray=geometryGroup.__tangentArray,colorArray=geometryGroup.__colorArray,skinIndexArray=geometryGroup.__skinIndexArray,skinWeightArray=geometryGroup.__skinWeightArray,morphTargetsArrays=geometryGroup.__morphTargetsArrays,morphNormalsArrays=geometryGroup.__morphNormalsArrays,customAttributes=geometryGroup.__webglCustomAttributesList,customAttribute,faceArray=geometryGroup.__faceArray,lineArray=geometryGroup.__lineArray,geometry=object.geometry,dirtyVertices=geometry.verticesNeedUpdate,dirtyElements=geometry.elementsNeedUpdate,dirtyUvs=geometry.uvsNeedUpdate,dirtyNormals=geometry.normalsNeedUpdate,dirtyTangents=geometry.tangentsNeedUpdate,dirtyColors=geometry.colorsNeedUpdate,dirtyMorphTargets=geometry.morphTargetsNeedUpdate,vertices=geometry.vertices,chunk_faces3=geometryGroup.faces3,obj_faces=geometry.faces,obj_uvs=geometry.faceVertexUvs[0],obj_uvs2=geometry.faceVertexUvs[1],obj_colors=geometry.colors,obj_skinIndices=geometry.skinIndices,obj_skinWeights=geometry.skinWeights,morphTargets=geometry.morphTargets,morphNormals=geometry.morphNormals;if(dirtyVertices){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=vertices[face.a];v2=vertices[face.b];v3=vertices[face.c];vertexArray[offset]=v1.x;vertexArray[offset+1]=v1.y;vertexArray[offset+2]=v1.z;vertexArray[offset+3]=v2.x;vertexArray[offset+4]=v2.y;vertexArray[offset+5]=v2.z;vertexArray[offset+6]=v3.x;vertexArray[offset+7]=v3.y;vertexArray[offset+8]=v3.z;offset+=9}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,vertexArray,hint)}if(dirtyMorphTargets){for(vk=0,vkl=morphTargets.length;vk<vkl;vk++){offset_morphTarget=0;for(f=0,fl=chunk_faces3.length;f<fl;f++){chf=chunk_faces3[f];face=obj_faces[chf];v1=morphTargets[vk].vertices[face.a];v2=morphTargets[vk].vertices[face.b];v3=morphTargets[vk].vertices[face.c];vka=morphTargetsArrays[vk];vka[offset_morphTarget]=v1.x;vka[offset_morphTarget+1]=v1.y;vka[offset_morphTarget+2]=v1.z;vka[offset_morphTarget+3]=v2.x;
vka[offset_morphTarget+4]=v2.y;vka[offset_morphTarget+5]=v2.z;vka[offset_morphTarget+6]=v3.x;vka[offset_morphTarget+7]=v3.y;vka[offset_morphTarget+8]=v3.z;if(material.morphNormals){if(needsSmoothNormals){faceVertexNormals=morphNormals[vk].vertexNormals[chf];n1=faceVertexNormals.a;n2=faceVertexNormals.b;n3=faceVertexNormals.c}else{n1=morphNormals[vk].faceNormals[chf];n2=n1;n3=n1}nka=morphNormalsArrays[vk];nka[offset_morphTarget]=n1.x;nka[offset_morphTarget+1]=n1.y;nka[offset_morphTarget+2]=n1.z;nka[offset_morphTarget+3]=n2.x;nka[offset_morphTarget+4]=n2.y;nka[offset_morphTarget+5]=n2.z;nka[offset_morphTarget+6]=n3.x;nka[offset_morphTarget+7]=n3.y;nka[offset_morphTarget+8]=n3.z}offset_morphTarget+=9}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[vk]);_gl.bufferData(_gl.ARRAY_BUFFER,morphTargetsArrays[vk],hint);if(material.morphNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[vk]);_gl.bufferData(_gl.ARRAY_BUFFER,morphNormalsArrays[vk],hint)}}}if(obj_skinWeights.length){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];sw1=obj_skinWeights[face.a];sw2=obj_skinWeights[face.b];sw3=obj_skinWeights[face.c];skinWeightArray[offset_skin]=sw1.x;skinWeightArray[offset_skin+1]=sw1.y;skinWeightArray[offset_skin+2]=sw1.z;skinWeightArray[offset_skin+3]=sw1.w;skinWeightArray[offset_skin+4]=sw2.x;skinWeightArray[offset_skin+5]=sw2.y;skinWeightArray[offset_skin+6]=sw2.z;skinWeightArray[offset_skin+7]=sw2.w;skinWeightArray[offset_skin+8]=sw3.x;skinWeightArray[offset_skin+9]=sw3.y;skinWeightArray[offset_skin+10]=sw3.z;skinWeightArray[offset_skin+11]=sw3.w;si1=obj_skinIndices[face.a];si2=obj_skinIndices[face.b];si3=obj_skinIndices[face.c];skinIndexArray[offset_skin]=si1.x;skinIndexArray[offset_skin+1]=si1.y;skinIndexArray[offset_skin+2]=si1.z;skinIndexArray[offset_skin+3]=si1.w;skinIndexArray[offset_skin+4]=si2.x;skinIndexArray[offset_skin+5]=si2.y;skinIndexArray[offset_skin+6]=si2.z;skinIndexArray[offset_skin+7]=si2.w;skinIndexArray[offset_skin+8]=si3.x;skinIndexArray[offset_skin+9]=si3.y;skinIndexArray[offset_skin+10]=si3.z;skinIndexArray[offset_skin+11]=si3.w;offset_skin+=12}if(offset_skin>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinIndicesBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,skinIndexArray,hint);_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinWeightsBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,skinWeightArray,hint)}}if(dirtyColors&&vertexColorType){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];vertexColors=face.vertexColors;faceColor=face.color;if(vertexColors.length===3&&vertexColorType===THREE.VertexColors){c1=vertexColors[0];c2=vertexColors[1];c3=vertexColors[2]}else{c1=faceColor;c2=faceColor;c3=faceColor}colorArray[offset_color]=c1.r;colorArray[offset_color+1]=c1.g;colorArray[offset_color+2]=c1.b;colorArray[offset_color+3]=c2.r;colorArray[offset_color+4]=c2.g;colorArray[offset_color+5]=c2.b;colorArray[offset_color+6]=c3.r;colorArray[offset_color+7]=c3.g;colorArray[offset_color+8]=c3.b;offset_color+=9}if(offset_color>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,colorArray,hint)}}if(dirtyTangents&&geometry.hasTangents){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];vertexTangents=face.vertexTangents;t1=vertexTangents[0];t2=vertexTangents[1];t3=vertexTangents[2];tangentArray[offset_tangent]=t1.x;tangentArray[offset_tangent+1]=t1.y;tangentArray[offset_tangent+2]=t1.z;tangentArray[offset_tangent+3]=t1.w;tangentArray[offset_tangent+4]=t2.x;tangentArray[offset_tangent+5]=t2.y;tangentArray[offset_tangent+6]=t2.z;tangentArray[offset_tangent+7]=t2.w;tangentArray[offset_tangent+8]=t3.x;tangentArray[offset_tangent+9]=t3.y;tangentArray[offset_tangent+10]=t3.z;tangentArray[offset_tangent+11]=t3.w;offset_tangent+=12}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglTangentBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,tangentArray,hint)}if(dirtyNormals&&normalType){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];vertexNormals=face.vertexNormals;faceNormal=face.normal;if(vertexNormals.length===3&&needsSmoothNormals){for(i=0;i<3;i++){vn=vertexNormals[i];normalArray[offset_normal]=vn.x;normalArray[offset_normal+1]=vn.y;normalArray[offset_normal+2]=vn.z;offset_normal+=3}}else{for(i=0;i<3;i++){normalArray[offset_normal]=faceNormal.x;normalArray[offset_normal+1]=faceNormal.y;normalArray[offset_normal+2]=faceNormal.z;offset_normal+=3}}}_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,normalArray,hint)}if(dirtyUvs&&obj_uvs&&uvType){for(f=0,fl=chunk_faces3.length;f<fl;f++){fi=chunk_faces3[f];uv=obj_uvs[fi];if(uv===undefined)continue;for(i=0;i<3;i++){uvi=uv[i];uvArray[offset_uv]=uvi.x;uvArray[offset_uv+1]=uvi.y;offset_uv+=2}}if(offset_uv>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUVBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,uvArray,hint)}}if(dirtyUvs&&obj_uvs2&&uvType){for(f=0,fl=chunk_faces3.length;f<fl;f++){fi=chunk_faces3[f];uv2=obj_uvs2[fi];if(uv2===undefined)continue;for(i=0;i<3;i++){uv2i=uv2[i];uv2Array[offset_uv2]=uv2i.x;uv2Array[offset_uv2+1]=uv2i.y;offset_uv2+=2}}if(offset_uv2>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUV2Buffer);_gl.bufferData(_gl.ARRAY_BUFFER,uv2Array,hint)}}if(dirtyElements){for(f=0,fl=chunk_faces3.length;f<fl;f++){faceArray[offset_face]=vertexIndex;faceArray[offset_face+1]=vertexIndex+1;faceArray[offset_face+2]=vertexIndex+2;offset_face+=3;lineArray[offset_line]=vertexIndex;lineArray[offset_line+1]=vertexIndex+1;lineArray[offset_line+2]=vertexIndex;lineArray[offset_line+3]=vertexIndex+2;lineArray[offset_line+4]=vertexIndex+1;lineArray[offset_line+5]=vertexIndex+2;offset_line+=6;vertexIndex+=3}_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,faceArray,hint);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,lineArray,hint)}if(customAttributes){for(i=0,il=customAttributes.length;i<il;i++){customAttribute=customAttributes[i];if(!customAttribute.__original.needsUpdate)continue;offset_custom=0;offset_customSrc=0;if(customAttribute.size===1){if(customAttribute.boundTo===undefined||customAttribute.boundTo==="vertices"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];customAttribute.array[offset_custom]=customAttribute.value[face.a];customAttribute.array[offset_custom+1]=customAttribute.value[face.b];customAttribute.array[offset_custom+2]=customAttribute.value[face.c];offset_custom+=3}}else if(customAttribute.boundTo==="faces"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];customAttribute.array[offset_custom]=value;customAttribute.array[offset_custom+1]=value;customAttribute.array[offset_custom+2]=value;offset_custom+=3}}}else if(customAttribute.size===2){if(customAttribute.boundTo===undefined||customAttribute.boundTo==="vertices"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=customAttribute.value[face.a];v2=customAttribute.value[face.b];v3=customAttribute.value[face.c];customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v2.x;customAttribute.array[offset_custom+3]=v2.y;customAttribute.array[offset_custom+4]=v3.x;customAttribute.array[offset_custom+5]=v3.y;offset_custom+=6}}else if(customAttribute.boundTo==="faces"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value;v2=value;v3=value;customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v2.x;customAttribute.array[offset_custom+3]=v2.y;customAttribute.array[offset_custom+4]=v3.x;customAttribute.array[offset_custom+5]=v3.y;offset_custom+=6}}}else if(customAttribute.size===3){var pp;if(customAttribute.type==="c"){pp=["r","g","b"]}else{pp=["x","y","z"]}if(customAttribute.boundTo===undefined||customAttribute.boundTo==="vertices"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=customAttribute.value[face.a];v2=customAttribute.value[face.b];v3=customAttribute.value[face.c];customAttribute.array[offset_custom]=v1[pp[0]];customAttribute.array[offset_custom+1]=v1[pp[1]];customAttribute.array[offset_custom+2]=v1[pp[2]];customAttribute.array[offset_custom+3]=v2[pp[0]];customAttribute.array[offset_custom+4]=v2[pp[1]];customAttribute.array[offset_custom+5]=v2[pp[2]];customAttribute.array[offset_custom+6]=v3[pp[0]];customAttribute.array[offset_custom+7]=v3[pp[1]];customAttribute.array[offset_custom+8]=v3[pp[2]];offset_custom+=9}}else if(customAttribute.boundTo==="faces"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value;v2=value;v3=value;customAttribute.array[offset_custom]=v1[pp[0]];customAttribute.array[offset_custom+1]=v1[pp[1]];customAttribute.array[offset_custom+2]=v1[pp[2]];customAttribute.array[offset_custom+3]=v2[pp[0]];customAttribute.array[offset_custom+4]=v2[pp[1]];customAttribute.array[offset_custom+5]=v2[pp[2]];customAttribute.array[offset_custom+6]=v3[pp[0]];customAttribute.array[offset_custom+7]=v3[pp[1]];customAttribute.array[offset_custom+8]=v3[pp[2]];offset_custom+=9}}else if(customAttribute.boundTo==="faceVertices"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value[0];v2=value[1];v3=value[2];customAttribute.array[offset_custom]=v1[pp[0]];customAttribute.array[offset_custom+1]=v1[pp[1]];customAttribute.array[offset_custom+2]=v1[pp[2]];customAttribute.array[offset_custom+3]=v2[pp[0]];customAttribute.array[offset_custom+4]=v2[pp[1]];customAttribute.array[offset_custom+5]=v2[pp[2]];customAttribute.array[offset_custom+6]=v3[pp[0]];customAttribute.array[offset_custom+7]=v3[pp[1]];customAttribute.array[offset_custom+8]=v3[pp[2]];offset_custom+=9}}}else if(customAttribute.size===4){if(customAttribute.boundTo===undefined||customAttribute.boundTo==="vertices"){for(f=0,fl=chunk_faces3.length;f<fl;f++){face=obj_faces[chunk_faces3[f]];v1=customAttribute.value[face.a];v2=customAttribute.value[face.b];v3=customAttribute.value[face.c];customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v1.z;customAttribute.array[offset_custom+3]=v1.w;customAttribute.array[offset_custom+4]=v2.x;customAttribute.array[offset_custom+5]=v2.y;customAttribute.array[offset_custom+6]=v2.z;customAttribute.array[offset_custom+7]=v2.w;customAttribute.array[offset_custom+8]=v3.x;customAttribute.array[offset_custom+9]=v3.y;customAttribute.array[offset_custom+10]=v3.z;customAttribute.array[offset_custom+11]=v3.w;offset_custom+=12}}else if(customAttribute.boundTo==="faces"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value;v2=value;v3=value;customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v1.z;customAttribute.array[offset_custom+3]=v1.w;customAttribute.array[offset_custom+4]=v2.x;customAttribute.array[offset_custom+5]=v2.y;customAttribute.array[offset_custom+6]=v2.z;customAttribute.array[offset_custom+7]=v2.w;customAttribute.array[offset_custom+8]=v3.x;customAttribute.array[offset_custom+9]=v3.y;customAttribute.array[offset_custom+10]=v3.z;customAttribute.array[offset_custom+11]=v3.w;offset_custom+=12}}else if(customAttribute.boundTo==="faceVertices"){for(f=0,fl=chunk_faces3.length;f<fl;f++){value=customAttribute.value[chunk_faces3[f]];v1=value[0];v2=value[1];v3=value[2];customAttribute.array[offset_custom]=v1.x;customAttribute.array[offset_custom+1]=v1.y;customAttribute.array[offset_custom+2]=v1.z;customAttribute.array[offset_custom+3]=v1.w;customAttribute.array[offset_custom+4]=v2.x;customAttribute.array[offset_custom+5]=v2.y;customAttribute.array[offset_custom+6]=v2.z;customAttribute.array[offset_custom+7]=v2.w;customAttribute.array[offset_custom+8]=v3.x;customAttribute.array[offset_custom+9]=v3.y;customAttribute.array[offset_custom+10]=v3.z;customAttribute.array[offset_custom+11]=v3.w;offset_custom+=12}}}_gl.bindBuffer(_gl.ARRAY_BUFFER,customAttribute.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,customAttribute.array,hint)}}if(dispose){delete geometryGroup.__inittedArrays;delete geometryGroup.__colorArray;delete geometryGroup.__normalArray;delete geometryGroup.__tangentArray;delete geometryGroup.__uvArray;delete geometryGroup.__uv2Array;delete geometryGroup.__faceArray;delete geometryGroup.__vertexArray;delete geometryGroup.__lineArray;delete geometryGroup.__skinIndexArray;delete geometryGroup.__skinWeightArray}}function setDirectBuffers(geometry,hint,dispose){var attributes=geometry.attributes;var attributeName,attributeItem;for(attributeName in attributes){attributeItem=attributes[attributeName];if(attributeItem.needsUpdate){if(attributeName==="index"){_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,attributeItem.buffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,attributeItem.array,hint)}else{_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);_gl.bufferData(_gl.ARRAY_BUFFER,attributeItem.array,hint)}attributeItem.needsUpdate=false}if(dispose&&!attributeItem.dynamic){attributeItem.array=null}}}this.renderBufferImmediate=function(object,program,material){if(object.hasPositions&&!object.__webglVertexBuffer)object.__webglVertexBuffer=_gl.createBuffer();if(object.hasNormals&&!object.__webglNormalBuffer)object.__webglNormalBuffer=_gl.createBuffer();if(object.hasUvs&&!object.__webglUvBuffer)object.__webglUvBuffer=_gl.createBuffer();if(object.hasColors&&!object.__webglColorBuffer)object.__webglColorBuffer=_gl.createBuffer();if(object.hasPositions){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglVertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,object.positionArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.position);_gl.vertexAttribPointer(program.attributes.position,3,_gl.FLOAT,false,0,0)}if(object.hasNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglNormalBuffer);if(material.shading===THREE.FlatShading){var nx,ny,nz,nax,nbx,ncx,nay,nby,ncy,naz,nbz,ncz,normalArray,i,il=object.count*3;for(i=0;i<il;i+=9){normalArray=object.normalArray;nax=normalArray[i];nay=normalArray[i+1];naz=normalArray[i+2];nbx=normalArray[i+3];nby=normalArray[i+4];nbz=normalArray[i+5];ncx=normalArray[i+6];ncy=normalArray[i+7];ncz=normalArray[i+8];nx=(nax+nbx+ncx)/3;ny=(nay+nby+ncy)/3;nz=(naz+nbz+ncz)/3;normalArray[i]=nx;normalArray[i+1]=ny;normalArray[i+2]=nz;normalArray[i+3]=nx;normalArray[i+4]=ny;normalArray[i+5]=nz;normalArray[i+6]=nx;normalArray[i+7]=ny;normalArray[i+8]=nz}}_gl.bufferData(_gl.ARRAY_BUFFER,object.normalArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.normal);_gl.vertexAttribPointer(program.attributes.normal,3,_gl.FLOAT,false,0,0)}if(object.hasUvs&&material.map){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglUvBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,object.uvArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.uv);_gl.vertexAttribPointer(program.attributes.uv,2,_gl.FLOAT,false,0,0)}if(object.hasColors&&material.vertexColors!==THREE.NoColors){_gl.bindBuffer(_gl.ARRAY_BUFFER,object.__webglColorBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,object.colorArray,_gl.DYNAMIC_DRAW);_gl.enableVertexAttribArray(program.attributes.color);_gl.vertexAttribPointer(program.attributes.color,3,_gl.FLOAT,false,0,0)}_gl.drawArrays(_gl.TRIANGLES,0,object.count);object.count=0};this.renderBufferDirect=function(camera,lights,fog,material,geometry,object){if(material.visible===false)return;var linewidth,a,attribute;var attributeItem,attributeName,attributePointer,attributeSize;var program=setProgram(camera,lights,fog,material,object);var programAttributes=program.attributes;var geometryAttributes=geometry.attributes;var updateBuffers=false,wireframeBit=material.wireframe?1:0,geometryHash=geometry.id*16777215+program.id*2+wireframeBit;if(geometryHash!==_currentGeometryGroupHash){_currentGeometryGroupHash=geometryHash;updateBuffers=true}if(updateBuffers){disableAttributes()}if(object instanceof THREE.Mesh){var index=geometryAttributes["index"];if(index){var offsets=geometry.offsets;if(offsets.length>1)updateBuffers=true;for(var i=0,il=offsets.length;i<il;i++){var startIndex=offsets[i].index;if(updateBuffers){for(attributeName in programAttributes){attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,startIndex*attributeSize*4)}else if(material.defaultAttributeValues){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName])}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName])}}}}_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,index.buffer)}_gl.drawElements(_gl.TRIANGLES,offsets[i].count,_gl.UNSIGNED_SHORT,offsets[i].start*2);_this.info.render.calls++;_this.info.render.vertices+=offsets[i].count;_this.info.render.faces+=offsets[i].count/3}}else{if(updateBuffers){for(attributeName in programAttributes){if(attributeName==="index")continue;attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,0)}else if(material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName])}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName])}}}}}var position=geometry.attributes["position"];_gl.drawArrays(_gl.TRIANGLES,0,position.numItems/3);_this.info.render.calls++;_this.info.render.vertices+=position.numItems/3;_this.info.render.faces+=position.numItems/3/3}}else if(object instanceof THREE.ParticleSystem){if(updateBuffers){for(attributeName in programAttributes){attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,0)}else if(material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName])}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName])}}}}var position=geometryAttributes["position"];_gl.drawArrays(_gl.POINTS,0,position.numItems/3);_this.info.render.calls++;_this.info.render.points+=position.numItems/3}}else if(object instanceof THREE.Line){if(updateBuffers){for(attributeName in programAttributes){attributePointer=programAttributes[attributeName];attributeItem=geometryAttributes[attributeName];if(attributePointer>=0){if(attributeItem){attributeSize=attributeItem.itemSize;_gl.bindBuffer(_gl.ARRAY_BUFFER,attributeItem.buffer);enableAttribute(attributePointer);_gl.vertexAttribPointer(attributePointer,attributeSize,_gl.FLOAT,false,0,0)}else if(material.defaultAttributeValues&&material.defaultAttributeValues[attributeName]){if(material.defaultAttributeValues[attributeName].length===2){_gl.vertexAttrib2fv(attributePointer,material.defaultAttributeValues[attributeName])}else if(material.defaultAttributeValues[attributeName].length===3){_gl.vertexAttrib3fv(attributePointer,material.defaultAttributeValues[attributeName])}}}}var primitives=object.type===THREE.LineStrip?_gl.LINE_STRIP:_gl.LINES;setLineWidth(material.linewidth);var position=geometryAttributes["position"];_gl.drawArrays(primitives,0,position.numItems/3);_this.info.render.calls++;_this.info.render.points+=position.numItems}}};this.renderBuffer=function(camera,lights,fog,material,geometryGroup,object){if(material.visible===false)return;var linewidth,a,attribute,i,il;var program=setProgram(camera,lights,fog,material,object);var attributes=program.attributes;var updateBuffers=false,wireframeBit=material.wireframe?1:0,geometryGroupHash=geometryGroup.id*16777215+program.id*2+wireframeBit;if(geometryGroupHash!==_currentGeometryGroupHash){_currentGeometryGroupHash=geometryGroupHash;updateBuffers=true}if(updateBuffers){disableAttributes()}if(!material.morphTargets&&attributes.position>=0){if(updateBuffers){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);enableAttribute(attributes.position);_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,false,0,0)}}else{if(object.morphTargetBase){setupMorphTargets(material,geometryGroup,object)}}if(updateBuffers){if(geometryGroup.__webglCustomAttributesList){for(i=0,il=geometryGroup.__webglCustomAttributesList.length;i<il;i++){attribute=geometryGroup.__webglCustomAttributesList[i];if(attributes[attribute.buffer.belongsToAttribute]>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,attribute.buffer);enableAttribute(attributes[attribute.buffer.belongsToAttribute]);_gl.vertexAttribPointer(attributes[attribute.buffer.belongsToAttribute],attribute.size,_gl.FLOAT,false,0,0)}}}if(attributes.color>=0){if(object.geometry.colors.length>0||object.geometry.faces.length>0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglColorBuffer);enableAttribute(attributes.color);_gl.vertexAttribPointer(attributes.color,3,_gl.FLOAT,false,0,0)}else if(material.defaultAttributeValues){_gl.vertexAttrib3fv(attributes.color,material.defaultAttributeValues.color)}}if(attributes.normal>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglNormalBuffer);enableAttribute(attributes.normal);_gl.vertexAttribPointer(attributes.normal,3,_gl.FLOAT,false,0,0)}if(attributes.tangent>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglTangentBuffer);enableAttribute(attributes.tangent);_gl.vertexAttribPointer(attributes.tangent,4,_gl.FLOAT,false,0,0)}if(attributes.uv>=0){if(object.geometry.faceVertexUvs[0]){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUVBuffer);enableAttribute(attributes.uv);_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,false,0,0)}else if(material.defaultAttributeValues){_gl.vertexAttrib2fv(attributes.uv,material.defaultAttributeValues.uv)}}if(attributes.uv2>=0){if(object.geometry.faceVertexUvs[1]){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglUV2Buffer);enableAttribute(attributes.uv2);_gl.vertexAttribPointer(attributes.uv2,2,_gl.FLOAT,false,0,0)}else if(material.defaultAttributeValues){_gl.vertexAttrib2fv(attributes.uv2,material.defaultAttributeValues.uv2)}}if(material.skinning&&attributes.skinIndex>=0&&attributes.skinWeight>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinIndicesBuffer);enableAttribute(attributes.skinIndex);_gl.vertexAttribPointer(attributes.skinIndex,4,_gl.FLOAT,false,0,0);_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglSkinWeightsBuffer);enableAttribute(attributes.skinWeight);_gl.vertexAttribPointer(attributes.skinWeight,4,_gl.FLOAT,false,0,0)}if(attributes.lineDistance>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglLineDistanceBuffer);enableAttribute(attributes.lineDistance);_gl.vertexAttribPointer(attributes.lineDistance,1,_gl.FLOAT,false,0,0)}}if(object instanceof THREE.Mesh){if(material.wireframe){setLineWidth(material.wireframeLinewidth);if(updateBuffers)_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglLineBuffer);_gl.drawElements(_gl.LINES,geometryGroup.__webglLineCount,_gl.UNSIGNED_SHORT,0)}else{if(updateBuffers)_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,geometryGroup.__webglFaceBuffer);_gl.drawElements(_gl.TRIANGLES,geometryGroup.__webglFaceCount,_gl.UNSIGNED_SHORT,0)}_this.info.render.calls++;_this.info.render.vertices+=geometryGroup.__webglFaceCount;_this.info.render.faces+=geometryGroup.__webglFaceCount/3}else if(object instanceof THREE.Line){var primitives=object.type===THREE.LineStrip?_gl.LINE_STRIP:_gl.LINES;setLineWidth(material.linewidth);_gl.drawArrays(primitives,0,geometryGroup.__webglLineCount);_this.info.render.calls++}else if(object instanceof THREE.ParticleSystem){_gl.drawArrays(_gl.POINTS,0,geometryGroup.__webglParticleCount);_this.info.render.calls++;_this.info.render.points+=geometryGroup.__webglParticleCount}};function enableAttribute(attribute){if(!_enabledAttributes[attribute]){_gl.enableVertexAttribArray(attribute);_enabledAttributes[attribute]=true}}function disableAttributes(){for(var attribute in _enabledAttributes){if(_enabledAttributes[attribute]){_gl.disableVertexAttribArray(attribute);_enabledAttributes[attribute]=false}}}function setupMorphTargets(material,geometryGroup,object){var attributes=material.program.attributes;if(object.morphTargetBase!==-1&&attributes.position>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[object.morphTargetBase]);enableAttribute(attributes.position);_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,false,0,0)}else if(attributes.position>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglVertexBuffer);enableAttribute(attributes.position);_gl.vertexAttribPointer(attributes.position,3,_gl.FLOAT,false,0,0)}if(object.morphTargetForcedOrder.length){var m=0;var order=object.morphTargetForcedOrder;var influences=object.morphTargetInfluences;while(m<material.numSupportedMorphTargets&&m<order.length){if(attributes["morphTarget"+m]>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[order[m]]);enableAttribute(attributes["morphTarget"+m]);_gl.vertexAttribPointer(attributes["morphTarget"+m],3,_gl.FLOAT,false,0,0)}if(attributes["morphNormal"+m]>=0&&material.morphNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[order[m]]);enableAttribute(attributes["morphNormal"+m]);_gl.vertexAttribPointer(attributes["morphNormal"+m],3,_gl.FLOAT,false,0,0)}object.__webglMorphTargetInfluences[m]=influences[order[m]];m++}}else{var influence,activeInfluenceIndices=[];var influences=object.morphTargetInfluences;var i,il=influences.length;for(i=0;i<il;i++){influence=influences[i];if(influence>0){activeInfluenceIndices.push([influence,i])}}if(activeInfluenceIndices.length>material.numSupportedMorphTargets){activeInfluenceIndices.sort(numericalSort);activeInfluenceIndices.length=material.numSupportedMorphTargets}else if(activeInfluenceIndices.length>material.numSupportedMorphNormals){activeInfluenceIndices.sort(numericalSort)}else if(activeInfluenceIndices.length===0){activeInfluenceIndices.push([0,0])}var influenceIndex,m=0;while(m<material.numSupportedMorphTargets){if(activeInfluenceIndices[m]){influenceIndex=activeInfluenceIndices[m][1];if(attributes["morphTarget"+m]>=0){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphTargetsBuffers[influenceIndex]);enableAttribute(attributes["morphTarget"+m]);_gl.vertexAttribPointer(attributes["morphTarget"+m],3,_gl.FLOAT,false,0,0)}if(attributes["morphNormal"+m]>=0&&material.morphNormals){_gl.bindBuffer(_gl.ARRAY_BUFFER,geometryGroup.__webglMorphNormalsBuffers[influenceIndex]);enableAttribute(attributes["morphNormal"+m]);_gl.vertexAttribPointer(attributes["morphNormal"+m],3,_gl.FLOAT,false,0,0)}object.__webglMorphTargetInfluences[m]=influences[influenceIndex]}else{object.__webglMorphTargetInfluences[m]=0}m++}}if(material.program.uniforms.morphTargetInfluences!==null){_gl.uniform1fv(material.program.uniforms.morphTargetInfluences,object.__webglMorphTargetInfluences)}}function painterSortStable(a,b){if(a.z!==b.z){return b.z-a.z}else{return a.id-b.id}}function numericalSort(a,b){return b[0]-a[0]}this.render=function(scene,camera,renderTarget,forceClear){if(camera instanceof THREE.Camera===false){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var i,il,webglObject,object,renderList,lights=scene.__lights,fog=scene.fog;_currentMaterialId=-1;_lightsNeedUpdate=true;if(scene.autoUpdate===true)scene.updateMatrixWorld();if(camera.parent===undefined)camera.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);if(this.autoUpdateObjects)this.initWebGLObjects(scene);renderPlugins(this.renderPluginsPre,scene,camera);_this.info.render.calls=0;_this.info.render.vertices=0;_this.info.render.faces=0;_this.info.render.points=0;this.setRenderTarget(renderTarget);if(this.autoClear||forceClear){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil)}renderList=scene.__webglObjects;for(i=0,il=renderList.length;i<il;i++){webglObject=renderList[i];object=webglObject.object;webglObject.id=i;webglObject.render=false;if(object.visible){if(!(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)||!object.frustumCulled||_frustum.intersectsObject(object)){setupMatrices(object,camera);unrollBufferMaterial(webglObject);webglObject.render=true;if(this.sortObjects===true){if(object.renderDepth!==null){webglObject.z=object.renderDepth}else{_vector3.getPositionFromMatrix(object.matrixWorld);_vector3.applyProjection(_projScreenMatrix);webglObject.z=_vector3.z}}}}}if(this.sortObjects){renderList.sort(painterSortStable)}renderList=scene.__webglObjectsImmediate;for(i=0,il=renderList.length;i<il;i++){webglObject=renderList[i];object=webglObject.object;if(object.visible){setupMatrices(object,camera);unrollImmediateBufferMaterial(webglObject)}}if(scene.overrideMaterial){var material=scene.overrideMaterial;this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);this.setDepthTest(material.depthTest);this.setDepthWrite(material.depthWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);renderObjects(scene.__webglObjects,false,"",camera,lights,fog,true,material);renderObjectsImmediate(scene.__webglObjectsImmediate,"",camera,lights,fog,false,material)}else{var material=null;this.setBlending(THREE.NoBlending);renderObjects(scene.__webglObjects,true,"opaque",camera,lights,fog,false,material);renderObjectsImmediate(scene.__webglObjectsImmediate,"opaque",camera,lights,fog,false,material);renderObjects(scene.__webglObjects,false,"transparent",camera,lights,fog,true,material);renderObjectsImmediate(scene.__webglObjectsImmediate,"transparent",camera,lights,fog,true,material)}renderPlugins(this.renderPluginsPost,scene,camera);if(renderTarget&&renderTarget.generateMipmaps&&renderTarget.minFilter!==THREE.NearestFilter&&renderTarget.minFilter!==THREE.LinearFilter){updateRenderTargetMipmap(renderTarget)}this.setDepthTest(true);this.setDepthWrite(true)};function renderPlugins(plugins,scene,camera){if(!plugins.length)return;for(var i=0,il=plugins.length;i<il;i++){_currentProgram=null;_currentCamera=null;_oldBlending=-1;_oldDepthTest=-1;_oldDepthWrite=-1;_oldDoubleSided=-1;_oldFlipSided=-1;_currentGeometryGroupHash=-1;_currentMaterialId=-1;_lightsNeedUpdate=true;plugins[i].render(scene,camera,_currentWidth,_currentHeight);_currentProgram=null;_currentCamera=null;_oldBlending=-1;_oldDepthTest=-1;_oldDepthWrite=-1;_oldDoubleSided=-1;_oldFlipSided=-1;_currentGeometryGroupHash=-1;_currentMaterialId=-1;_lightsNeedUpdate=true}}function renderObjects(renderList,reverse,materialType,camera,lights,fog,useBlending,overrideMaterial){
var webglObject,object,buffer,material,start,end,delta;if(reverse){start=renderList.length-1;end=-1;delta=-1}else{start=0;end=renderList.length;delta=1}for(var i=start;i!==end;i+=delta){webglObject=renderList[i];if(webglObject.render){object=webglObject.object;buffer=webglObject.buffer;if(overrideMaterial){material=overrideMaterial}else{material=webglObject[materialType];if(!material)continue;if(useBlending)_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);_this.setDepthTest(material.depthTest);_this.setDepthWrite(material.depthWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)}_this.setMaterialFaces(material);if(buffer instanceof THREE.BufferGeometry){_this.renderBufferDirect(camera,lights,fog,material,buffer,object)}else{_this.renderBuffer(camera,lights,fog,material,buffer,object)}}}}function renderObjectsImmediate(renderList,materialType,camera,lights,fog,useBlending,overrideMaterial){var webglObject,object,material,program;for(var i=0,il=renderList.length;i<il;i++){webglObject=renderList[i];object=webglObject.object;if(object.visible){if(overrideMaterial){material=overrideMaterial}else{material=webglObject[materialType];if(!material)continue;if(useBlending)_this.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);_this.setDepthTest(material.depthTest);_this.setDepthWrite(material.depthWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits)}_this.renderImmediateObject(camera,lights,fog,material,object)}}}this.renderImmediateObject=function(camera,lights,fog,material,object){var program=setProgram(camera,lights,fog,material,object);_currentGeometryGroupHash=-1;_this.setMaterialFaces(material);if(object.immediateRenderCallback){object.immediateRenderCallback(program,_gl,_frustum)}else{object.render(function(object){_this.renderBufferImmediate(object,program,material)})}};function unrollImmediateBufferMaterial(globject){var object=globject.object,material=object.material;if(material.transparent){globject.transparent=material;globject.opaque=null}else{globject.opaque=material;globject.transparent=null}}function unrollBufferMaterial(globject){var object=globject.object,buffer=globject.buffer,material,materialIndex,meshMaterial;meshMaterial=object.material;if(meshMaterial instanceof THREE.MeshFaceMaterial){materialIndex=buffer.materialIndex;material=meshMaterial.materials[materialIndex];if(material.transparent){globject.transparent=material;globject.opaque=null}else{globject.opaque=material;globject.transparent=null}}else{material=meshMaterial;if(material){if(material.transparent){globject.transparent=material;globject.opaque=null}else{globject.opaque=material;globject.transparent=null}}}}function sortFacesByMaterial(geometry,material){var f,fl,face,materialIndex,vertices,groupHash,hash_map={};var numMorphTargets=geometry.morphTargets.length;var numMorphNormals=geometry.morphNormals.length;var usesFaceMaterial=material instanceof THREE.MeshFaceMaterial;geometry.geometryGroups={};for(f=0,fl=geometry.faces.length;f<fl;f++){face=geometry.faces[f];materialIndex=usesFaceMaterial?face.materialIndex:0;if(hash_map[materialIndex]===undefined){hash_map[materialIndex]={hash:materialIndex,counter:0}}groupHash=hash_map[materialIndex].hash+"_"+hash_map[materialIndex].counter;if(geometry.geometryGroups[groupHash]===undefined){geometry.geometryGroups[groupHash]={faces3:[],materialIndex:materialIndex,vertices:0,numMorphTargets:numMorphTargets,numMorphNormals:numMorphNormals}}vertices=3;if(geometry.geometryGroups[groupHash].vertices+vertices>65535){hash_map[materialIndex].counter+=1;groupHash=hash_map[materialIndex].hash+"_"+hash_map[materialIndex].counter;if(geometry.geometryGroups[groupHash]===undefined){geometry.geometryGroups[groupHash]={faces3:[],materialIndex:materialIndex,vertices:0,numMorphTargets:numMorphTargets,numMorphNormals:numMorphNormals}}}geometry.geometryGroups[groupHash].faces3.push(f);geometry.geometryGroups[groupHash].vertices+=vertices}geometry.geometryGroupsList=[];for(var g in geometry.geometryGroups){geometry.geometryGroups[g].id=_geometryGroupCounter++;geometry.geometryGroupsList.push(geometry.geometryGroups[g])}}this.initWebGLObjects=function(scene){if(!scene.__webglObjects){scene.__webglObjects=[];scene.__webglObjectsImmediate=[];scene.__webglSprites=[];scene.__webglFlares=[]}while(scene.__objectsAdded.length){addObject(scene.__objectsAdded[0],scene);scene.__objectsAdded.splice(0,1)}while(scene.__objectsRemoved.length){removeObject(scene.__objectsRemoved[0],scene);scene.__objectsRemoved.splice(0,1)}for(var o=0,ol=scene.__webglObjects.length;o<ol;o++){var object=scene.__webglObjects[o].object;if(object.__webglInit===undefined){if(object.__webglActive!==undefined){removeObject(object,scene)}addObject(object,scene)}updateObject(object)}};function addObject(object,scene){var g,geometry,material,geometryGroup;if(object.__webglInit===undefined){object.__webglInit=true;object._modelViewMatrix=new THREE.Matrix4;object._normalMatrix=new THREE.Matrix3;if(object.geometry!==undefined&&object.geometry.__webglInit===undefined){object.geometry.__webglInit=true;object.geometry.addEventListener("dispose",onGeometryDispose)}geometry=object.geometry;if(geometry===undefined){}else if(geometry instanceof THREE.BufferGeometry){initDirectBuffers(geometry)}else if(object instanceof THREE.Mesh){material=object.material;if(geometry.geometryGroups===undefined){sortFacesByMaterial(geometry,material)}for(g in geometry.geometryGroups){geometryGroup=geometry.geometryGroups[g];if(!geometryGroup.__webglVertexBuffer){createMeshBuffers(geometryGroup);initMeshBuffers(geometryGroup,object);geometry.verticesNeedUpdate=true;geometry.morphTargetsNeedUpdate=true;geometry.elementsNeedUpdate=true;geometry.uvsNeedUpdate=true;geometry.normalsNeedUpdate=true;geometry.tangentsNeedUpdate=true;geometry.colorsNeedUpdate=true}}}else if(object instanceof THREE.Line){if(!geometry.__webglVertexBuffer){createLineBuffers(geometry);initLineBuffers(geometry,object);geometry.verticesNeedUpdate=true;geometry.colorsNeedUpdate=true;geometry.lineDistancesNeedUpdate=true}}else if(object instanceof THREE.ParticleSystem){if(!geometry.__webglVertexBuffer){createParticleBuffers(geometry);initParticleBuffers(geometry,object);geometry.verticesNeedUpdate=true;geometry.colorsNeedUpdate=true}}}if(object.__webglActive===undefined){if(object instanceof THREE.Mesh){geometry=object.geometry;if(geometry instanceof THREE.BufferGeometry){addBuffer(scene.__webglObjects,geometry,object)}else if(geometry instanceof THREE.Geometry){for(g in geometry.geometryGroups){geometryGroup=geometry.geometryGroups[g];addBuffer(scene.__webglObjects,geometryGroup,object)}}}else if(object instanceof THREE.Line||object instanceof THREE.ParticleSystem){geometry=object.geometry;addBuffer(scene.__webglObjects,geometry,object)}else if(object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback){addBufferImmediate(scene.__webglObjectsImmediate,object)}else if(object instanceof THREE.Sprite){scene.__webglSprites.push(object)}else if(object instanceof THREE.LensFlare){scene.__webglFlares.push(object)}object.__webglActive=true}}function addBuffer(objlist,buffer,object){objlist.push({id:null,buffer:buffer,object:object,opaque:null,transparent:null,z:0})}function addBufferImmediate(objlist,object){objlist.push({id:null,object:object,opaque:null,transparent:null,z:0})}function updateObject(object){var geometry=object.geometry,geometryGroup,customAttributesDirty,material;if(geometry instanceof THREE.BufferGeometry){setDirectBuffers(geometry,_gl.DYNAMIC_DRAW,!geometry.dynamic)}else if(object instanceof THREE.Mesh){for(var i=0,il=geometry.geometryGroupsList.length;i<il;i++){geometryGroup=geometry.geometryGroupsList[i];material=getBufferMaterial(object,geometryGroup);if(geometry.buffersNeedUpdate){initMeshBuffers(geometryGroup,object)}customAttributesDirty=material.attributes&&areCustomAttributesDirty(material);if(geometry.verticesNeedUpdate||geometry.morphTargetsNeedUpdate||geometry.elementsNeedUpdate||geometry.uvsNeedUpdate||geometry.normalsNeedUpdate||geometry.colorsNeedUpdate||geometry.tangentsNeedUpdate||customAttributesDirty){setMeshBuffers(geometryGroup,object,_gl.DYNAMIC_DRAW,!geometry.dynamic,material)}}geometry.verticesNeedUpdate=false;geometry.morphTargetsNeedUpdate=false;geometry.elementsNeedUpdate=false;geometry.uvsNeedUpdate=false;geometry.normalsNeedUpdate=false;geometry.colorsNeedUpdate=false;geometry.tangentsNeedUpdate=false;geometry.buffersNeedUpdate=false;material.attributes&&clearCustomAttributes(material)}else if(object instanceof THREE.Line){material=getBufferMaterial(object,geometry);customAttributesDirty=material.attributes&&areCustomAttributesDirty(material);if(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||geometry.lineDistancesNeedUpdate||customAttributesDirty){setLineBuffers(geometry,_gl.DYNAMIC_DRAW)}geometry.verticesNeedUpdate=false;geometry.colorsNeedUpdate=false;geometry.lineDistancesNeedUpdate=false;material.attributes&&clearCustomAttributes(material)}else if(object instanceof THREE.ParticleSystem){material=getBufferMaterial(object,geometry);customAttributesDirty=material.attributes&&areCustomAttributesDirty(material);if(geometry.verticesNeedUpdate||geometry.colorsNeedUpdate||object.sortParticles||customAttributesDirty){setParticleBuffers(geometry,_gl.DYNAMIC_DRAW,object)}geometry.verticesNeedUpdate=false;geometry.colorsNeedUpdate=false;material.attributes&&clearCustomAttributes(material)}}function areCustomAttributesDirty(material){for(var a in material.attributes){if(material.attributes[a].needsUpdate)return true}return false}function clearCustomAttributes(material){for(var a in material.attributes){material.attributes[a].needsUpdate=false}}function removeObject(object,scene){if(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem||object instanceof THREE.Line){removeInstances(scene.__webglObjects,object)}else if(object instanceof THREE.Sprite){removeInstancesDirect(scene.__webglSprites,object)}else if(object instanceof THREE.LensFlare){removeInstancesDirect(scene.__webglFlares,object)}else if(object instanceof THREE.ImmediateRenderObject||object.immediateRenderCallback){removeInstances(scene.__webglObjectsImmediate,object)}delete object.__webglActive}function removeInstances(objlist,object){for(var o=objlist.length-1;o>=0;o--){if(objlist[o].object===object){objlist.splice(o,1)}}}function removeInstancesDirect(objlist,object){for(var o=objlist.length-1;o>=0;o--){if(objlist[o]===object){objlist.splice(o,1)}}}this.initMaterial=function(material,lights,fog,object){material.addEventListener("dispose",onMaterialDispose);var u,a,identifiers,i,parameters,maxLightCount,maxBones,maxShadows,shaderID;if(material instanceof THREE.MeshDepthMaterial){shaderID="depth"}else if(material instanceof THREE.MeshNormalMaterial){shaderID="normal"}else if(material instanceof THREE.MeshBasicMaterial){shaderID="basic"}else if(material instanceof THREE.MeshLambertMaterial){shaderID="lambert"}else if(material instanceof THREE.MeshPhongMaterial){shaderID="phong"}else if(material instanceof THREE.LineBasicMaterial){shaderID="basic"}else if(material instanceof THREE.LineDashedMaterial){shaderID="dashed"}else if(material instanceof THREE.ParticleBasicMaterial){shaderID="particle_basic"}if(shaderID){setMaterialShaders(material,THREE.ShaderLib[shaderID])}maxLightCount=allocateLights(lights);maxShadows=allocateShadows(lights);maxBones=allocateBones(object);parameters={map:!!material.map,envMap:!!material.envMap,lightMap:!!material.lightMap,bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,specularMap:!!material.specularMap,vertexColors:material.vertexColors,fog:fog,useFog:material.fog,fogExp:fog instanceof THREE.FogExp2,sizeAttenuation:material.sizeAttenuation,skinning:material.skinning,maxBones:maxBones,useVertexTexture:_supportsBoneTextures&&object&&object.useVertexTexture,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:maxLightCount.directional,maxPointLights:maxLightCount.point,maxSpotLights:maxLightCount.spot,maxHemiLights:maxLightCount.hemi,maxShadows:maxShadows,shadowMapEnabled:this.shadowMapEnabled&&object.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:material.alphaTest,metal:material.metal,perPixel:material.perPixel,wrapAround:material.wrapAround,doubleSided:material.side===THREE.DoubleSide,flipSided:material.side===THREE.BackSide};material.program=buildProgram(shaderID,material.fragmentShader,material.vertexShader,material.uniforms,material.attributes,material.defines,parameters,material.index0AttributeName);var attributes=material.program.attributes;if(material.morphTargets){material.numSupportedMorphTargets=0;var id,base="morphTarget";for(i=0;i<this.maxMorphTargets;i++){id=base+i;if(attributes[id]>=0){material.numSupportedMorphTargets++}}}if(material.morphNormals){material.numSupportedMorphNormals=0;var id,base="morphNormal";for(i=0;i<this.maxMorphNormals;i++){id=base+i;if(attributes[id]>=0){material.numSupportedMorphNormals++}}}material.uniformsList=[];for(u in material.uniforms){material.uniformsList.push([material.uniforms[u],u])}};function setMaterialShaders(material,shaders){material.uniforms=THREE.UniformsUtils.clone(shaders.uniforms);material.vertexShader=shaders.vertexShader;material.fragmentShader=shaders.fragmentShader}function setProgram(camera,lights,fog,material,object){_usedTextureUnits=0;if(material.needsUpdate){if(material.program)deallocateMaterial(material);_this.initMaterial(material,lights,fog,object);material.needsUpdate=false}if(material.morphTargets){if(!object.__webglMorphTargetInfluences){object.__webglMorphTargetInfluences=new Float32Array(_this.maxMorphTargets)}}var refreshMaterial=false;var program=material.program,p_uniforms=program.uniforms,m_uniforms=material.uniforms;if(program!==_currentProgram){_gl.useProgram(program);_currentProgram=program;refreshMaterial=true}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true}if(refreshMaterial||camera!==_currentCamera){_gl.uniformMatrix4fv(p_uniforms.projectionMatrix,false,camera.projectionMatrix.elements);if(camera!==_currentCamera)_currentCamera=camera}if(material.skinning){if(_supportsBoneTextures&&object.useVertexTexture){if(p_uniforms.boneTexture!==null){var textureUnit=getTextureUnit();_gl.uniform1i(p_uniforms.boneTexture,textureUnit);_this.setTexture(object.boneTexture,textureUnit)}if(p_uniforms.boneTextureWidth!==null){_gl.uniform1i(p_uniforms.boneTextureWidth,object.boneTextureWidth)}if(p_uniforms.boneTextureHeight!==null){_gl.uniform1i(p_uniforms.boneTextureHeight,object.boneTextureHeight)}}else{if(p_uniforms.boneGlobalMatrices!==null){_gl.uniformMatrix4fv(p_uniforms.boneGlobalMatrices,false,object.boneMatrices)}}}if(refreshMaterial){if(fog&&material.fog){refreshUniformsFog(m_uniforms,fog)}if(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material.lights){if(_lightsNeedUpdate){setupLights(program,lights);_lightsNeedUpdate=false}refreshUniformsLights(m_uniforms,_lights)}if(material instanceof THREE.MeshBasicMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.MeshPhongMaterial){refreshUniformsCommon(m_uniforms,material)}if(material instanceof THREE.LineBasicMaterial){refreshUniformsLine(m_uniforms,material)}else if(material instanceof THREE.LineDashedMaterial){refreshUniformsLine(m_uniforms,material);refreshUniformsDash(m_uniforms,material)}else if(material instanceof THREE.ParticleBasicMaterial){refreshUniformsParticle(m_uniforms,material)}else if(material instanceof THREE.MeshPhongMaterial){refreshUniformsPhong(m_uniforms,material)}else if(material instanceof THREE.MeshLambertMaterial){refreshUniformsLambert(m_uniforms,material)}else if(material instanceof THREE.MeshDepthMaterial){m_uniforms.mNear.value=camera.near;m_uniforms.mFar.value=camera.far;m_uniforms.opacity.value=material.opacity}else if(material instanceof THREE.MeshNormalMaterial){m_uniforms.opacity.value=material.opacity}if(object.receiveShadow&&!material._shadowPass){refreshUniformsShadow(m_uniforms,lights)}loadUniformsGeneric(program,material.uniformsList);if(material instanceof THREE.ShaderMaterial||material instanceof THREE.MeshPhongMaterial||material.envMap){if(p_uniforms.cameraPosition!==null){_vector3.getPositionFromMatrix(camera.matrixWorld);_gl.uniform3f(p_uniforms.cameraPosition,_vector3.x,_vector3.y,_vector3.z)}}if(material instanceof THREE.MeshPhongMaterial||material instanceof THREE.MeshLambertMaterial||material instanceof THREE.ShaderMaterial||material.skinning){if(p_uniforms.viewMatrix!==null){_gl.uniformMatrix4fv(p_uniforms.viewMatrix,false,camera.matrixWorldInverse.elements)}}}loadUniformsMatrices(p_uniforms,object);if(p_uniforms.modelMatrix!==null){_gl.uniformMatrix4fv(p_uniforms.modelMatrix,false,object.matrixWorld.elements)}return program}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;if(_this.gammaInput){uniforms.diffuse.value.copyGammaToLinear(material.color)}else{uniforms.diffuse.value=material.color}uniforms.map.value=material.map;uniforms.lightMap.value=material.lightMap;uniforms.specularMap.value=material.specularMap;if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale)}var uvScaleMap;if(material.map){uvScaleMap=material.map}else if(material.specularMap){uvScaleMap=material.specularMap}else if(material.normalMap){uvScaleMap=material.normalMap}else if(material.bumpMap){uvScaleMap=material.bumpMap}if(uvScaleMap!==undefined){var offset=uvScaleMap.offset;var repeat=uvScaleMap.repeat;uniforms.offsetRepeat.value.set(offset.x,offset.y,repeat.x,repeat.y)}uniforms.envMap.value=material.envMap;uniforms.flipEnvMap.value=material.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;if(_this.gammaInput){uniforms.reflectivity.value=material.reflectivity}else{uniforms.reflectivity.value=material.reflectivity}uniforms.refractionRatio.value=material.refractionRatio;uniforms.combine.value=material.combine;uniforms.useRefract.value=material.envMap&&material.envMap.mapping instanceof THREE.CubeRefractionMapping}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value=material.color;uniforms.opacity.value=material.opacity}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale}function refreshUniformsParticle(uniforms,material){uniforms.psColor.value=material.color;uniforms.opacity.value=material.opacity;uniforms.size.value=material.size;uniforms.scale.value=_canvas.height/2;uniforms.map.value=material.map}function refreshUniformsFog(uniforms,fog){uniforms.fogColor.value=fog.color;if(fog instanceof THREE.Fog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far}else if(fog instanceof THREE.FogExp2){uniforms.fogDensity.value=fog.density}}function refreshUniformsPhong(uniforms,material){uniforms.shininess.value=material.shininess;if(_this.gammaInput){uniforms.ambient.value.copyGammaToLinear(material.ambient);uniforms.emissive.value.copyGammaToLinear(material.emissive);uniforms.specular.value.copyGammaToLinear(material.specular)}else{uniforms.ambient.value=material.ambient;uniforms.emissive.value=material.emissive;uniforms.specular.value=material.specular}if(material.wrapAround){uniforms.wrapRGB.value.copy(material.wrapRGB)}}function refreshUniformsLambert(uniforms,material){if(_this.gammaInput){uniforms.ambient.value.copyGammaToLinear(material.ambient);uniforms.emissive.value.copyGammaToLinear(material.emissive)}else{uniforms.ambient.value=material.ambient;uniforms.emissive.value=material.emissive}if(material.wrapAround){uniforms.wrapRGB.value.copy(material.wrapRGB)}}function refreshUniformsLights(uniforms,lights){uniforms.ambientLightColor.value=lights.ambient;uniforms.directionalLightColor.value=lights.directional.colors;uniforms.directionalLightDirection.value=lights.directional.positions;uniforms.pointLightColor.value=lights.point.colors;uniforms.pointLightPosition.value=lights.point.positions;uniforms.pointLightDistance.value=lights.point.distances;uniforms.spotLightColor.value=lights.spot.colors;uniforms.spotLightPosition.value=lights.spot.positions;uniforms.spotLightDistance.value=lights.spot.distances;uniforms.spotLightDirection.value=lights.spot.directions;uniforms.spotLightAngleCos.value=lights.spot.anglesCos;uniforms.spotLightExponent.value=lights.spot.exponents;uniforms.hemisphereLightSkyColor.value=lights.hemi.skyColors;uniforms.hemisphereLightGroundColor.value=lights.hemi.groundColors;uniforms.hemisphereLightDirection.value=lights.hemi.positions}function refreshUniformsShadow(uniforms,lights){if(uniforms.shadowMatrix){var j=0;for(var i=0,il=lights.length;i<il;i++){var light=lights[i];if(!light.castShadow)continue;if(light instanceof THREE.SpotLight||light instanceof THREE.DirectionalLight&&!light.shadowCascade){uniforms.shadowMap.value[j]=light.shadowMap;uniforms.shadowMapSize.value[j]=light.shadowMapSize;uniforms.shadowMatrix.value[j]=light.shadowMatrix;uniforms.shadowDarkness.value[j]=light.shadowDarkness;uniforms.shadowBias.value[j]=light.shadowBias;j++}}}}function loadUniformsMatrices(uniforms,object){_gl.uniformMatrix4fv(uniforms.modelViewMatrix,false,object._modelViewMatrix.elements);if(uniforms.normalMatrix){_gl.uniformMatrix3fv(uniforms.normalMatrix,false,object._normalMatrix.elements)}}function getTextureUnit(){var textureUnit=_usedTextureUnits;if(textureUnit>=_maxTextures){console.warn("WebGLRenderer: trying to use "+textureUnit+" texture units while this GPU supports only "+_maxTextures)}_usedTextureUnits+=1;return textureUnit}function loadUniformsGeneric(program,uniforms){var uniform,value,type,location,texture,textureUnit,i,il,j,jl,offset;for(j=0,jl=uniforms.length;j<jl;j++){location=program.uniforms[uniforms[j][1]];if(!location)continue;uniform=uniforms[j][0];type=uniform.type;value=uniform.value;if(type==="i"){_gl.uniform1i(location,value)}else if(type==="f"){_gl.uniform1f(location,value)}else if(type==="v2"){_gl.uniform2f(location,value.x,value.y)}else if(type==="v3"){_gl.uniform3f(location,value.x,value.y,value.z)}else if(type==="v4"){_gl.uniform4f(location,value.x,value.y,value.z,value.w)}else if(type==="c"){_gl.uniform3f(location,value.r,value.g,value.b)}else if(type==="iv1"){_gl.uniform1iv(location,value)}else if(type==="iv"){_gl.uniform3iv(location,value)}else if(type==="fv1"){_gl.uniform1fv(location,value)}else if(type==="fv"){_gl.uniform3fv(location,value)}else if(type==="v2v"){if(uniform._array===undefined){uniform._array=new Float32Array(2*value.length)}for(i=0,il=value.length;i<il;i++){offset=i*2;uniform._array[offset]=value[i].x;uniform._array[offset+1]=value[i].y}_gl.uniform2fv(location,uniform._array)}else if(type==="v3v"){if(uniform._array===undefined){uniform._array=new Float32Array(3*value.length)}for(i=0,il=value.length;i<il;i++){offset=i*3;uniform._array[offset]=value[i].x;uniform._array[offset+1]=value[i].y;uniform._array[offset+2]=value[i].z}_gl.uniform3fv(location,uniform._array)}else if(type==="v4v"){if(uniform._array===undefined){uniform._array=new Float32Array(4*value.length)}for(i=0,il=value.length;i<il;i++){offset=i*4;uniform._array[offset]=value[i].x;uniform._array[offset+1]=value[i].y;uniform._array[offset+2]=value[i].z;uniform._array[offset+3]=value[i].w}_gl.uniform4fv(location,uniform._array)}else if(type==="m4"){if(uniform._array===undefined){uniform._array=new Float32Array(16)}value.flattenToArray(uniform._array);_gl.uniformMatrix4fv(location,false,uniform._array)}else if(type==="m4v"){if(uniform._array===undefined){uniform._array=new Float32Array(16*value.length)}for(i=0,il=value.length;i<il;i++){value[i].flattenToArrayOffset(uniform._array,i*16)}_gl.uniformMatrix4fv(location,false,uniform._array)}else if(type==="t"){texture=value;textureUnit=getTextureUnit();_gl.uniform1i(location,textureUnit);if(!texture)continue;if(texture.image instanceof Array&&texture.image.length===6){setCubeTexture(texture,textureUnit)}else if(texture instanceof THREE.WebGLRenderTargetCube){setCubeTextureDynamic(texture,textureUnit)}else{_this.setTexture(texture,textureUnit)}}else if(type==="tv"){if(uniform._array===undefined){uniform._array=[]}for(i=0,il=uniform.value.length;i<il;i++){uniform._array[i]=getTextureUnit()}_gl.uniform1iv(location,uniform._array);for(i=0,il=uniform.value.length;i<il;i++){texture=uniform.value[i];textureUnit=uniform._array[i];if(!texture)continue;_this.setTexture(texture,textureUnit)}}else{console.warn("THREE.WebGLRenderer: Unknown uniform type: "+type)}}}function setupMatrices(object,camera){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object._normalMatrix.getNormalMatrix(object._modelViewMatrix)}function setColorGamma(array,offset,color,intensitySq){array[offset]=color.r*color.r*intensitySq;array[offset+1]=color.g*color.g*intensitySq;array[offset+2]=color.b*color.b*intensitySq}function setColorLinear(array,offset,color,intensity){array[offset]=color.r*intensity;array[offset+1]=color.g*intensity;array[offset+2]=color.b*intensity}function setupLights(program,lights){var l,ll,light,n,r=0,g=0,b=0,color,skyColor,groundColor,intensity,intensitySq,position,distance,zlights=_lights,dirColors=zlights.directional.colors,dirPositions=zlights.directional.positions,pointColors=zlights.point.colors,pointPositions=zlights.point.positions,pointDistances=zlights.point.distances,spotColors=zlights.spot.colors,spotPositions=zlights.spot.positions,spotDistances=zlights.spot.distances,spotDirections=zlights.spot.directions,spotAnglesCos=zlights.spot.anglesCos,spotExponents=zlights.spot.exponents,hemiSkyColors=zlights.hemi.skyColors,hemiGroundColors=zlights.hemi.groundColors,hemiPositions=zlights.hemi.positions,dirLength=0,pointLength=0,spotLength=0,hemiLength=0,dirCount=0,pointCount=0,spotCount=0,hemiCount=0,dirOffset=0,pointOffset=0,spotOffset=0,hemiOffset=0;for(l=0,ll=lights.length;l<ll;l++){light=lights[l];if(light.onlyShadow)continue;color=light.color;intensity=light.intensity;distance=light.distance;if(light instanceof THREE.AmbientLight){if(!light.visible)continue;if(_this.gammaInput){r+=color.r*color.r;g+=color.g*color.g;b+=color.b*color.b}else{r+=color.r;g+=color.g;b+=color.b}}else if(light instanceof THREE.DirectionalLight){dirCount+=1;if(!light.visible)continue;_direction.getPositionFromMatrix(light.matrixWorld);_vector3.getPositionFromMatrix(light.target.matrixWorld);_direction.sub(_vector3);_direction.normalize();if(_direction.x===0&&_direction.y===0&&_direction.z===0)continue;dirOffset=dirLength*3;dirPositions[dirOffset]=_direction.x;dirPositions[dirOffset+1]=_direction.y;dirPositions[dirOffset+2]=_direction.z;if(_this.gammaInput){setColorGamma(dirColors,dirOffset,color,intensity*intensity)}else{setColorLinear(dirColors,dirOffset,color,intensity)}dirLength+=1}else if(light instanceof THREE.PointLight){pointCount+=1;if(!light.visible)continue;pointOffset=pointLength*3;if(_this.gammaInput){setColorGamma(pointColors,pointOffset,color,intensity*intensity)}else{setColorLinear(pointColors,pointOffset,color,intensity)}_vector3.getPositionFromMatrix(light.matrixWorld);pointPositions[pointOffset]=_vector3.x;pointPositions[pointOffset+1]=_vector3.y;pointPositions[pointOffset+2]=_vector3.z;pointDistances[pointLength]=distance;pointLength+=1}else if(light instanceof THREE.SpotLight){spotCount+=1;if(!light.visible)continue;spotOffset=spotLength*3;if(_this.gammaInput){setColorGamma(spotColors,spotOffset,color,intensity*intensity)}else{setColorLinear(spotColors,spotOffset,color,intensity)}_vector3.getPositionFromMatrix(light.matrixWorld);spotPositions[spotOffset]=_vector3.x;spotPositions[spotOffset+1]=_vector3.y;spotPositions[spotOffset+2]=_vector3.z;spotDistances[spotLength]=distance;_direction.copy(_vector3);_vector3.getPositionFromMatrix(light.target.matrixWorld);_direction.sub(_vector3);_direction.normalize();spotDirections[spotOffset]=_direction.x;spotDirections[spotOffset+1]=_direction.y;spotDirections[spotOffset+2]=_direction.z;spotAnglesCos[spotLength]=Math.cos(light.angle);spotExponents[spotLength]=light.exponent;spotLength+=1}else if(light instanceof THREE.HemisphereLight){hemiCount+=1;if(!light.visible)continue;_direction.getPositionFromMatrix(light.matrixWorld);_direction.normalize();if(_direction.x===0&&_direction.y===0&&_direction.z===0)continue;hemiOffset=hemiLength*3;hemiPositions[hemiOffset]=_direction.x;hemiPositions[hemiOffset+1]=_direction.y;hemiPositions[hemiOffset+2]=_direction.z;skyColor=light.color;groundColor=light.groundColor;if(_this.gammaInput){intensitySq=intensity*intensity;setColorGamma(hemiSkyColors,hemiOffset,skyColor,intensitySq);setColorGamma(hemiGroundColors,hemiOffset,groundColor,intensitySq)}else{setColorLinear(hemiSkyColors,hemiOffset,skyColor,intensity);setColorLinear(hemiGroundColors,hemiOffset,groundColor,intensity)}hemiLength+=1}}for(l=dirLength*3,ll=Math.max(dirColors.length,dirCount*3);l<ll;l++)dirColors[l]=0;for(l=pointLength*3,ll=Math.max(pointColors.length,pointCount*3);l<ll;l++)pointColors[l]=0;for(l=spotLength*3,ll=Math.max(spotColors.length,spotCount*3);l<ll;l++)spotColors[l]=0;for(l=hemiLength*3,ll=Math.max(hemiSkyColors.length,hemiCount*3);l<ll;l++)hemiSkyColors[l]=0;for(l=hemiLength*3,ll=Math.max(hemiGroundColors.length,hemiCount*3);l<ll;l++)hemiGroundColors[l]=0;zlights.directional.length=dirLength;zlights.point.length=pointLength;zlights.spot.length=spotLength;zlights.hemi.length=hemiLength;zlights.ambient[0]=r;zlights.ambient[1]=g;zlights.ambient[2]=b}this.setFaceCulling=function(cullFace,frontFaceDirection){if(cullFace===THREE.CullFaceNone){_gl.disable(_gl.CULL_FACE)}else{if(frontFaceDirection===THREE.FrontFaceDirectionCW){_gl.frontFace(_gl.CW)}else{_gl.frontFace(_gl.CCW)}if(cullFace===THREE.CullFaceBack){_gl.cullFace(_gl.BACK)}else if(cullFace===THREE.CullFaceFront){_gl.cullFace(_gl.FRONT)}else{_gl.cullFace(_gl.FRONT_AND_BACK)}_gl.enable(_gl.CULL_FACE)}};this.setMaterialFaces=function(material){var doubleSided=material.side===THREE.DoubleSide;var flipSided=material.side===THREE.BackSide;if(_oldDoubleSided!==doubleSided){if(doubleSided){_gl.disable(_gl.CULL_FACE)}else{_gl.enable(_gl.CULL_FACE)}_oldDoubleSided=doubleSided}if(_oldFlipSided!==flipSided){if(flipSided){_gl.frontFace(_gl.CW)}else{_gl.frontFace(_gl.CCW)}_oldFlipSided=flipSided}};this.setDepthTest=function(depthTest){if(_oldDepthTest!==depthTest){if(depthTest){_gl.enable(_gl.DEPTH_TEST)}else{_gl.disable(_gl.DEPTH_TEST)}_oldDepthTest=depthTest}};this.setDepthWrite=function(depthWrite){if(_oldDepthWrite!==depthWrite){_gl.depthMask(depthWrite);_oldDepthWrite=depthWrite}};function setLineWidth(width){if(width!==_oldLineWidth){_gl.lineWidth(width);_oldLineWidth=width}}function setPolygonOffset(polygonoffset,factor,units){if(_oldPolygonOffset!==polygonoffset){if(polygonoffset){_gl.enable(_gl.POLYGON_OFFSET_FILL)}else{_gl.disable(_gl.POLYGON_OFFSET_FILL)}_oldPolygonOffset=polygonoffset}if(polygonoffset&&(_oldPolygonOffsetFactor!==factor||_oldPolygonOffsetUnits!==units)){_gl.polygonOffset(factor,units);_oldPolygonOffsetFactor=factor;_oldPolygonOffsetUnits=units}}this.setBlending=function(blending,blendEquation,blendSrc,blendDst){if(blending!==_oldBlending){if(blending===THREE.NoBlending){_gl.disable(_gl.BLEND)}else if(blending===THREE.AdditiveBlending){_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE)}else if(blending===THREE.SubtractiveBlending){_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.ZERO,_gl.ONE_MINUS_SRC_COLOR);
}else if(blending===THREE.MultiplyBlending){_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.ZERO,_gl.SRC_COLOR)}else if(blending===THREE.CustomBlending){_gl.enable(_gl.BLEND)}else{_gl.enable(_gl.BLEND);_gl.blendEquationSeparate(_gl.FUNC_ADD,_gl.FUNC_ADD);_gl.blendFuncSeparate(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA,_gl.ONE,_gl.ONE_MINUS_SRC_ALPHA)}_oldBlending=blending}if(blending===THREE.CustomBlending){if(blendEquation!==_oldBlendEquation){_gl.blendEquation(paramThreeToGL(blendEquation));_oldBlendEquation=blendEquation}if(blendSrc!==_oldBlendSrc||blendDst!==_oldBlendDst){_gl.blendFunc(paramThreeToGL(blendSrc),paramThreeToGL(blendDst));_oldBlendSrc=blendSrc;_oldBlendDst=blendDst}}else{_oldBlendEquation=null;_oldBlendSrc=null;_oldBlendDst=null}};function generateDefines(defines){var value,chunk,chunks=[];for(var d in defines){value=defines[d];if(value===false)continue;chunk="#define "+d+" "+value;chunks.push(chunk)}return chunks.join("\n")}function buildProgram(shaderID,fragmentShader,vertexShader,uniforms,attributes,defines,parameters,index0AttributeName){var p,pl,d,program,code;var chunks=[];if(shaderID){chunks.push(shaderID)}else{chunks.push(fragmentShader);chunks.push(vertexShader)}for(d in defines){chunks.push(d);chunks.push(defines[d])}for(p in parameters){chunks.push(p);chunks.push(parameters[p])}code=chunks.join();for(p=0,pl=_programs.length;p<pl;p++){var programInfo=_programs[p];if(programInfo.code===code){programInfo.usedTimes++;return programInfo.program}}var shadowMapTypeDefine="SHADOWMAP_TYPE_BASIC";if(parameters.shadowMapType===THREE.PCFShadowMap){shadowMapTypeDefine="SHADOWMAP_TYPE_PCF"}else if(parameters.shadowMapType===THREE.PCFSoftShadowMap){shadowMapTypeDefine="SHADOWMAP_TYPE_PCF_SOFT"}var customDefines=generateDefines(defines);program=_gl.createProgram();var prefix_vertex=["precision "+_precision+" float;","precision "+_precision+" int;",customDefines,_supportsVertexTextures?"#define VERTEX_TEXTURES":"",_this.gammaInput?"#define GAMMA_INPUT":"",_this.gammaOutput?"#define GAMMA_OUTPUT":"",_this.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+parameters.maxDirLights,"#define MAX_POINT_LIGHTS "+parameters.maxPointLights,"#define MAX_SPOT_LIGHTS "+parameters.maxSpotLights,"#define MAX_HEMI_LIGHTS "+parameters.maxHemiLights,"#define MAX_SHADOWS "+parameters.maxShadows,"#define MAX_BONES "+parameters.maxBones,parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.skinning?"#define USE_SKINNING":"",parameters.useVertexTexture?"#define BONE_TEXTURE":"",parameters.morphTargets?"#define USE_MORPHTARGETS":"",parameters.morphNormals?"#define USE_MORPHNORMALS":"",parameters.perPixel?"#define PHONG_PER_PIXEL":"",parameters.wrapAround?"#define WRAP_AROUND":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",parameters.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",parameters.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n");var prefix_fragment=["precision "+_precision+" float;","precision "+_precision+" int;",parameters.bumpMap||parameters.normalMap?"#extension GL_OES_standard_derivatives : enable":"",customDefines,"#define MAX_DIR_LIGHTS "+parameters.maxDirLights,"#define MAX_POINT_LIGHTS "+parameters.maxPointLights,"#define MAX_SPOT_LIGHTS "+parameters.maxSpotLights,"#define MAX_HEMI_LIGHTS "+parameters.maxHemiLights,"#define MAX_SHADOWS "+parameters.maxShadows,parameters.alphaTest?"#define ALPHATEST "+parameters.alphaTest:"",_this.gammaInput?"#define GAMMA_INPUT":"",_this.gammaOutput?"#define GAMMA_OUTPUT":"",_this.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",parameters.useFog&&parameters.fog?"#define USE_FOG":"",parameters.useFog&&parameters.fogExp?"#define FOG_EXP2":"",parameters.map?"#define USE_MAP":"",parameters.envMap?"#define USE_ENVMAP":"",parameters.lightMap?"#define USE_LIGHTMAP":"",parameters.bumpMap?"#define USE_BUMPMAP":"",parameters.normalMap?"#define USE_NORMALMAP":"",parameters.specularMap?"#define USE_SPECULARMAP":"",parameters.vertexColors?"#define USE_COLOR":"",parameters.metal?"#define METAL":"",parameters.perPixel?"#define PHONG_PER_PIXEL":"",parameters.wrapAround?"#define WRAP_AROUND":"",parameters.doubleSided?"#define DOUBLE_SIDED":"",parameters.flipSided?"#define FLIP_SIDED":"",parameters.shadowMapEnabled?"#define USE_SHADOWMAP":"",parameters.shadowMapEnabled?"#define "+shadowMapTypeDefine:"",parameters.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",parameters.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n");var glVertexShader=getShader("vertex",prefix_vertex+vertexShader);var glFragmentShader=getShader("fragment",prefix_fragment+fragmentShader);_gl.attachShader(program,glVertexShader);_gl.attachShader(program,glFragmentShader);if(index0AttributeName){_gl.bindAttribLocation(program,0,index0AttributeName)}_gl.linkProgram(program);if(!_gl.getProgramParameter(program,_gl.LINK_STATUS)){console.error("Could not initialise shader\n"+"VALIDATE_STATUS: "+_gl.getProgramParameter(program,_gl.VALIDATE_STATUS)+", gl error ["+_gl.getError()+"]");console.error("Program Info Log: "+_gl.getProgramInfoLog(program))}_gl.deleteShader(glFragmentShader);_gl.deleteShader(glVertexShader);program.uniforms={};program.attributes={};var identifiers,u,a,i;identifiers=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"];if(parameters.useVertexTexture){identifiers.push("boneTexture");identifiers.push("boneTextureWidth");identifiers.push("boneTextureHeight")}else{identifiers.push("boneGlobalMatrices")}for(u in uniforms){identifiers.push(u)}cacheUniformLocations(program,identifiers);identifiers=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(i=0;i<parameters.maxMorphTargets;i++){identifiers.push("morphTarget"+i)}for(i=0;i<parameters.maxMorphNormals;i++){identifiers.push("morphNormal"+i)}for(a in attributes){identifiers.push(a)}cacheAttributeLocations(program,identifiers);program.id=_programs_counter++;_programs.push({program:program,code:code,usedTimes:1});_this.info.memory.programs=_programs.length;return program}function cacheUniformLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;i<l;i++){id=identifiers[i];program.uniforms[id]=_gl.getUniformLocation(program,id)}}function cacheAttributeLocations(program,identifiers){var i,l,id;for(i=0,l=identifiers.length;i<l;i++){id=identifiers[i];program.attributes[id]=_gl.getAttribLocation(program,id)}}function addLineNumbers(string){var chunks=string.split("\n");for(var i=0,il=chunks.length;i<il;i++){chunks[i]=i+1+": "+chunks[i]}return chunks.join("\n")}function getShader(type,string){var shader;if(type==="fragment"){shader=_gl.createShader(_gl.FRAGMENT_SHADER)}else if(type==="vertex"){shader=_gl.createShader(_gl.VERTEX_SHADER)}_gl.shaderSource(shader,string);_gl.compileShader(shader);if(!_gl.getShaderParameter(shader,_gl.COMPILE_STATUS)){console.error(_gl.getShaderInfoLog(shader));console.error(addLineNumbers(string));return null}return shader}function isPowerOfTwo(value){return(value&value-1)===0}function setTextureParameters(textureType,texture,isImagePowerOfTwo){if(isImagePowerOfTwo){_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,paramThreeToGL(texture.wrapS));_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,paramThreeToGL(texture.wrapT));_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,paramThreeToGL(texture.magFilter));_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,paramThreeToGL(texture.minFilter))}else{_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE);_gl.texParameteri(textureType,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE);_gl.texParameteri(textureType,_gl.TEXTURE_MAG_FILTER,filterFallback(texture.magFilter));_gl.texParameteri(textureType,_gl.TEXTURE_MIN_FILTER,filterFallback(texture.minFilter))}if(_glExtensionTextureFilterAnisotropic&&texture.type!==THREE.FloatType){if(texture.anisotropy>1||texture.__oldAnisotropy){_gl.texParameterf(textureType,_glExtensionTextureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,_maxAnisotropy));texture.__oldAnisotropy=texture.anisotropy}}}this.setTexture=function(texture,slot){if(texture.needsUpdate){if(!texture.__webglInit){texture.__webglInit=true;texture.addEventListener("dispose",onTextureDispose);texture.__webglTexture=_gl.createTexture();_this.info.memory.textures++}_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture);_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha);_gl.pixelStorei(_gl.UNPACK_ALIGNMENT,texture.unpackAlignment);var image=texture.image,isImagePowerOfTwo=isPowerOfTwo(image.width)&&isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);setTextureParameters(_gl.TEXTURE_2D,texture,isImagePowerOfTwo);var mipmap,mipmaps=texture.mipmaps;if(texture instanceof THREE.DataTexture){if(mipmaps.length>0&&isImagePowerOfTwo){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data)}texture.generateMipmaps=false}else{_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,image.width,image.height,0,glFormat,glType,image.data)}}else if(texture instanceof THREE.CompressedTexture){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==THREE.RGBAFormat){_gl.compressedTexImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,mipmap.data)}else{_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data)}}}else{if(mipmaps.length>0&&isImagePowerOfTwo){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];_gl.texImage2D(_gl.TEXTURE_2D,i,glFormat,glFormat,glType,mipmap)}texture.generateMipmaps=false}else{_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,glFormat,glType,texture.image)}}if(texture.generateMipmaps&&isImagePowerOfTwo)_gl.generateMipmap(_gl.TEXTURE_2D);texture.needsUpdate=false;if(texture.onUpdate)texture.onUpdate()}else{_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_2D,texture.__webglTexture)}};function clampToMaxSize(image,maxSize){if(image.width<=maxSize&&image.height<=maxSize){return image}var maxDimension=Math.max(image.width,image.height);var newWidth=Math.floor(image.width*maxSize/maxDimension);var newHeight=Math.floor(image.height*maxSize/maxDimension);var canvas=document.createElement("canvas");canvas.width=newWidth;canvas.height=newHeight;var ctx=canvas.getContext("2d");ctx.drawImage(image,0,0,image.width,image.height,0,0,newWidth,newHeight);return canvas}function setCubeTexture(texture,slot){if(texture.image.length===6){if(texture.needsUpdate){if(!texture.image.__webglTextureCube){texture.addEventListener("dispose",onTextureDispose);texture.image.__webglTextureCube=_gl.createTexture();_this.info.memory.textures++}_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube);_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);var isCompressed=texture instanceof THREE.CompressedTexture;var cubeImage=[];for(var i=0;i<6;i++){if(_this.autoScaleCubemaps&&!isCompressed){cubeImage[i]=clampToMaxSize(texture.image[i],_maxCubemapSize)}else{cubeImage[i]=texture.image[i]}}var image=cubeImage[0],isImagePowerOfTwo=isPowerOfTwo(image.width)&&isPowerOfTwo(image.height),glFormat=paramThreeToGL(texture.format),glType=paramThreeToGL(texture.type);setTextureParameters(_gl.TEXTURE_CUBE_MAP,texture,isImagePowerOfTwo);for(var i=0;i<6;i++){if(!isCompressed){_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,glFormat,glType,cubeImage[i])}else{var mipmap,mipmaps=cubeImage[i].mipmaps;for(var j=0,jl=mipmaps.length;j<jl;j++){mipmap=mipmaps[j];if(texture.format!==THREE.RGBAFormat){_gl.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glFormat,mipmap.width,mipmap.height,0,mipmap.data)}else{_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,j,glFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data)}}}}if(texture.generateMipmaps&&isImagePowerOfTwo){_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP)}texture.needsUpdate=false;if(texture.onUpdate)texture.onUpdate()}else{_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.image.__webglTextureCube)}}}function setCubeTextureDynamic(texture,slot){_gl.activeTexture(_gl.TEXTURE0+slot);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,texture.__webglTexture)}function setupFrameBuffer(framebuffer,renderTarget,textureTarget){_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);_gl.framebufferTexture2D(_gl.FRAMEBUFFER,_gl.COLOR_ATTACHMENT0,textureTarget,renderTarget.__webglTexture,0)}function setupRenderBuffer(renderbuffer,renderTarget){_gl.bindRenderbuffer(_gl.RENDERBUFFER,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_COMPONENT16,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.DEPTH_STENCIL,renderTarget.width,renderTarget.height);_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderbuffer)}else{_gl.renderbufferStorage(_gl.RENDERBUFFER,_gl.RGBA4,renderTarget.width,renderTarget.height)}}this.setRenderTarget=function(renderTarget){var isCube=renderTarget instanceof THREE.WebGLRenderTargetCube;if(renderTarget&&!renderTarget.__webglFramebuffer){if(renderTarget.depthBuffer===undefined)renderTarget.depthBuffer=true;if(renderTarget.stencilBuffer===undefined)renderTarget.stencilBuffer=true;renderTarget.addEventListener("dispose",onRenderTargetDispose);renderTarget.__webglTexture=_gl.createTexture();_this.info.memory.textures++;var isTargetPowerOfTwo=isPowerOfTwo(renderTarget.width)&&isPowerOfTwo(renderTarget.height),glFormat=paramThreeToGL(renderTarget.format),glType=paramThreeToGL(renderTarget.type);if(isCube){renderTarget.__webglFramebuffer=[];renderTarget.__webglRenderbuffer=[];_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture);setTextureParameters(_gl.TEXTURE_CUBE_MAP,renderTarget,isTargetPowerOfTwo);for(var i=0;i<6;i++){renderTarget.__webglFramebuffer[i]=_gl.createFramebuffer();renderTarget.__webglRenderbuffer[i]=_gl.createRenderbuffer();_gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);setupFrameBuffer(renderTarget.__webglFramebuffer[i],renderTarget,_gl.TEXTURE_CUBE_MAP_POSITIVE_X+i);setupRenderBuffer(renderTarget.__webglRenderbuffer[i],renderTarget)}if(isTargetPowerOfTwo)_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP)}else{renderTarget.__webglFramebuffer=_gl.createFramebuffer();if(renderTarget.shareDepthFrom){renderTarget.__webglRenderbuffer=renderTarget.shareDepthFrom.__webglRenderbuffer}else{renderTarget.__webglRenderbuffer=_gl.createRenderbuffer()}_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture);setTextureParameters(_gl.TEXTURE_2D,renderTarget,isTargetPowerOfTwo);_gl.texImage2D(_gl.TEXTURE_2D,0,glFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);setupFrameBuffer(renderTarget.__webglFramebuffer,renderTarget,_gl.TEXTURE_2D);if(renderTarget.shareDepthFrom){if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_ATTACHMENT,_gl.RENDERBUFFER,renderTarget.__webglRenderbuffer)}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER,_gl.DEPTH_STENCIL_ATTACHMENT,_gl.RENDERBUFFER,renderTarget.__webglRenderbuffer)}}else{setupRenderBuffer(renderTarget.__webglRenderbuffer,renderTarget)}if(isTargetPowerOfTwo)_gl.generateMipmap(_gl.TEXTURE_2D)}if(isCube){_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null)}else{_gl.bindTexture(_gl.TEXTURE_2D,null)}_gl.bindRenderbuffer(_gl.RENDERBUFFER,null);_gl.bindFramebuffer(_gl.FRAMEBUFFER,null)}var framebuffer,width,height,vx,vy;if(renderTarget){if(isCube){framebuffer=renderTarget.__webglFramebuffer[renderTarget.activeCubeFace]}else{framebuffer=renderTarget.__webglFramebuffer}width=renderTarget.width;height=renderTarget.height;vx=0;vy=0}else{framebuffer=null;width=_viewportWidth;height=_viewportHeight;vx=_viewportX;vy=_viewportY}if(framebuffer!==_currentFramebuffer){_gl.bindFramebuffer(_gl.FRAMEBUFFER,framebuffer);_gl.viewport(vx,vy,width,height);_currentFramebuffer=framebuffer}_currentWidth=width;_currentHeight=height};function updateRenderTargetMipmap(renderTarget){if(renderTarget instanceof THREE.WebGLRenderTargetCube){_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,renderTarget.__webglTexture);_gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);_gl.bindTexture(_gl.TEXTURE_CUBE_MAP,null)}else{_gl.bindTexture(_gl.TEXTURE_2D,renderTarget.__webglTexture);_gl.generateMipmap(_gl.TEXTURE_2D);_gl.bindTexture(_gl.TEXTURE_2D,null)}}function filterFallback(f){if(f===THREE.NearestFilter||f===THREE.NearestMipMapNearestFilter||f===THREE.NearestMipMapLinearFilter){return _gl.NEAREST}return _gl.LINEAR}function paramThreeToGL(p){if(p===THREE.RepeatWrapping)return _gl.REPEAT;if(p===THREE.ClampToEdgeWrapping)return _gl.CLAMP_TO_EDGE;if(p===THREE.MirroredRepeatWrapping)return _gl.MIRRORED_REPEAT;if(p===THREE.NearestFilter)return _gl.NEAREST;if(p===THREE.NearestMipMapNearestFilter)return _gl.NEAREST_MIPMAP_NEAREST;if(p===THREE.NearestMipMapLinearFilter)return _gl.NEAREST_MIPMAP_LINEAR;if(p===THREE.LinearFilter)return _gl.LINEAR;if(p===THREE.LinearMipMapNearestFilter)return _gl.LINEAR_MIPMAP_NEAREST;if(p===THREE.LinearMipMapLinearFilter)return _gl.LINEAR_MIPMAP_LINEAR;if(p===THREE.UnsignedByteType)return _gl.UNSIGNED_BYTE;if(p===THREE.UnsignedShort4444Type)return _gl.UNSIGNED_SHORT_4_4_4_4;if(p===THREE.UnsignedShort5551Type)return _gl.UNSIGNED_SHORT_5_5_5_1;if(p===THREE.UnsignedShort565Type)return _gl.UNSIGNED_SHORT_5_6_5;if(p===THREE.ByteType)return _gl.BYTE;if(p===THREE.ShortType)return _gl.SHORT;if(p===THREE.UnsignedShortType)return _gl.UNSIGNED_SHORT;if(p===THREE.IntType)return _gl.INT;if(p===THREE.UnsignedIntType)return _gl.UNSIGNED_INT;if(p===THREE.FloatType)return _gl.FLOAT;if(p===THREE.AlphaFormat)return _gl.ALPHA;if(p===THREE.RGBFormat)return _gl.RGB;if(p===THREE.RGBAFormat)return _gl.RGBA;if(p===THREE.LuminanceFormat)return _gl.LUMINANCE;if(p===THREE.LuminanceAlphaFormat)return _gl.LUMINANCE_ALPHA;if(p===THREE.AddEquation)return _gl.FUNC_ADD;if(p===THREE.SubtractEquation)return _gl.FUNC_SUBTRACT;if(p===THREE.ReverseSubtractEquation)return _gl.FUNC_REVERSE_SUBTRACT;if(p===THREE.ZeroFactor)return _gl.ZERO;if(p===THREE.OneFactor)return _gl.ONE;if(p===THREE.SrcColorFactor)return _gl.SRC_COLOR;if(p===THREE.OneMinusSrcColorFactor)return _gl.ONE_MINUS_SRC_COLOR;if(p===THREE.SrcAlphaFactor)return _gl.SRC_ALPHA;if(p===THREE.OneMinusSrcAlphaFactor)return _gl.ONE_MINUS_SRC_ALPHA;if(p===THREE.DstAlphaFactor)return _gl.DST_ALPHA;if(p===THREE.OneMinusDstAlphaFactor)return _gl.ONE_MINUS_DST_ALPHA;if(p===THREE.DstColorFactor)return _gl.DST_COLOR;if(p===THREE.OneMinusDstColorFactor)return _gl.ONE_MINUS_DST_COLOR;if(p===THREE.SrcAlphaSaturateFactor)return _gl.SRC_ALPHA_SATURATE;if(_glExtensionCompressedTextureS3TC!==undefined){if(p===THREE.RGB_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT1_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT3_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===THREE.RGBA_S3TC_DXT5_Format)return _glExtensionCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function allocateBones(object){if(_supportsBoneTextures&&object&&object.useVertexTexture){return 1024}else{var nVertexUniforms=_gl.getParameter(_gl.MAX_VERTEX_UNIFORM_VECTORS);var nVertexMatrices=Math.floor((nVertexUniforms-20)/4);var maxBones=nVertexMatrices;if(object!==undefined&&object instanceof THREE.SkinnedMesh){maxBones=Math.min(object.bones.length,maxBones);if(maxBones<object.bones.length){console.warn("WebGLRenderer: too many bones - "+object.bones.length+", this GPU supports just "+maxBones+" (try OpenGL instead of ANGLE)")}}return maxBones}}function allocateLights(lights){var dirLights=0;var pointLights=0;var spotLights=0;var hemiLights=0;for(var l=0,ll=lights.length;l<ll;l++){var light=lights[l];if(light.onlyShadow)continue;if(light instanceof THREE.DirectionalLight)dirLights++;if(light instanceof THREE.PointLight)pointLights++;if(light instanceof THREE.SpotLight)spotLights++;if(light instanceof THREE.HemisphereLight)hemiLights++}return{directional:dirLights,point:pointLights,spot:spotLights,hemi:hemiLights}}function allocateShadows(lights){var maxShadows=0;for(var l=0,ll=lights.length;l<ll;l++){var light=lights[l];if(!light.castShadow)continue;if(light instanceof THREE.SpotLight)maxShadows++;if(light instanceof THREE.DirectionalLight&&!light.shadowCascade)maxShadows++}return maxShadows}function initGL(){try{var attributes={alpha:_alpha,premultipliedAlpha:_premultipliedAlpha,antialias:_antialias,stencil:_stencil,preserveDrawingBuffer:_preserveDrawingBuffer};_gl=_canvas.getContext("webgl",attributes)||_canvas.getContext("experimental-webgl",attributes);if(_gl===null){throw"Error creating WebGL context."}}catch(error){console.error(error)}_glExtensionTextureFloat=_gl.getExtension("OES_texture_float");_glExtensionTextureFloatLinear=_gl.getExtension("OES_texture_float_linear");_glExtensionStandardDerivatives=_gl.getExtension("OES_standard_derivatives");_glExtensionTextureFilterAnisotropic=_gl.getExtension("EXT_texture_filter_anisotropic")||_gl.getExtension("MOZ_EXT_texture_filter_anisotropic")||_gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic");_glExtensionCompressedTextureS3TC=_gl.getExtension("WEBGL_compressed_texture_s3tc")||_gl.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||_gl.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");if(!_glExtensionTextureFloat){console.log("THREE.WebGLRenderer: Float textures not supported.")}if(!_glExtensionStandardDerivatives){console.log("THREE.WebGLRenderer: Standard derivatives not supported.")}if(!_glExtensionTextureFilterAnisotropic){console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.")}if(!_glExtensionCompressedTextureS3TC){console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}if(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}}}function setDefaultGLState(){_gl.clearColor(0,0,0,1);_gl.clearDepth(1);_gl.clearStencil(0);_gl.enable(_gl.DEPTH_TEST);_gl.depthFunc(_gl.LEQUAL);_gl.frontFace(_gl.CCW);_gl.cullFace(_gl.BACK);_gl.enable(_gl.CULL_FACE);_gl.enable(_gl.BLEND);_gl.blendEquation(_gl.FUNC_ADD);_gl.blendFunc(_gl.SRC_ALPHA,_gl.ONE_MINUS_SRC_ALPHA);_gl.clearColor(_clearColor.r,_clearColor.g,_clearColor.b,_clearAlpha)}this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(width,height,options){this.width=width;this.height=height;options=options||{};this.wrapS=options.wrapS!==undefined?options.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=options.wrapT!==undefined?options.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=options.magFilter!==undefined?options.magFilter:THREE.LinearFilter;this.minFilter=options.minFilter!==undefined?options.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=options.anisotropy!==undefined?options.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=options.format!==undefined?options.format:THREE.RGBAFormat;this.type=options.type!==undefined?options.type:THREE.UnsignedByteType;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:true;this.generateMipmaps=true;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var tmp=new THREE.WebGLRenderTarget(this.width,this.height);tmp.wrapS=this.wrapS;tmp.wrapT=this.wrapT;tmp.magFilter=this.magFilter;tmp.minFilter=this.minFilter;tmp.anisotropy=this.anisotropy;tmp.offset.copy(this.offset);tmp.repeat.copy(this.repeat);tmp.format=this.format;tmp.type=this.type;tmp.depthBuffer=this.depthBuffer;tmp.stencilBuffer=this.stencilBuffer;tmp.generateMipmaps=this.generateMipmaps;tmp.shareDepthFrom=this.shareDepthFrom;return tmp},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(width,height,options){THREE.WebGLRenderTarget.call(this,width,height,options);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=true};THREE.RenderableVertex.prototype.copy=function(vertex){this.positionWorld.copy(vertex.positionWorld);this.positionScreen.copy(vertex.positionScreen)};THREE.RenderableFace3=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.color=null;this.material=null;this.uvs=[[]];this.z=0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableParticle=function(){this.id=0;this.object=null;this.x=0;this.y=0;this.z=0;this.rotation=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};THREE.GeometryUtils={merge:function(geometry1,object2,materialIndexOffset){var matrix,normalMatrix,vertexOffset=geometry1.vertices.length,uvPosition=geometry1.faceVertexUvs[0].length,geometry2=object2 instanceof THREE.Mesh?object2.geometry:object2,vertices1=geometry1.vertices,vertices2=geometry2.vertices,faces1=geometry1.faces,faces2=geometry2.faces,uvs1=geometry1.faceVertexUvs[0],uvs2=geometry2.faceVertexUvs[0];if(materialIndexOffset===undefined)materialIndexOffset=0;if(object2 instanceof THREE.Mesh){object2.matrixAutoUpdate&&object2.updateMatrix();matrix=object2.matrix;normalMatrix=(new THREE.Matrix3).getNormalMatrix(matrix)}for(var i=0,il=vertices2.length;i<il;i++){var vertex=vertices2[i];var vertexCopy=vertex.clone();if(matrix)vertexCopy.applyMatrix4(matrix);vertices1.push(vertexCopy)}for(i=0,il=faces2.length;i<il;i++){var face=faces2[i],faceCopy,normal,color,faceVertexNormals=face.vertexNormals,faceVertexColors=face.vertexColors;faceCopy=new THREE.Face3(face.a+vertexOffset,face.b+vertexOffset,face.c+vertexOffset);faceCopy.normal.copy(face.normal);if(normalMatrix){faceCopy.normal.applyMatrix3(normalMatrix).normalize()}for(var j=0,jl=faceVertexNormals.length;j<jl;j++){normal=faceVertexNormals[j].clone();if(normalMatrix){normal.applyMatrix3(normalMatrix).normalize()}faceCopy.vertexNormals.push(normal)}faceCopy.color.copy(face.color);for(var j=0,jl=faceVertexColors.length;j<jl;j++){color=faceVertexColors[j];faceCopy.vertexColors.push(color.clone())}faceCopy.materialIndex=face.materialIndex+materialIndexOffset;faceCopy.centroid.copy(face.centroid);if(matrix){faceCopy.centroid.applyMatrix4(matrix)}faces1.push(faceCopy)}for(i=0,il=uvs2.length;i<il;i++){var uv=uvs2[i],uvCopy=[];for(var j=0,jl=uv.length;j<jl;j++){uvCopy.push(new THREE.Vector2(uv[j].x,uv[j].y))}uvs1.push(uvCopy)}},randomPointInTriangle:function(){var vector=new THREE.Vector3;return function(vectorA,vectorB,vectorC){var point=new THREE.Vector3;var a=THREE.Math.random16();var b=THREE.Math.random16();if(a+b>1){a=1-a;b=1-b}var c=1-a-b;point.copy(vectorA);point.multiplyScalar(a);vector.copy(vectorB);vector.multiplyScalar(b);point.add(vector);vector.copy(vectorC);vector.multiplyScalar(c);point.add(vector);return point}}(),randomPointInFace:function(face,geometry,useCachedAreas){var vA,vB,vC,vD;vA=geometry.vertices[face.a];vB=geometry.vertices[face.b];vC=geometry.vertices[face.c];return THREE.GeometryUtils.randomPointInTriangle(vA,vB,vC)},randomPointsInGeometry:function(geometry,n){var face,i,faces=geometry.faces,vertices=geometry.vertices,il=faces.length,totalArea=0,cumulativeAreas=[],vA,vB,vC,vD;for(i=0;i<il;i++){face=faces[i];vA=vertices[face.a];vB=vertices[face.b];vC=vertices[face.c];face._area=THREE.GeometryUtils.triangleArea(vA,vB,vC);totalArea+=face._area;cumulativeAreas[i]=totalArea}function binarySearchIndices(value){function binarySearch(start,end){if(end<start)return start;var mid=start+Math.floor((end-start)/2);if(cumulativeAreas[mid]>value){return binarySearch(start,mid-1)}else if(cumulativeAreas[mid]<value){return binarySearch(mid+1,end)}else{return mid}}var result=binarySearch(0,cumulativeAreas.length-1);return result}var r,index,result=[];var stats={};for(i=0;i<n;i++){r=THREE.Math.random16()*totalArea;index=binarySearchIndices(r);result[i]=THREE.GeometryUtils.randomPointInFace(faces[index],geometry,true);if(!stats[index]){stats[index]=1}else{stats[index]+=1}}return result},triangleArea:function(){var vector1=new THREE.Vector3;var vector2=new THREE.Vector3;return function(vectorA,vectorB,vectorC){vector1.subVectors(vectorB,vectorA);vector2.subVectors(vectorC,vectorA);vector1.cross(vector2);return.5*vector1.length()}}(),center:function(geometry){geometry.computeBoundingBox();var bb=geometry.boundingBox;var offset=new THREE.Vector3;offset.addVectors(bb.min,bb.max);offset.multiplyScalar(-.5);geometry.applyMatrix((new THREE.Matrix4).makeTranslation(offset.x,offset.y,offset.z));geometry.computeBoundingBox();return offset},triangulateQuads:function(geometry){var i,il,j,jl;var faces=[];var faceVertexUvs=[];for(i=0,il=geometry.faceVertexUvs.length;i<il;i++){faceVertexUvs[i]=[]}for(i=0,il=geometry.faces.length;i<il;i++){var face=geometry.faces[i];faces.push(face);for(j=0,jl=geometry.faceVertexUvs.length;j<jl;j++){faceVertexUvs[j].push(geometry.faceVertexUvs[j][i])}}geometry.faces=faces;geometry.faceVertexUvs=faceVertexUvs;geometry.computeCentroids();geometry.computeFaceNormals();
geometry.computeVertexNormals();if(geometry.hasTangents)geometry.computeTangents()}};THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(url,mapping,onLoad,onError){var loader=new THREE.ImageLoader;loader.crossOrigin=this.crossOrigin;var texture=new THREE.Texture(undefined,mapping);var image=loader.load(url,function(){texture.needsUpdate=true;if(onLoad)onLoad(texture)});texture.image=image;texture.sourceFile=url;return texture},loadCompressedTexture:function(url,mapping,onLoad,onError){var texture=new THREE.CompressedTexture;texture.mapping=mapping;var request=new XMLHttpRequest;request.onload=function(){var buffer=request.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);texture.format=dds.format;texture.mipmaps=dds.mipmaps;texture.image.width=dds.width;texture.image.height=dds.height;texture.generateMipmaps=false;texture.needsUpdate=true;if(onLoad)onLoad(texture)};request.onerror=onError;request.open("GET",url,true);request.responseType="arraybuffer";request.send(null);return texture},loadTextureCube:function(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.Texture;texture.image=images;if(mapping!==undefined)texture.mapping=mapping;texture.flipY=false;for(var i=0,il=array.length;i<il;++i){var cubeImage=new Image;images[i]=cubeImage;cubeImage.onload=function(){images.loadCount+=1;if(images.loadCount===6){texture.needsUpdate=true;if(onLoad)onLoad(texture)}};cubeImage.onerror=onError;cubeImage.crossOrigin=this.crossOrigin;cubeImage.src=array[i]}return texture},loadCompressedTextureCube:function(array,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.CompressedTexture;texture.image=images;if(mapping!==undefined)texture.mapping=mapping;texture.flipY=false;texture.generateMipmaps=false;var generateCubeFaceCallback=function(rq,img){return function(){var buffer=rq.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);img.format=dds.format;img.mipmaps=dds.mipmaps;img.width=dds.width;img.height=dds.height;images.loadCount+=1;if(images.loadCount===6){texture.format=dds.format;texture.needsUpdate=true;if(onLoad)onLoad(texture)}}};if(array instanceof Array){for(var i=0,il=array.length;i<il;++i){var cubeImage={};images[i]=cubeImage;var request=new XMLHttpRequest;request.onload=generateCubeFaceCallback(request,cubeImage);request.onerror=onError;var url=array[i];request.open("GET",url,true);request.responseType="arraybuffer";request.send(null)}}else{var url=array;var request=new XMLHttpRequest;request.onload=function(){var buffer=request.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);if(dds.isCubemap){var faces=dds.mipmaps.length/dds.mipmapCount;for(var f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i=0;i<dds.mipmapCount;i++){images[f].mipmaps.push(dds.mipmaps[f*dds.mipmapCount+i]);images[f].format=dds.format;images[f].width=dds.width;images[f].height=dds.height}}texture.format=dds.format;texture.needsUpdate=true;if(onLoad)onLoad(texture)}};request.onerror=onError;request.open("GET",url,true);request.responseType="arraybuffer";request.send(null)}return texture},loadDDSTexture:function(url,mapping,onLoad,onError){var images=[];images.loadCount=0;var texture=new THREE.CompressedTexture;texture.image=images;if(mapping!==undefined)texture.mapping=mapping;texture.flipY=false;texture.generateMipmaps=false;{var request=new XMLHttpRequest;request.onload=function(){var buffer=request.response;var dds=THREE.ImageUtils.parseDDS(buffer,true);if(dds.isCubemap){var faces=dds.mipmaps.length/dds.mipmapCount;for(var f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i=0;i<dds.mipmapCount;i++){images[f].mipmaps.push(dds.mipmaps[f*dds.mipmapCount+i]);images[f].format=dds.format;images[f].width=dds.width;images[f].height=dds.height}}}else{texture.image.width=dds.width;texture.image.height=dds.height;texture.mipmaps=dds.mipmaps}texture.format=dds.format;texture.needsUpdate=true;if(onLoad)onLoad(texture)};request.onerror=onError;request.open("GET",url,true);request.responseType="arraybuffer";request.send(null)}return texture},parseDDS:function(buffer,loadMipmaps){var dds={mipmaps:[],width:0,height:0,format:null,mipmapCount:1};var DDS_MAGIC=542327876;var DDSD_CAPS=1,DDSD_HEIGHT=2,DDSD_WIDTH=4,DDSD_PITCH=8,DDSD_PIXELFORMAT=4096,DDSD_MIPMAPCOUNT=131072,DDSD_LINEARSIZE=524288,DDSD_DEPTH=8388608;var DDSCAPS_COMPLEX=8,DDSCAPS_MIPMAP=4194304,DDSCAPS_TEXTURE=4096;var DDSCAPS2_CUBEMAP=512,DDSCAPS2_CUBEMAP_POSITIVEX=1024,DDSCAPS2_CUBEMAP_NEGATIVEX=2048,DDSCAPS2_CUBEMAP_POSITIVEY=4096,DDSCAPS2_CUBEMAP_NEGATIVEY=8192,DDSCAPS2_CUBEMAP_POSITIVEZ=16384,DDSCAPS2_CUBEMAP_NEGATIVEZ=32768,DDSCAPS2_VOLUME=2097152;var DDPF_ALPHAPIXELS=1,DDPF_ALPHA=2,DDPF_FOURCC=4,DDPF_RGB=64,DDPF_YUV=512,DDPF_LUMINANCE=131072;function fourCCToInt32(value){return value.charCodeAt(0)+(value.charCodeAt(1)<<8)+(value.charCodeAt(2)<<16)+(value.charCodeAt(3)<<24)}function int32ToFourCC(value){return String.fromCharCode(value&255,value>>8&255,value>>16&255,value>>24&255)}function loadARGBMip(buffer,dataOffset,width,height){var dataLength=width*height*4;var srcBuffer=new Uint8Array(buffer,dataOffset,dataLength);var byteArray=new Uint8Array(dataLength);var dst=0;var src=0;for(var y=0;y<height;y++){for(var x=0;x<width;x++){var b=srcBuffer[src];src++;var g=srcBuffer[src];src++;var r=srcBuffer[src];src++;var a=srcBuffer[src];src++;byteArray[dst]=r;dst++;byteArray[dst]=g;dst++;byteArray[dst]=b;dst++;byteArray[dst]=a;dst++}}return byteArray}var FOURCC_DXT1=fourCCToInt32("DXT1");var FOURCC_DXT3=fourCCToInt32("DXT3");var FOURCC_DXT5=fourCCToInt32("DXT5");var headerLengthInt=31;var off_magic=0;var off_size=1;var off_flags=2;var off_height=3;var off_width=4;var off_mipmapCount=7;var off_pfFlags=20;var off_pfFourCC=21;var off_RGBBitCount=22;var off_RBitMask=23;var off_GBitMask=24;var off_BBitMask=25;var off_ABitMask=26;var off_caps=27;var off_caps2=28;var off_caps3=29;var off_caps4=30;var header=new Int32Array(buffer,0,headerLengthInt);if(header[off_magic]!==DDS_MAGIC){console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header");return dds}if(!header[off_pfFlags]&DDPF_FOURCC){console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code");return dds}var blockBytes;var fourCC=header[off_pfFourCC];var isRGBAUncompressed=false;switch(fourCC){case FOURCC_DXT1:blockBytes=8;dds.format=THREE.RGB_S3TC_DXT1_Format;break;case FOURCC_DXT3:blockBytes=16;dds.format=THREE.RGBA_S3TC_DXT3_Format;break;case FOURCC_DXT5:blockBytes=16;dds.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(header[off_RGBBitCount]==32&&header[off_RBitMask]&16711680&&header[off_GBitMask]&65280&&header[off_BBitMask]&255&&header[off_ABitMask]&4278190080){isRGBAUncompressed=true;blockBytes=64;dds.format=THREE.RGBAFormat}else{console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",int32ToFourCC(fourCC));return dds}}dds.mipmapCount=1;if(header[off_flags]&DDSD_MIPMAPCOUNT&&loadMipmaps!==false){dds.mipmapCount=Math.max(1,header[off_mipmapCount])}dds.isCubemap=header[off_caps2]&DDSCAPS2_CUBEMAP?true:false;dds.width=header[off_width];dds.height=header[off_height];var dataOffset=header[off_size]+4;var width=dds.width;var height=dds.height;var faces=dds.isCubemap?6:1;for(var face=0;face<faces;face++){for(var i=0;i<dds.mipmapCount;i++){if(isRGBAUncompressed){var byteArray=loadARGBMip(buffer,dataOffset,width,height);var dataLength=byteArray.length}else{var dataLength=Math.max(4,width)/4*Math.max(4,height)/4*blockBytes;var byteArray=new Uint8Array(buffer,dataOffset,dataLength)}var mipmap={data:byteArray,width:width,height:height};dds.mipmaps.push(mipmap);dataOffset+=dataLength;width=Math.max(width*.5,1);height=Math.max(height*.5,1)}width=dds.width;height=dds.height}return dds},getNormalMap:function(image,depth){var cross=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]};var subtract=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]};var normalize=function(a){var l=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/l,a[1]/l,a[2]/l]};depth=depth|1;var width=image.width;var height=image.height;var canvas=document.createElement("canvas");canvas.width=width;canvas.height=height;var context=canvas.getContext("2d");context.drawImage(image,0,0);var data=context.getImageData(0,0,width,height).data;var imageData=context.createImageData(width,height);var output=imageData.data;for(var x=0;x<width;x++){for(var y=0;y<height;y++){var ly=y-1<0?0:y-1;var uy=y+1>height-1?height-1:y+1;var lx=x-1<0?0:x-1;var ux=x+1>width-1?width-1:x+1;var points=[];var origin=[0,0,data[(y*width+x)*4]/255*depth];points.push([-1,0,data[(y*width+lx)*4]/255*depth]);points.push([-1,-1,data[(ly*width+lx)*4]/255*depth]);points.push([0,-1,data[(ly*width+x)*4]/255*depth]);points.push([1,-1,data[(ly*width+ux)*4]/255*depth]);points.push([1,0,data[(y*width+ux)*4]/255*depth]);points.push([1,1,data[(uy*width+ux)*4]/255*depth]);points.push([0,1,data[(uy*width+x)*4]/255*depth]);points.push([-1,1,data[(uy*width+lx)*4]/255*depth]);var normals=[];var num_points=points.length;for(var i=0;i<num_points;i++){var v1=points[i];var v2=points[(i+1)%num_points];v1=subtract(v1,origin);v2=subtract(v2,origin);normals.push(normalize(cross(v1,v2)))}var normal=[0,0,0];for(var i=0;i<normals.length;i++){normal[0]+=normals[i][0];normal[1]+=normals[i][1];normal[2]+=normals[i][2]}normal[0]/=normals.length;normal[1]/=normals.length;normal[2]/=normals.length;var idx=(y*width+x)*4;output[idx]=(normal[0]+1)/2*255|0;output[idx+1]=(normal[1]+1)/2*255|0;output[idx+2]=normal[2]*255|0;output[idx+3]=255}}context.putImageData(imageData,0,0);return canvas},generateDataTexture:function(width,height,color){var size=width*height;var data=new Uint8Array(3*size);var r=Math.floor(color.r*255);var g=Math.floor(color.g*255);var b=Math.floor(color.b*255);for(var i=0;i<size;i++){data[i*3]=r;data[i*3+1]=g;data[i*3+2]=b}var texture=new THREE.DataTexture(data,width,height,THREE.RGBFormat);texture.needsUpdate=true;return texture}};THREE.SceneUtils={createMultiMaterialObject:function(geometry,materials){var group=new THREE.Object3D;for(var i=0,l=materials.length;i<l;i++){group.add(new THREE.Mesh(geometry,materials[i]))}return group},detach:function(child,parent,scene){child.applyMatrix(parent.matrixWorld);parent.remove(child);scene.add(child)},attach:function(child,scene,parent){var matrixWorldInverse=new THREE.Matrix4;matrixWorldInverse.getInverse(parent.matrixWorld);child.applyMatrix(matrixWorldInverse);scene.remove(child);parent.add(child)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(data){var family=data.familyName.toLowerCase();var ThreeFont=this;ThreeFont.faces[family]=ThreeFont.faces[family]||{};ThreeFont.faces[family][data.cssFontWeight]=ThreeFont.faces[family][data.cssFontWeight]||{};ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data;var face=ThreeFont.faces[family][data.cssFontWeight][data.cssFontStyle]=data;return data},drawText:function(text){var characterPts=[],allPts=[];var i,p,face=this.getFace(),scale=this.size/face.resolution,offset=0,chars=String(text).split(""),length=chars.length;var fontPaths=[];for(i=0;i<length;i++){var path=new THREE.Path;var ret=this.extractGlyphPoints(chars[i],face,scale,offset,path);offset+=ret.offset;fontPaths.push(ret.path)}var width=offset/2;return{paths:fontPaths,offset:width}},extractGlyphPoints:function(c,face,scale,offset,path){var pts=[];var i,i2,divisions,outline,action,length,scaleX,scaleY,x,y,cpx,cpy,cpx0,cpy0,cpx1,cpy1,cpx2,cpy2,laste,glyph=face.glyphs[c]||face.glyphs["?"];if(!glyph)return;if(glyph.o){outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(" "));length=outline.length;scaleX=scale;scaleY=scale;for(i=0;i<length;){action=outline[i++];switch(action){case"m":x=outline[i++]*scaleX+offset;y=outline[i++]*scaleY;path.moveTo(x,y);break;case"l":x=outline[i++]*scaleX+offset;y=outline[i++]*scaleY;path.lineTo(x,y);break;case"q":cpx=outline[i++]*scaleX+offset;cpy=outline[i++]*scaleY;cpx1=outline[i++]*scaleX+offset;cpy1=outline[i++]*scaleY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);laste=pts[pts.length-1];if(laste){cpx0=laste.x;cpy0=laste.y;for(i2=1,divisions=this.divisions;i2<=divisions;i2++){var t=i2/divisions;var tx=THREE.Shape.Utils.b2(t,cpx0,cpx1,cpx);var ty=THREE.Shape.Utils.b2(t,cpy0,cpy1,cpy)}}break;case"b":cpx=outline[i++]*scaleX+offset;cpy=outline[i++]*scaleY;cpx1=outline[i++]*scaleX+offset;cpy1=outline[i++]*-scaleY;cpx2=outline[i++]*scaleX+offset;cpy2=outline[i++]*-scaleY;path.bezierCurveTo(cpx,cpy,cpx1,cpy1,cpx2,cpy2);laste=pts[pts.length-1];if(laste){cpx0=laste.x;cpy0=laste.y;for(i2=1,divisions=this.divisions;i2<=divisions;i2++){var t=i2/divisions;var tx=THREE.Shape.Utils.b3(t,cpx0,cpx1,cpx2,cpx);var ty=THREE.Shape.Utils.b3(t,cpy0,cpy1,cpy2,cpy)}}break}}}return{offset:glyph.ha*scale,path:path}}};THREE.FontUtils.generateShapes=function(text,parameters){parameters=parameters||{};var size=parameters.size!==undefined?parameters.size:100;var curveSegments=parameters.curveSegments!==undefined?parameters.curveSegments:4;var font=parameters.font!==undefined?parameters.font:"helvetiker";var weight=parameters.weight!==undefined?parameters.weight:"normal";var style=parameters.style!==undefined?parameters.style:"normal";THREE.FontUtils.size=size;THREE.FontUtils.divisions=curveSegments;THREE.FontUtils.face=font;THREE.FontUtils.weight=weight;THREE.FontUtils.style=style;var data=THREE.FontUtils.drawText(text);var paths=data.paths;var shapes=[];for(var p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes())}return shapes};(function(namespace){var EPSILON=1e-10;var process=function(contour,indices){var n=contour.length;if(n<3)return null;var result=[],verts=[],vertIndices=[];var u,v,w;if(area(contour)>0){for(v=0;v<n;v++)verts[v]=v}else{for(v=0;v<n;v++)verts[v]=n-1-v}var nv=n;var count=2*nv;for(v=nv-1;nv>2;){if(count--<=0){console.log("Warning, unable to triangulate polygon!");if(indices)return vertIndices;return result}u=v;if(nv<=u)u=0;v=u+1;if(nv<=v)v=0;w=v+1;if(nv<=w)w=0;if(snip(contour,u,v,w,nv,verts)){var a,b,c,s,t;a=verts[u];b=verts[v];c=verts[w];result.push([contour[a],contour[b],contour[c]]);vertIndices.push([verts[u],verts[v],verts[w]]);for(s=v,t=v+1;t<nv;s++,t++){verts[s]=verts[t]}nv--;count=2*nv}}if(indices)return vertIndices;return result};var area=function(contour){var n=contour.length;var a=0;for(var p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y}return a*.5};var snip=function(contour,u,v,w,n,verts){var p;var ax,ay,bx,by;var cx,cy,px,py;ax=contour[verts[u]].x;ay=contour[verts[u]].y;bx=contour[verts[v]].x;by=contour[verts[v]].y;cx=contour[verts[w]].x;cy=contour[verts[w]].y;if(EPSILON>(bx-ax)*(cy-ay)-(by-ay)*(cx-ax))return false;var aX,aY,bX,bY,cX,cY;var apx,apy,bpx,bpy,cpx,cpy;var cCROSSap,bCROSScp,aCROSSbp;aX=cx-bx;aY=cy-by;bX=ax-cx;bY=ay-cy;cX=bx-ax;cY=by-ay;for(p=0;p<n;p++){if(p===u||p===v||p===w)continue;px=contour[verts[p]].x;py=contour[verts[p]].y;apx=px-ax;apy=py-ay;bpx=px-bx;bpy=py-by;cpx=px-cx;cpy=py-cy;aCROSSbp=aX*bpy-aY*bpx;cCROSSap=cX*apy-cY*apx;bCROSScp=bX*cpy-bY*cpx;if(aCROSSbp>=-EPSILON&&bCROSScp>=-EPSILON&&cCROSSap>=-EPSILON)return false}return true};namespace.Triangulate=process;namespace.Triangulate.area=area;return namespace})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(t){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(u){var t=this.getUtoTmapping(u);return this.getPoint(t)};THREE.Curve.prototype.getPoints=function(divisions){if(!divisions)divisions=5;var d,pts=[];for(d=0;d<=divisions;d++){pts.push(this.getPoint(d/divisions))}return pts};THREE.Curve.prototype.getSpacedPoints=function(divisions){if(!divisions)divisions=5;var d,pts=[];for(d=0;d<=divisions;d++){pts.push(this.getPointAt(d/divisions))}return pts};THREE.Curve.prototype.getLength=function(){var lengths=this.getLengths();return lengths[lengths.length-1]};THREE.Curve.prototype.getLengths=function(divisions){if(!divisions)divisions=this.__arcLengthDivisions?this.__arcLengthDivisions:200;if(this.cacheArcLengths&&this.cacheArcLengths.length==divisions+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var cache=[];var current,last=this.getPoint(0);var p,sum=0;cache.push(0);for(p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current}this.cacheArcLengths=cache;return cache};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(u,distance){var arcLengths=this.getLengths();var i=0,il=arcLengths.length;var targetArcLength;if(distance){targetArcLength=distance}else{targetArcLength=u*arcLengths[il-1]}var low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);comparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;continue}else if(comparison>0){high=i-1;continue}else{high=i;break}}i=high;if(arcLengths[i]==targetArcLength){var t=i/(il-1);return t}var lengthBefore=arcLengths[i];var lengthAfter=arcLengths[i+1];var segmentLength=lengthAfter-lengthBefore;var segmentFraction=(targetArcLength-lengthBefore)/segmentLength;var t=(i+segmentFraction)/(il-1);return t};THREE.Curve.prototype.getTangent=function(t){var delta=1e-4;var t1=t-delta;var t2=t+delta;if(t1<0)t1=0;if(t2>1)t2=1;var pt1=this.getPoint(t1);var pt2=this.getPoint(t2);var vec=pt2.clone().sub(pt1);return vec.normalize()};THREE.Curve.prototype.getTangentAt=function(u){var t=this.getUtoTmapping(u);return this.getTangent(t)};THREE.Curve.Utils={tangentQuadraticBezier:function(t,p0,p1,p2){return 2*(1-t)*(p1-p0)+2*t*(p2-p1)},tangentCubicBezier:function(t,p0,p1,p2,p3){return-3*p0*(1-t)*(1-t)+3*p1*(1-t)*(1-t)-6*t*p1*(1-t)+6*t*p2*(1-t)-3*t*t*p2+3*t*t*p3},tangentSpline:function(t,p0,p1,p2,p3){var h00=6*t*t-6*t;var h10=3*t*t-4*t+1;var h01=-6*t*t+6*t;var h11=3*t*t-2*t;return h00+h10+h01+h11},interpolate:function(p0,p1,p2,p3,t){var v0=(p2-p0)*.5;var v1=(p3-p1)*.5;var t2=t*t;var t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1}};THREE.Curve.create=function(constructor,getPointFunc){constructor.prototype=Object.create(THREE.Curve.prototype);constructor.prototype.getPoint=getPointFunc;return constructor};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(curve){this.curves.push(curve)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var startPoint=this.curves[0].getPoint(0);var endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new THREE.LineCurve(endPoint,startPoint))}};THREE.CurvePath.prototype.getPoint=function(t){var d=t*this.getLength();var curveLengths=this.getCurveLengths();var i=0,diff,curve;while(i<curveLengths.length){if(curveLengths[i]>=d){diff=curveLengths[i]-d;curve=this.curves[i];var u=1-diff/curve.getLength();return curve.getPointAt(u);break}i++}return null};THREE.CurvePath.prototype.getLength=function(){var lens=this.getCurveLengths();return lens[lens.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var lengths=[],sums=0;var i,il=this.curves.length;for(i=0;i<il;i++){sums+=this.curves[i].getLength();lengths.push(sums)}this.cacheLengths=lengths;return lengths};THREE.CurvePath.prototype.getBoundingBox=function(){var points=this.getPoints();var maxX,maxY,maxZ;var minX,minY,minZ;maxX=maxY=Number.NEGATIVE_INFINITY;minX=minY=Number.POSITIVE_INFINITY;var p,i,il,sum;var v3=points[0]instanceof THREE.Vector3;sum=v3?new THREE.Vector3:new THREE.Vector2;for(i=0,il=points.length;i<il;i++){p=points[i];if(p.x>maxX)maxX=p.x;else if(p.x<minX)minX=p.x;if(p.y>maxY)maxY=p.y;else if(p.y<minY)minY=p.y;if(v3){if(p.z>maxZ)maxZ=p.z;else if(p.z<minZ)minZ=p.z}sum.add(p)}var ret={minX:minX,minY:minY,maxX:maxX,maxY:maxY,centroid:sum.divideScalar(il)};if(v3){ret.maxZ=maxZ;ret.minZ=minZ}return ret};THREE.CurvePath.prototype.createPointsGeometry=function(divisions){var pts=this.getPoints(divisions,true);return this.createGeometry(pts)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(divisions){var pts=this.getSpacedPoints(divisions,true);return this.createGeometry(pts)};THREE.CurvePath.prototype.createGeometry=function(points){var geometry=new THREE.Geometry;for(var i=0;i<points.length;i++){geometry.vertices.push(new THREE.Vector3(points[i].x,points[i].y,points[i].z||0))}return geometry};THREE.CurvePath.prototype.addWrapPath=function(bendpath){this.bends.push(bendpath)};THREE.CurvePath.prototype.getTransformedPoints=function(segments,bends){var oldPts=this.getPoints(segments);var i,il;if(!bends){bends=this.bends}for(i=0,il=bends.length;i<il;i++){oldPts=this.getWrapPoints(oldPts,bends[i])}return oldPts};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(segments,bends){var oldPts=this.getSpacedPoints(segments);var i,il;if(!bends){bends=this.bends}for(i=0,il=bends.length;i<il;i++){oldPts=this.getWrapPoints(oldPts,bends[i])}return oldPts};THREE.CurvePath.prototype.getWrapPoints=function(oldPts,path){var bounds=this.getBoundingBox();var i,il,p,oldX,oldY,xNorm;for(i=0,il=oldPts.length;i<il;i++){p=oldPts[i];oldX=p.x;oldY=p.y;xNorm=oldX/bounds.maxX;xNorm=path.getUtoTmapping(xNorm,oldX);var pathPt=path.getPoint(xNorm);var normal=path.getNormalVector(xNorm).multiplyScalar(oldY);p.x=pathPt.x+normal.x;p.y=pathPt.y+normal.y}return oldPts};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(force){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent){this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)}else{this.matrixWorld.copy(this.matrix)}this.matrixWorldNeedsUpdate=false;force=true}for(var i=0,l=this.children.length;i<l;i++){this.children[i].updateMatrixWorld(force)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(points){THREE.CurvePath.call(this);this.actions=[];if(points){this.fromPoints(points)}};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(vectors){this.moveTo(vectors[0].x,vectors[0].y);for(var v=1,vlen=vectors.length;v<vlen;v++){this.lineTo(vectors[v].x,vectors[v].y)}};THREE.Path.prototype.moveTo=function(x,y){var args=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:args})};THREE.Path.prototype.lineTo=function(x,y){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var curve=new THREE.LineCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(x,y));this.curves.push(curve);this.actions.push({action:THREE.PathActions.LINE_TO,args:args})};THREE.Path.prototype.quadraticCurveTo=function(aCPx,aCPy,aX,aY){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var curve=new THREE.QuadraticBezierCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(aCPx,aCPy),new THREE.Vector2(aX,aY));this.curves.push(curve);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:args})};THREE.Path.prototype.bezierCurveTo=function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var curve=new THREE.CubicBezierCurve(new THREE.Vector2(x0,y0),new THREE.Vector2(aCP1x,aCP1y),new THREE.Vector2(aCP2x,aCP2y),new THREE.Vector2(aX,aY));this.curves.push(curve);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:args})};THREE.Path.prototype.splineThru=function(pts){var args=Array.prototype.slice.call(arguments);var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];var npts=[new THREE.Vector2(x0,y0)];Array.prototype.push.apply(npts,pts);var curve=new THREE.SplineCurve(npts);this.curves.push(curve);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:args})};THREE.Path.prototype.arc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise)};THREE.Path.prototype.absarc=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise)};THREE.Path.prototype.ellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){var lastargs=this.actions[this.actions.length-1].args;var x0=lastargs[lastargs.length-2];var y0=lastargs[lastargs.length-1];this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise)};THREE.Path.prototype.absellipse=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){var args=Array.prototype.slice.call(arguments);var curve=new THREE.EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise);this.curves.push(curve);var lastPoint=curve.getPoint(1);args.push(lastPoint.x);args.push(lastPoint.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:args})};THREE.Path.prototype.getSpacedPoints=function(divisions,closedPath){if(!divisions)divisions=40;var points=[];for(var i=0;i<divisions;i++){points.push(this.getPoint(i/divisions))}return points};THREE.Path.prototype.getPoints=function(divisions,closedPath){if(this.useSpacedPoints){console.log("tata");return this.getSpacedPoints(divisions,closedPath)}divisions=divisions||12;var points=[];var i,il,item,action,args;var cpx,cpy,cpx2,cpy2,cpx1,cpy1,cpx0,cpy0,laste,j,t,tx,ty;for(i=0,il=this.actions.length;i<il;i++){item=this.actions[i];action=item.action;args=item.args;switch(action){case THREE.PathActions.MOVE_TO:points.push(new THREE.Vector2(args[0],args[1]));break;case THREE.PathActions.LINE_TO:points.push(new THREE.Vector2(args[0],args[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:cpx=args[2];cpy=args[3];cpx1=args[0];cpy1=args[1];if(points.length>0){laste=points[points.length-1];cpx0=laste.x;cpy0=laste.y}else{laste=this.actions[i-1].args;cpx0=laste[laste.length-2];cpy0=laste[laste.length-1]}for(j=1;j<=divisions;j++){t=j/divisions;tx=THREE.Shape.Utils.b2(t,cpx0,cpx1,cpx);ty=THREE.Shape.Utils.b2(t,cpy0,cpy1,cpy);points.push(new THREE.Vector2(tx,ty))}break;case THREE.PathActions.BEZIER_CURVE_TO:cpx=args[4];cpy=args[5];cpx1=args[0];cpy1=args[1];cpx2=args[2];cpy2=args[3];if(points.length>0){laste=points[points.length-1];cpx0=laste.x;cpy0=laste.y}else{laste=this.actions[i-1].args;cpx0=laste[laste.length-2];cpy0=laste[laste.length-1]}for(j=1;j<=divisions;j++){t=j/divisions;tx=THREE.Shape.Utils.b3(t,cpx0,cpx1,cpx2,cpx);ty=THREE.Shape.Utils.b3(t,cpy0,cpy1,cpy2,cpy);points.push(new THREE.Vector2(tx,ty))}break;case THREE.PathActions.CSPLINE_THRU:laste=this.actions[i-1].args;var last=new THREE.Vector2(laste[laste.length-2],laste[laste.length-1]);var spts=[last];var n=divisions*args[0].length;spts=spts.concat(args[0]);var spline=new THREE.SplineCurve(spts);for(j=1;j<=n;j++){points.push(spline.getPointAt(j/n))}break;case THREE.PathActions.ARC:var aX=args[0],aY=args[1],aRadius=args[2],aStartAngle=args[3],aEndAngle=args[4],aClockwise=!!args[5];var deltaAngle=aEndAngle-aStartAngle;var angle;var tdivisions=divisions*2;for(j=1;j<=tdivisions;j++){t=j/tdivisions;if(!aClockwise){t=1-t}angle=aStartAngle+t*deltaAngle;tx=aX+aRadius*Math.cos(angle);ty=aY+aRadius*Math.sin(angle);points.push(new THREE.Vector2(tx,ty))}break;case THREE.PathActions.ELLIPSE:var aX=args[0],aY=args[1],xRadius=args[2],yRadius=args[3],aStartAngle=args[4],aEndAngle=args[5],aClockwise=!!args[6];var deltaAngle=aEndAngle-aStartAngle;var angle;var tdivisions=divisions*2;for(j=1;j<=tdivisions;j++){t=j/tdivisions;if(!aClockwise){t=1-t}angle=aStartAngle+t*deltaAngle;tx=aX+xRadius*Math.cos(angle);ty=aY+yRadius*Math.sin(angle);points.push(new THREE.Vector2(tx,ty))}break}}var lastPoint=points[points.length-1];var EPSILON=1e-10;if(Math.abs(lastPoint.x-points[0].x)<EPSILON&&Math.abs(lastPoint.y-points[0].y)<EPSILON)points.splice(points.length-1,1);if(closedPath){points.push(points[0])}return points};THREE.Path.prototype.toShapes=function(isCCW){var i,il,item,action,args;var subPaths=[],lastPath=new THREE.Path;for(i=0,il=this.actions.length;i<il;i++){item=this.actions[i];args=item.args;action=item.action;if(action==THREE.PathActions.MOVE_TO){if(lastPath.actions.length!=0){subPaths.push(lastPath);lastPath=new THREE.Path}}lastPath[action].apply(lastPath,args)}if(lastPath.actions.length!=0){subPaths.push(lastPath)}if(subPaths.length==0)return[];var solid,tmpPath,tmpShape,shapes=[];if(subPaths.length==1){tmpPath=subPaths[0];tmpShape=new THREE.Shape;tmpShape.actions=tmpPath.actions;tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes}var holesFirst=!THREE.Shape.Utils.isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;if(holesFirst){tmpShape=new THREE.Shape;for(i=0,il=subPaths.length;i<il;i++){tmpPath=subPaths[i];solid=THREE.Shape.Utils.isClockWise(tmpPath.getPoints());solid=isCCW?!solid:solid;if(solid){tmpShape.actions=tmpPath.actions;tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);tmpShape=new THREE.Shape}else{tmpShape.holes.push(tmpPath)}}}else{tmpShape=undefined;for(i=0,il=subPaths.length;i<il;i++){tmpPath=subPaths[i];solid=THREE.Shape.Utils.isClockWise(tmpPath.getPoints());solid=isCCW?!solid:solid;if(solid){if(tmpShape)shapes.push(tmpShape);tmpShape=new THREE.Shape;tmpShape.actions=tmpPath.actions;tmpShape.curves=tmpPath.curves}else{tmpShape.holes.push(tmpPath)}}shapes.push(tmpShape)}return shapes};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(options){var extruded=new THREE.ExtrudeGeometry(this,options);return extruded};THREE.Shape.prototype.makeGeometry=function(options){var geometry=new THREE.ShapeGeometry(this,options);return geometry};THREE.Shape.prototype.getPointsHoles=function(divisions){var i,il=this.holes.length,holesPts=[];for(i=0;i<il;i++){holesPts[i]=this.holes[i].getTransformedPoints(divisions,this.bends)}return holesPts};THREE.Shape.prototype.getSpacedPointsHoles=function(divisions){var i,il=this.holes.length,holesPts=[];for(i=0;i<il;i++){holesPts[i]=this.holes[i].getTransformedSpacedPoints(divisions,this.bends)}return holesPts};THREE.Shape.prototype.extractAllPoints=function(divisions){return{shape:this.getTransformedPoints(divisions),holes:this.getPointsHoles(divisions)}};THREE.Shape.prototype.extractPoints=function(divisions){if(this.useSpacedPoints){return this.extractAllSpacedPoints(divisions);
}return this.extractAllPoints(divisions)};THREE.Shape.prototype.extractAllSpacedPoints=function(divisions){return{shape:this.getTransformedSpacedPoints(divisions),holes:this.getSpacedPointsHoles(divisions)}};THREE.Shape.Utils={removeHoles:function(contour,holes){var shape=contour.concat();var allpoints=shape.concat();var prevShapeVert,nextShapeVert,prevHoleVert,nextHoleVert,holeIndex,shapeIndex,shapeId,shapeGroup,h,h2,hole,shortest,d,p,pts1,pts2,tmpShape1,tmpShape2,tmpHole1,tmpHole2,verts=[];for(h=0;h<holes.length;h++){hole=holes[h];Array.prototype.push.apply(allpoints,hole);shortest=Number.POSITIVE_INFINITY;for(h2=0;h2<hole.length;h2++){pts1=hole[h2];var dist=[];for(p=0;p<shape.length;p++){pts2=shape[p];d=pts1.distanceToSquared(pts2);dist.push(d);if(d<shortest){shortest=d;holeIndex=h2;shapeIndex=p}}}prevShapeVert=shapeIndex-1>=0?shapeIndex-1:shape.length-1;prevHoleVert=holeIndex-1>=0?holeIndex-1:hole.length-1;var areaapts=[hole[holeIndex],shape[shapeIndex],shape[prevShapeVert]];var areaa=THREE.FontUtils.Triangulate.area(areaapts);var areabpts=[hole[holeIndex],hole[prevHoleVert],shape[shapeIndex]];var areab=THREE.FontUtils.Triangulate.area(areabpts);var shapeOffset=1;var holeOffset=-1;var oldShapeIndex=shapeIndex,oldHoleIndex=holeIndex;shapeIndex+=shapeOffset;holeIndex+=holeOffset;if(shapeIndex<0){shapeIndex+=shape.length}shapeIndex%=shape.length;if(holeIndex<0){holeIndex+=hole.length}holeIndex%=hole.length;prevShapeVert=shapeIndex-1>=0?shapeIndex-1:shape.length-1;prevHoleVert=holeIndex-1>=0?holeIndex-1:hole.length-1;areaapts=[hole[holeIndex],shape[shapeIndex],shape[prevShapeVert]];var areaa2=THREE.FontUtils.Triangulate.area(areaapts);areabpts=[hole[holeIndex],hole[prevHoleVert],shape[shapeIndex]];var areab2=THREE.FontUtils.Triangulate.area(areabpts);if(areaa+areab>areaa2+areab2){shapeIndex=oldShapeIndex;holeIndex=oldHoleIndex;if(shapeIndex<0){shapeIndex+=shape.length}shapeIndex%=shape.length;if(holeIndex<0){holeIndex+=hole.length}holeIndex%=hole.length;prevShapeVert=shapeIndex-1>=0?shapeIndex-1:shape.length-1;prevHoleVert=holeIndex-1>=0?holeIndex-1:hole.length-1}else{}tmpShape1=shape.slice(0,shapeIndex);tmpShape2=shape.slice(shapeIndex);tmpHole1=hole.slice(holeIndex);tmpHole2=hole.slice(0,holeIndex);var trianglea=[hole[holeIndex],shape[shapeIndex],shape[prevShapeVert]];var triangleb=[hole[holeIndex],hole[prevHoleVert],shape[shapeIndex]];verts.push(trianglea);verts.push(triangleb);shape=tmpShape1.concat(tmpHole1).concat(tmpHole2).concat(tmpShape2)}return{shape:shape,isolatedPts:verts,allpoints:allpoints}},triangulateShape:function(contour,holes){var shapeWithoutHoles=THREE.Shape.Utils.removeHoles(contour,holes);var shape=shapeWithoutHoles.shape,allpoints=shapeWithoutHoles.allpoints,isolatedPts=shapeWithoutHoles.isolatedPts;var triangles=THREE.FontUtils.Triangulate(shape,false);var i,il,f,face,key,index,allPointsMap={},isolatedPointsMap={};for(i=0,il=allpoints.length;i<il;i++){key=allpoints[i].x+":"+allpoints[i].y;if(allPointsMap[key]!==undefined){console.log("Duplicate point",key)}allPointsMap[key]=i}for(i=0,il=triangles.length;i<il;i++){face=triangles[i];for(f=0;f<3;f++){key=face[f].x+":"+face[f].y;index=allPointsMap[key];if(index!==undefined){face[f]=index}}}for(i=0,il=isolatedPts.length;i<il;i++){face=isolatedPts[i];for(f=0;f<3;f++){key=face[f].x+":"+face[f].y;index=allPointsMap[key];if(index!==undefined){face[f]=index}}}return triangles.concat(isolatedPts)},isClockWise:function(pts){return THREE.FontUtils.Triangulate.area(pts)<0},b2p0:function(t,p){var k=1-t;return k*k*p},b2p1:function(t,p){return 2*(1-t)*t*p},b2p2:function(t,p){return t*t*p},b2:function(t,p0,p1,p2){return this.b2p0(t,p0)+this.b2p1(t,p1)+this.b2p2(t,p2)},b3p0:function(t,p){var k=1-t;return k*k*k*p},b3p1:function(t,p){var k=1-t;return 3*k*k*t*p},b3p2:function(t,p){var k=1-t;return 3*k*t*t*p},b3p3:function(t,p){return t*t*t*p},b3:function(t,p0,p1,p2,p3){return this.b3p0(t,p0)+this.b3p1(t,p1)+this.b3p2(t,p2)+this.b3p3(t,p3)}};THREE.LineCurve=function(v1,v2){this.v1=v1;this.v2=v2};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(t){var point=this.v2.clone().sub(this.v1);point.multiplyScalar(t).add(this.v1);return point};THREE.LineCurve.prototype.getPointAt=function(u){return this.getPoint(u)};THREE.LineCurve.prototype.getTangent=function(t){var tangent=this.v2.clone().sub(this.v1);return tangent.normalize()};THREE.QuadraticBezierCurve=function(v0,v1,v2){this.v0=v0;this.v1=v1;this.v2=v2};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var tx,ty;tx=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x);ty=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(tx,ty)};THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var tx,ty;tx=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.x,this.v1.x,this.v2.x);ty=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.y,this.v1.y,this.v2.y);var tangent=new THREE.Vector2(tx,ty);tangent.normalize();return tangent};THREE.CubicBezierCurve=function(v0,v1,v2,v3){this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(t){var tx,ty;tx=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x);ty=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(tx,ty)};THREE.CubicBezierCurve.prototype.getTangent=function(t){var tx,ty;tx=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x);ty=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var tangent=new THREE.Vector2(tx,ty);tangent.normalize();return tangent};THREE.SplineCurve=function(points){this.points=points==undefined?[]:points};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(t){var v=new THREE.Vector2;var c=[];var points=this.points,point,intPoint,weight;point=(points.length-1)*t;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint==0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>points.length-2?points.length-1:intPoint+1;c[3]=intPoint>points.length-3?points.length-1:intPoint+2;v.x=THREE.Curve.Utils.interpolate(points[c[0]].x,points[c[1]].x,points[c[2]].x,points[c[3]].x,weight);v.y=THREE.Curve.Utils.interpolate(points[c[0]].y,points[c[1]].y,points[c[2]].y,points[c[3]].y,weight);return v};THREE.EllipseCurve=function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise){this.aX=aX;this.aY=aY;this.xRadius=xRadius;this.yRadius=yRadius;this.aStartAngle=aStartAngle;this.aEndAngle=aEndAngle;this.aClockwise=aClockwise};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(t){var angle;var deltaAngle=this.aEndAngle-this.aStartAngle;if(deltaAngle<0)deltaAngle+=Math.PI*2;if(deltaAngle>Math.PI*2)deltaAngle-=Math.PI*2;if(this.aClockwise===true){angle=this.aEndAngle+(1-t)*(Math.PI*2-deltaAngle)}else{angle=this.aStartAngle+t*deltaAngle}var tx=this.aX+this.xRadius*Math.cos(angle);var ty=this.aY+this.yRadius*Math.sin(angle);return new THREE.Vector2(tx,ty)};THREE.ArcCurve=function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){THREE.EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.LineCurve3=THREE.Curve.create(function(v1,v2){this.v1=v1;this.v2=v2},function(t){var r=new THREE.Vector3;r.subVectors(this.v2,this.v1);r.multiplyScalar(t);r.add(this.v1);return r});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(v0,v1,v2){this.v0=v0;this.v1=v1;this.v2=v2},function(t){var tx,ty,tz;tx=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x);ty=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y);tz=THREE.Shape.Utils.b2(t,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(tx,ty,tz)});THREE.CubicBezierCurve3=THREE.Curve.create(function(v0,v1,v2,v3){this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3},function(t){var tx,ty,tz;tx=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x);ty=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y);tz=THREE.Shape.Utils.b3(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(tx,ty,tz)});THREE.SplineCurve3=THREE.Curve.create(function(points){this.points=points==undefined?[]:points},function(t){var v=new THREE.Vector3;var c=[];var points=this.points,point,intPoint,weight;point=(points.length-1)*t;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint==0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>points.length-2?points.length-1:intPoint+1;c[3]=intPoint>points.length-3?points.length-1:intPoint+2;var pt0=points[c[0]],pt1=points[c[1]],pt2=points[c[2]],pt3=points[c[3]];v.x=THREE.Curve.Utils.interpolate(pt0.x,pt1.x,pt2.x,pt3.x,weight);v.y=THREE.Curve.Utils.interpolate(pt0.y,pt1.y,pt2.y,pt3.y,weight);v.z=THREE.Curve.Utils.interpolate(pt0.z,pt1.z,pt2.z,pt3.z,weight);return v});THREE.ClosedSplineCurve3=THREE.Curve.create(function(points){this.points=points==undefined?[]:points},function(t){var v=new THREE.Vector3;var c=[];var points=this.points,point,intPoint,weight;point=(points.length-0)*t;intPoint=Math.floor(point);weight=point-intPoint;intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/points.length)+1)*points.length;c[0]=(intPoint-1)%points.length;c[1]=intPoint%points.length;c[2]=(intPoint+1)%points.length;c[3]=(intPoint+2)%points.length;v.x=THREE.Curve.Utils.interpolate(points[c[0]].x,points[c[1]].x,points[c[2]].x,points[c[3]].x,weight);v.y=THREE.Curve.Utils.interpolate(points[c[0]].y,points[c[1]].y,points[c[2]].y,points[c[3]].y,weight);v.z=THREE.Curve.Utils.interpolate(points[c[0]].z,points[c[1]].z,points[c[2]].z,points[c[3]].z,weight);return v});THREE.AnimationHandler=function(){var playing=[];var library={};var that={};that.update=function(deltaTimeMS){for(var i=0;i<playing.length;i++)playing[i].update(deltaTimeMS)};that.addToUpdate=function(animation){if(playing.indexOf(animation)===-1)playing.push(animation)};that.removeFromUpdate=function(animation){var index=playing.indexOf(animation);if(index!==-1)playing.splice(index,1)};that.add=function(data){if(library[data.name]!==undefined)console.log("THREE.AnimationHandler.add: Warning! "+data.name+" already exists in library. Overwriting.");library[data.name]=data;initData(data)};that.get=function(name){if(typeof name==="string"){if(library[name]){return library[name]}else{console.log("THREE.AnimationHandler.get: Couldn't find animation "+name);return null}}else{}};that.parse=function(root){var hierarchy=[];if(root instanceof THREE.SkinnedMesh){for(var b=0;b<root.bones.length;b++){hierarchy.push(root.bones[b])}}else{parseRecurseHierarchy(root,hierarchy)}return hierarchy};var parseRecurseHierarchy=function(root,hierarchy){hierarchy.push(root);for(var c=0;c<root.children.length;c++)parseRecurseHierarchy(root.children[c],hierarchy)};var initData=function(data){if(data.initialized===true)return;for(var h=0;h<data.hierarchy.length;h++){for(var k=0;k<data.hierarchy[h].keys.length;k++){if(data.hierarchy[h].keys[k].time<0)data.hierarchy[h].keys[k].time=0;if(data.hierarchy[h].keys[k].rot!==undefined&&!(data.hierarchy[h].keys[k].rot instanceof THREE.Quaternion)){var quat=data.hierarchy[h].keys[k].rot;data.hierarchy[h].keys[k].rot=new THREE.Quaternion(quat[0],quat[1],quat[2],quat[3])}}if(data.hierarchy[h].keys.length&&data.hierarchy[h].keys[0].morphTargets!==undefined){var usedMorphTargets={};for(var k=0;k<data.hierarchy[h].keys.length;k++){for(var m=0;m<data.hierarchy[h].keys[k].morphTargets.length;m++){var morphTargetName=data.hierarchy[h].keys[k].morphTargets[m];usedMorphTargets[morphTargetName]=-1}}data.hierarchy[h].usedMorphTargets=usedMorphTargets;for(var k=0;k<data.hierarchy[h].keys.length;k++){var influences={};for(var morphTargetName in usedMorphTargets){for(var m=0;m<data.hierarchy[h].keys[k].morphTargets.length;m++){if(data.hierarchy[h].keys[k].morphTargets[m]===morphTargetName){influences[morphTargetName]=data.hierarchy[h].keys[k].morphTargetsInfluences[m];break}}if(m===data.hierarchy[h].keys[k].morphTargets.length){influences[morphTargetName]=0}}data.hierarchy[h].keys[k].morphTargetsInfluences=influences}}for(var k=1;k<data.hierarchy[h].keys.length;k++){if(data.hierarchy[h].keys[k].time===data.hierarchy[h].keys[k-1].time){data.hierarchy[h].keys.splice(k,1);k--}}for(var k=0;k<data.hierarchy[h].keys.length;k++){data.hierarchy[h].keys[k].index=k}}var lengthInFrames=parseInt(data.length*data.fps,10);data.JIT={};data.JIT.hierarchy=[];for(var h=0;h<data.hierarchy.length;h++)data.JIT.hierarchy.push(new Array(lengthInFrames));data.initialized=true};that.LINEAR=0;that.CATMULLROM=1;that.CATMULLROM_FORWARD=2;return that}();THREE.Animation=function(root,name,interpolationType){this.root=root;this.data=THREE.AnimationHandler.get(name);this.hierarchy=THREE.AnimationHandler.parse(root);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.isPaused=true;this.loop=true;this.interpolationType=interpolationType!==undefined?interpolationType:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};THREE.Animation.prototype.play=function(loop,startTimeMS){if(this.isPlaying===false){this.isPlaying=true;this.loop=loop!==undefined?loop:true;this.currentTime=startTimeMS!==undefined?startTimeMS:0;var h,hl=this.hierarchy.length,object;for(h=0;h<hl;h++){object=this.hierarchy[h];object.matrixAutoUpdate=true;if(object.animationCache===undefined){object.animationCache={};object.animationCache.prevKey={pos:0,rot:0,scl:0};object.animationCache.nextKey={pos:0,rot:0,scl:0};object.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix}var prevKey=object.animationCache.prevKey;var nextKey=object.animationCache.nextKey;prevKey.pos=this.data.hierarchy[h].keys[0];prevKey.rot=this.data.hierarchy[h].keys[0];prevKey.scl=this.data.hierarchy[h].keys[0];nextKey.pos=this.getNextKeyWith("pos",h,1);nextKey.rot=this.getNextKeyWith("rot",h,1);nextKey.scl=this.getNextKeyWith("scl",h,1)}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){if(this.isPaused===true){THREE.AnimationHandler.addToUpdate(this)}else{THREE.AnimationHandler.removeFromUpdate(this)}this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.update=function(deltaTimeMS){if(this.isPlaying===false)return;var types=["pos","rot","scl"];var type;var scale;var vector;var prevXYZ,nextXYZ;var prevKey,nextKey;var object;var animationCache;var frame;var JIThierarchy=this.data.JIT.hierarchy;var currentTime,unloopedCurrentTime;var currentPoint,forwardPoint,angle;this.currentTime+=deltaTimeMS*this.timeScale;unloopedCurrentTime=this.currentTime;currentTime=this.currentTime=this.currentTime%this.data.length;frame=parseInt(Math.min(currentTime*this.data.fps,this.data.length*this.data.fps),10);for(var h=0,hl=this.hierarchy.length;h<hl;h++){object=this.hierarchy[h];animationCache=object.animationCache;for(var t=0;t<3;t++){type=types[t];prevKey=animationCache.prevKey[type];nextKey=animationCache.nextKey[type];if(nextKey.time<=unloopedCurrentTime){if(currentTime<unloopedCurrentTime){if(this.loop){prevKey=this.data.hierarchy[h].keys[0];nextKey=this.getNextKeyWith(type,h,1);while(nextKey.time<currentTime){prevKey=nextKey;nextKey=this.getNextKeyWith(type,h,nextKey.index+1)}}else{this.stop();return}}else{do{prevKey=nextKey;nextKey=this.getNextKeyWith(type,h,nextKey.index+1)}while(nextKey.time<currentTime)}animationCache.prevKey[type]=prevKey;animationCache.nextKey[type]=nextKey}object.matrixAutoUpdate=true;object.matrixWorldNeedsUpdate=true;scale=(currentTime-prevKey.time)/(nextKey.time-prevKey.time);prevXYZ=prevKey[type];nextXYZ=nextKey[type];if(scale<0||scale>1){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+scale+" on bone "+h);scale=scale<0?0:1}if(type==="pos"){vector=object.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR){vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale;vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale;vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",h,prevKey.index-1)["pos"];this.points[1]=prevXYZ;this.points[2]=nextXYZ;this.points[3]=this.getNextKeyWith("pos",h,nextKey.index+1)["pos"];scale=scale*.33+.33;currentPoint=this.interpolateCatmullRom(this.points,scale);vector.x=currentPoint[0];vector.y=currentPoint[1];vector.z=currentPoint[2];if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){forwardPoint=this.interpolateCatmullRom(this.points,scale*1.01);this.target.set(forwardPoint[0],forwardPoint[1],forwardPoint[2]);this.target.sub(vector);this.target.y=0;this.target.normalize();angle=Math.atan2(this.target.x,this.target.z);object.rotation.set(0,angle,0)}}}else if(type==="rot"){THREE.Quaternion.slerp(prevXYZ,nextXYZ,object.quaternion,scale)}else if(type==="scl"){vector=object.scale;vector.x=prevXYZ[0]+(nextXYZ[0]-prevXYZ[0])*scale;vector.y=prevXYZ[1]+(nextXYZ[1]-prevXYZ[1])*scale;vector.z=prevXYZ[2]+(nextXYZ[2]-prevXYZ[2])*scale}}}};THREE.Animation.prototype.interpolateCatmullRom=function(points,scale){var c=[],v3=[],point,intPoint,weight,w2,w3,pa,pb,pc,pd;point=(points.length-1)*scale;intPoint=Math.floor(point);weight=point-intPoint;c[0]=intPoint===0?intPoint:intPoint-1;c[1]=intPoint;c[2]=intPoint>points.length-2?intPoint:intPoint+1;c[3]=intPoint>points.length-3?intPoint:intPoint+2;pa=points[c[0]];pb=points[c[1]];pc=points[c[2]];pd=points[c[3]];w2=weight*weight;w3=weight*w2;v3[0]=this.interpolate(pa[0],pb[0],pc[0],pd[0],weight,w2,w3);v3[1]=this.interpolate(pa[1],pb[1],pc[1],pd[1],weight,w2,w3);v3[2]=this.interpolate(pa[2],pb[2],pc[2],pd[2],weight,w2,w3);return v3};THREE.Animation.prototype.interpolate=function(p0,p1,p2,p3,t,t2,t3){var v0=(p2-p0)*.5,v1=(p3-p1)*.5;return(2*(p1-p2)+v0+v1)*t3+(-3*(p1-p2)-2*v0-v1)*t2+v0*t+p1};THREE.Animation.prototype.getNextKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){key=key<keys.length-1?key:keys.length-1}else{key=key%keys.length}for(;key<keys.length;key++){if(keys[key][type]!==undefined){return keys[key]}}return this.data.hierarchy[h].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(type,h,key){var keys=this.data.hierarchy[h].keys;if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){key=key>0?key:0}else{key=key>=0?key:key+keys.length}for(;key>=0;key--){if(keys[key][type]!==undefined){return keys[key]}}return this.data.hierarchy[h].keys[keys.length-1]};THREE.KeyFrameAnimation=function(root,data,JITCompile){this.root=root;this.data=THREE.AnimationHandler.get(data);this.hierarchy=THREE.AnimationHandler.parse(root);this.currentTime=0;this.timeScale=.001;this.isPlaying=false;this.isPaused=true;this.loop=true;this.JITCompile=JITCompile!==undefined?JITCompile:true;for(var h=0,hl=this.hierarchy.length;h<hl;h++){var keys=this.data.hierarchy[h].keys,sids=this.data.hierarchy[h].sids,obj=this.hierarchy[h];if(keys.length&&sids){for(var s=0;s<sids.length;s++){var sid=sids[s],next=this.getNextKeyWith(sid,h,0);if(next){next.apply(sid)}}obj.matrixAutoUpdate=false;this.data.hierarchy[h].node.updateMatrix();obj.matrixWorldNeedsUpdate=true}}};THREE.KeyFrameAnimation.prototype.play=function(loop,startTimeMS){if(!this.isPlaying){this.isPlaying=true;this.loop=loop!==undefined?loop:true;this.currentTime=startTimeMS!==undefined?startTimeMS:0;this.startTimeMs=startTimeMS;this.startTime=1e7;this.endTime=-this.startTime;var h,hl=this.hierarchy.length,object,node;for(h=0;h<hl;h++){object=this.hierarchy[h];node=this.data.hierarchy[h];if(node.animationCache===undefined){node.animationCache={};node.animationCache.prevKey=null;node.animationCache.nextKey=null;node.animationCache.originalMatrix=object instanceof THREE.Bone?object.skinMatrix:object.matrix}var keys=this.data.hierarchy[h].keys;if(keys.length){node.animationCache.prevKey=keys[0];node.animationCache.nextKey=keys[1];this.startTime=Math.min(keys[0].time,this.startTime);this.endTime=Math.max(keys[keys.length-1].time,this.endTime)}}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){if(this.isPaused){THREE.AnimationHandler.addToUpdate(this)}else{THREE.AnimationHandler.removeFromUpdate(this)}this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=false;this.isPaused=false;THREE.AnimationHandler.removeFromUpdate(this);for(var h=0;h<this.data.hierarchy.length;h++){var obj=this.hierarchy[h];var node=this.data.hierarchy[h];if(node.animationCache!==undefined){var original=node.animationCache.originalMatrix;if(obj instanceof THREE.Bone){original.copy(obj.skinMatrix);obj.skinMatrix=original}else{original.copy(obj.matrix);obj.matrix=original}delete node.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(deltaTimeMS){if(!this.isPlaying)return;var prevKey,nextKey;var object;var node;var frame;var JIThierarchy=this.data.JIT.hierarchy;var currentTime,unloopedCurrentTime;var looped;this.currentTime+=deltaTimeMS*this.timeScale;unloopedCurrentTime=this.currentTime;currentTime=this.currentTime=this.currentTime%this.data.length;if(currentTime<this.startTimeMs){currentTime=this.currentTime=this.startTimeMs+currentTime}frame=parseInt(Math.min(currentTime*this.data.fps,this.data.length*this.data.fps),10);looped=currentTime<unloopedCurrentTime;if(looped&&!this.loop){for(var h=0,hl=this.hierarchy.length;h<hl;h++){var keys=this.data.hierarchy[h].keys,sids=this.data.hierarchy[h].sids,end=keys.length-1,obj=this.hierarchy[h];if(keys.length){for(var s=0;s<sids.length;s++){var sid=sids[s],prev=this.getPrevKeyWith(sid,h,end);if(prev){prev.apply(sid)}}this.data.hierarchy[h].node.updateMatrix();obj.matrixWorldNeedsUpdate=true}}this.stop();return}if(currentTime<this.startTime){return}for(var h=0,hl=this.hierarchy.length;h<hl;h++){object=this.hierarchy[h];node=this.data.hierarchy[h];var keys=node.keys,animationCache=node.animationCache;if(this.JITCompile&&JIThierarchy[h][frame]!==undefined){if(object instanceof THREE.Bone){object.skinMatrix=JIThierarchy[h][frame];object.matrixWorldNeedsUpdate=false}else{object.matrix=JIThierarchy[h][frame];object.matrixWorldNeedsUpdate=true}}else if(keys.length){if(this.JITCompile&&animationCache){if(object instanceof THREE.Bone){object.skinMatrix=animationCache.originalMatrix}else{object.matrix=animationCache.originalMatrix}}prevKey=animationCache.prevKey;nextKey=animationCache.nextKey;if(prevKey&&nextKey){if(nextKey.time<=unloopedCurrentTime){if(looped&&this.loop){prevKey=keys[0];nextKey=keys[1];while(nextKey.time<currentTime){prevKey=nextKey;nextKey=keys[prevKey.index+1]}}else if(!looped){var lastIndex=keys.length-1;while(nextKey.time<currentTime&&nextKey.index!==lastIndex){prevKey=nextKey;nextKey=keys[prevKey.index+1]}}animationCache.prevKey=prevKey;animationCache.nextKey=nextKey}if(nextKey.time>=currentTime)prevKey.interpolate(nextKey,currentTime);else prevKey.interpolate(nextKey,nextKey.time)}this.data.hierarchy[h].node.updateMatrix();object.matrixWorldNeedsUpdate=true}}if(this.JITCompile){if(JIThierarchy[0][frame]===undefined){this.hierarchy[0].updateMatrixWorld(true);for(var h=0;h<this.hierarchy.length;h++){if(this.hierarchy[h]instanceof THREE.Bone){JIThierarchy[h][frame]=this.hierarchy[h].skinMatrix.clone()}else{JIThierarchy[h][frame]=this.hierarchy[h].matrix.clone()}}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;key=key%keys.length;for(;key<keys.length;key++){if(keys[key].hasTarget(sid)){return keys[key]}}return keys[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(sid,h,key){var keys=this.data.hierarchy[h].keys;key=key>=0?key:key+keys.length;for(;key>=0;key--){if(keys[key].hasTarget(sid)){return keys[key]}}return keys[keys.length-1]};THREE.CubeCamera=function(near,far,cubeResolution){THREE.Object3D.call(this);var fov=90,aspect=1;var cameraPX=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPX.up.set(0,-1,0);cameraPX.lookAt(new THREE.Vector3(1,0,0));this.add(cameraPX);var cameraNX=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNX.up.set(0,-1,0);cameraNX.lookAt(new THREE.Vector3(-1,0,0));this.add(cameraNX);var cameraPY=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPY.up.set(0,0,1);cameraPY.lookAt(new THREE.Vector3(0,1,0));this.add(cameraPY);var cameraNY=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNY.up.set(0,0,-1);cameraNY.lookAt(new THREE.Vector3(0,-1,0));this.add(cameraNY);var cameraPZ=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new THREE.Vector3(0,0,1));this.add(cameraPZ);var cameraNZ=new THREE.PerspectiveCamera(fov,aspect,near,far);cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new THREE.Vector3(0,0,-1));this.add(cameraNZ);this.renderTarget=new THREE.WebGLRenderTargetCube(cubeResolution,cubeResolution,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(renderer,scene){var renderTarget=this.renderTarget;var generateMipmaps=renderTarget.generateMipmaps;renderTarget.generateMipmaps=false;renderTarget.activeCubeFace=0;renderer.render(scene,cameraPX,renderTarget);renderTarget.activeCubeFace=1;renderer.render(scene,cameraNX,renderTarget);renderTarget.activeCubeFace=2;renderer.render(scene,cameraPY,renderTarget);renderTarget.activeCubeFace=3;renderer.render(scene,cameraNY,renderTarget);renderTarget.activeCubeFace=4;renderer.render(scene,cameraPZ,renderTarget);renderTarget.generateMipmaps=generateMipmaps;renderTarget.activeCubeFace=5;renderer.render(scene,cameraNZ,renderTarget)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(width,height,fov,near,far,orthoNear,orthoFar){THREE.Camera.call(this);this.fov=fov;this.left=-width/2;this.right=width/2;this.top=height/2;this.bottom=-height/2;this.cameraO=new THREE.OrthographicCamera(width/-2,width/2,height/2,height/-2,orthoNear,orthoFar);this.cameraP=new THREE.PerspectiveCamera(fov,width/height,near,far);this.zoom=1;this.toPerspective();var aspect=width/height};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=true;this.inOrthographicMode=false};THREE.CombinedCamera.prototype.toOrthographic=function(){var fov=this.fov;var aspect=this.cameraP.aspect;var near=this.cameraP.near;var far=this.cameraP.far;var hyperfocus=(near+far)/2;var halfHeight=Math.tan(fov/2)*hyperfocus;var planeHeight=2*halfHeight;var planeWidth=planeHeight*aspect;var halfWidth=planeWidth/2;halfHeight/=this.zoom;halfWidth/=this.zoom;this.cameraO.left=-halfWidth;this.cameraO.right=halfWidth;this.cameraO.top=halfHeight;this.cameraO.bottom=-halfHeight;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=false;this.inOrthographicMode=true};THREE.CombinedCamera.prototype.setSize=function(width,height){this.cameraP.aspect=width/height;this.left=-width/2;this.right=width/2;this.top=height/2;this.bottom=-height/2};THREE.CombinedCamera.prototype.setFov=function(fov){this.fov=fov;if(this.inPerspectiveMode){this.toPerspective()}else{this.toOrthographic()}};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){if(this.inPerspectiveMode){this.toPerspective()}else{this.toPerspective();this.toOrthographic()}};THREE.CombinedCamera.prototype.setLens=function(focalLength,frameHeight){if(frameHeight===undefined)frameHeight=24;var fov=2*THREE.Math.radToDeg(Math.atan(frameHeight/(focalLength*2)));this.setFov(fov);return fov};THREE.CombinedCamera.prototype.setZoom=function(zoom){this.zoom=zoom;if(this.inPerspectiveMode){this.toPerspective()}else{this.toOrthographic()}};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CircleGeometry=function(radius,segments,thetaStart,thetaLength){THREE.Geometry.call(this);this.radius=radius=radius||50;this.segments=segments=segments!==undefined?Math.max(3,segments):8;this.thetaStart=thetaStart=thetaStart!==undefined?thetaStart:0;this.thetaLength=thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;var i,uvs=[],center=new THREE.Vector3,centerUV=new THREE.Vector2(.5,.5);this.vertices.push(center);uvs.push(centerUV);for(i=0;i<=segments;i++){var vertex=new THREE.Vector3;var segment=thetaStart+i/segments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);this.vertices.push(vertex);uvs.push(new THREE.Vector2((vertex.x/radius+1)/2,(vertex.y/radius+1)/2))}var n=new THREE.Vector3(0,0,1);for(i=1;i<=segments;i++){var v1=i;var v2=i+1;var v3=0;this.faces.push(new THREE.Face3(v1,v2,v3,[n,n,n]));this.faceVertexUvs[0].push([uvs[i],uvs[i+1],centerUV])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(width,height,depth,widthSegments,heightSegments,depthSegments){THREE.Geometry.call(this);var scope=this;this.width=width;this.height=height;this.depth=depth;this.widthSegments=widthSegments||1;this.heightSegments=heightSegments||1;this.depthSegments=depthSegments||1;var width_half=this.width/2;var height_half=this.height/2;var depth_half=this.depth/2;buildPlane("z","y",-1,-1,this.depth,this.height,width_half,0);buildPlane("z","y",1,-1,this.depth,this.height,-width_half,1);buildPlane("x","z",1,1,this.width,this.depth,height_half,2);buildPlane("x","z",1,-1,this.width,this.depth,-height_half,3);buildPlane("x","y",1,-1,this.width,this.height,depth_half,4);buildPlane("x","y",-1,-1,this.width,this.height,-depth_half,5);function buildPlane(u,v,udir,vdir,width,height,depth,materialIndex){var w,ix,iy,gridX=scope.widthSegments,gridY=scope.heightSegments,width_half=width/2,height_half=height/2,offset=scope.vertices.length;if(u==="x"&&v==="y"||u==="y"&&v==="x"){w="z"}else if(u==="x"&&v==="z"||u==="z"&&v==="x"){w="y";gridY=scope.depthSegments}else if(u==="z"&&v==="y"||u==="y"&&v==="z"){w="x";gridX=scope.depthSegments}var gridX1=gridX+1,gridY1=gridY+1,segment_width=width/gridX,segment_height=height/gridY,normal=new THREE.Vector3;normal[w]=depth>0?1:-1;for(iy=0;iy<gridY1;iy++){for(ix=0;ix<gridX1;ix++){var vector=new THREE.Vector3;vector[u]=(ix*segment_width-width_half)*udir;vector[v]=(iy*segment_height-height_half)*vdir;vector[w]=depth;scope.vertices.push(vector);
}}for(iy=0;iy<gridY;iy++){for(ix=0;ix<gridX;ix++){var a=ix+gridX1*iy;var b=ix+gridX1*(iy+1);var c=ix+1+gridX1*(iy+1);var d=ix+1+gridX1*iy;var uva=new THREE.Vector2(ix/gridX,1-iy/gridY);var uvb=new THREE.Vector2(ix/gridX,1-(iy+1)/gridY);var uvc=new THREE.Vector2((ix+1)/gridX,1-(iy+1)/gridY);var uvd=new THREE.Vector2((ix+1)/gridX,1-iy/gridY);var face=new THREE.Face3(a+offset,b+offset,d+offset);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());face.materialIndex=materialIndex;scope.faces.push(face);scope.faceVertexUvs[0].push([uva,uvb,uvd]);face=new THREE.Face3(b+offset,c+offset,d+offset);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());face.materialIndex=materialIndex;scope.faces.push(face);scope.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()])}}}this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded){THREE.Geometry.call(this);this.radiusTop=radiusTop=radiusTop!==undefined?radiusTop:20;this.radiusBottom=radiusBottom=radiusBottom!==undefined?radiusBottom:20;this.height=height=height!==undefined?height:100;this.radialSegments=radialSegments=radialSegments||8;this.heightSegments=heightSegments=heightSegments||1;this.openEnded=openEnded=openEnded!==undefined?openEnded:false;var heightHalf=height/2;var x,y,vertices=[],uvs=[];for(y=0;y<=heightSegments;y++){var verticesRow=[];var uvsRow=[];var v=y/heightSegments;var radius=v*(radiusBottom-radiusTop)+radiusTop;for(x=0;x<=radialSegments;x++){var u=x/radialSegments;var vertex=new THREE.Vector3;vertex.x=radius*Math.sin(u*Math.PI*2);vertex.y=-v*height+heightHalf;vertex.z=radius*Math.cos(u*Math.PI*2);this.vertices.push(vertex);verticesRow.push(this.vertices.length-1);uvsRow.push(new THREE.Vector2(u,1-v))}vertices.push(verticesRow);uvs.push(uvsRow)}var tanTheta=(radiusBottom-radiusTop)/height;var na,nb;for(x=0;x<radialSegments;x++){if(radiusTop!==0){na=this.vertices[vertices[0][x]].clone();nb=this.vertices[vertices[0][x+1]].clone()}else{na=this.vertices[vertices[1][x]].clone();nb=this.vertices[vertices[1][x+1]].clone()}na.setY(Math.sqrt(na.x*na.x+na.z*na.z)*tanTheta).normalize();nb.setY(Math.sqrt(nb.x*nb.x+nb.z*nb.z)*tanTheta).normalize();for(y=0;y<heightSegments;y++){var v1=vertices[y][x];var v2=vertices[y+1][x];var v3=vertices[y+1][x+1];var v4=vertices[y][x+1];var n1=na.clone();var n2=na.clone();var n3=nb.clone();var n4=nb.clone();var uv1=uvs[y][x].clone();var uv2=uvs[y+1][x].clone();var uv3=uvs[y+1][x+1].clone();var uv4=uvs[y][x+1].clone();this.faces.push(new THREE.Face3(v1,v2,v4,[n1,n2,n4]));this.faceVertexUvs[0].push([uv1,uv2,uv4]);this.faces.push(new THREE.Face3(v2,v3,v4,[n2,n3,n4]));this.faceVertexUvs[0].push([uv2,uv3,uv4])}}if(openEnded===false&&radiusTop>0){this.vertices.push(new THREE.Vector3(0,heightHalf,0));for(x=0;x<radialSegments;x++){var v1=vertices[0][x];var v2=vertices[0][x+1];var v3=this.vertices.length-1;var n1=new THREE.Vector3(0,1,0);var n2=new THREE.Vector3(0,1,0);var n3=new THREE.Vector3(0,1,0);var uv1=uvs[0][x].clone();var uv2=uvs[0][x+1].clone();var uv3=new THREE.Vector2(uv2.u,0);this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3]));this.faceVertexUvs[0].push([uv1,uv2,uv3])}}if(openEnded===false&&radiusBottom>0){this.vertices.push(new THREE.Vector3(0,-heightHalf,0));for(x=0;x<radialSegments;x++){var v1=vertices[y][x+1];var v2=vertices[y][x];var v3=this.vertices.length-1;var n1=new THREE.Vector3(0,-1,0);var n2=new THREE.Vector3(0,-1,0);var n3=new THREE.Vector3(0,-1,0);var uv1=uvs[y][x+1].clone();var uv2=uvs[y][x].clone();var uv3=new THREE.Vector2(uv2.u,1);this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3]));this.faceVertexUvs[0].push([uv1,uv2,uv3])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(shapes,options){if(typeof shapes==="undefined"){shapes=[];return}THREE.Geometry.call(this);shapes=shapes instanceof Array?shapes:[shapes];this.shapebb=shapes[shapes.length-1].getBoundingBox();this.addShapeList(shapes,options);this.computeCentroids();this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(shapes,options){var sl=shapes.length;for(var s=0;s<sl;s++){var shape=shapes[s];this.addShape(shape,options)}};THREE.ExtrudeGeometry.prototype.addShape=function(shape,options){var amount=options.amount!==undefined?options.amount:100;var bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;var bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;var bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;var bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;var curveSegments=options.curveSegments!==undefined?options.curveSegments:12;var steps=options.steps!==undefined?options.steps:1;var extrudePath=options.extrudePath;var extrudePts,extrudeByPath=false;var material=options.material;var extrudeMaterial=options.extrudeMaterial;var uvgen=options.UVGenerator!==undefined?options.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var shapebb=this.shapebb;var splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;splineTube=options.frames!==undefined?options.frames:new THREE.TubeGeometry.FrenetFrames(extrudePath,steps,false);binormal=new THREE.Vector3;normal=new THREE.Vector3;position2=new THREE.Vector3}if(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0}var ahole,h,hl;var scope=this;var bevelPoints=[];var shapesOffset=this.vertices.length;var shapePoints=shape.extractPoints(curveSegments);var vertices=shapePoints.shape;var holes=shapePoints.holes;var reverse=!THREE.Shape.Utils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];if(THREE.Shape.Utils.isClockWise(ahole)){holes[h]=ahole.reverse()}}reverse=false}var faces=THREE.Shape.Utils.triangulateShape(vertices,holes);var contour=vertices;for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];vertices=vertices.concat(ahole)}function scalePt2(pt,vec,size){if(!vec)console.log("die");return vec.clone().multiplyScalar(size).add(pt)}var b,bs,t,z,vert,vlen=vertices.length,face,flen=faces.length,cont,clen=contour.length;var RAD_TO_DEGREES=180/Math.PI;function getBevelVec(pt_i,pt_j,pt_k){return getBevelVec2(pt_i,pt_j,pt_k)}function getBevelVec1(pt_i,pt_j,pt_k){var anglea=Math.atan2(pt_j.y-pt_i.y,pt_j.x-pt_i.x);var angleb=Math.atan2(pt_k.y-pt_i.y,pt_k.x-pt_i.x);if(anglea>angleb){angleb+=Math.PI*2}var anglec=(anglea+angleb)/2;var x=-Math.cos(anglec);var y=-Math.sin(anglec);var vec=new THREE.Vector2(x,y);return vec}function getBevelVec2(pt_i,pt_j,pt_k){var a=THREE.ExtrudeGeometry.__v1,b=THREE.ExtrudeGeometry.__v2,v_hat=THREE.ExtrudeGeometry.__v3,w_hat=THREE.ExtrudeGeometry.__v4,p=THREE.ExtrudeGeometry.__v5,q=THREE.ExtrudeGeometry.__v6,v,w,v_dot_w_hat,q_sub_p_dot_w_hat,s,intersection;a.set(pt_i.x-pt_j.x,pt_i.y-pt_j.y);b.set(pt_i.x-pt_k.x,pt_i.y-pt_k.y);v=a.normalize();w=b.normalize();v_hat.set(-v.y,v.x);w_hat.set(w.y,-w.x);p.copy(pt_i).add(v_hat);q.copy(pt_i).add(w_hat);if(p.equals(q)){return w_hat.clone()}p.copy(pt_j).add(v_hat);q.copy(pt_k).add(w_hat);v_dot_w_hat=v.dot(w_hat);q_sub_p_dot_w_hat=q.sub(p).dot(w_hat);if(v_dot_w_hat===0){console.log("Either infinite or no solutions!");if(q_sub_p_dot_w_hat===0){console.log("Its finite solutions.")}else{console.log("Too bad, no solutions.")}}s=q_sub_p_dot_w_hat/v_dot_w_hat;if(s<0){return getBevelVec1(pt_i,pt_j,pt_k)}intersection=v.multiplyScalar(s).add(p);return intersection.sub(pt_i).clone()}var contourMovements=[];for(var i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;var pt_i=contour[i];var pt_j=contour[j];var pt_k=contour[k];contourMovements[i]=getBevelVec(contour[i],contour[j],contour[k])}var holesMovements=[],oneHoleMovements,verticesMovements=contourMovements.concat();for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=[];for(i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;oneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k])}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements)}for(b=0;b<bevelSegments;b++){t=b/bevelSegments;z=bevelThickness*(1-t);bs=bevelSize*Math.sin(t*Math.PI/2);for(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z)}for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z)}}}bs=bevelSize;for(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0)}else{normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z)}}var s;for(s=1;s<=steps;s++){for(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,amount/steps*s)}else{normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z)}}}for(b=bevelSegments-1;b>=0;b--){t=b/bevelSegments;z=bevelThickness*(1-t);bs=bevelSize*Math.sin(t*Math.PI/2);for(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,amount+z)}for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,amount+z)}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z)}}}}buildLidFaces();buildSideFaces();function buildLidFaces(){if(bevelEnabled){var layer=0;var offset=vlen*layer;for(i=0;i<flen;i++){face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset,true)}layer=steps+bevelSegments*2;offset=vlen*layer;for(i=0;i<flen;i++){face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset,false)}}else{for(i=0;i<flen;i++){face=faces[i];f3(face[2],face[1],face[0],true)}for(i=0;i<flen;i++){face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps,false)}}}function buildSideFaces(){var layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];sidewalls(ahole,layeroffset);layeroffset+=ahole.length}}function sidewalls(contour,layeroffset){var j,k;i=contour.length;while(--i>=0){j=i;k=i-1;if(k<0)k=contour.length-1;var s=0,sl=steps+bevelSegments*2;for(s=0;s<sl;s++){var slen1=vlen*s;var slen2=vlen*(s+1);var a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d,contour,s,sl,j,k)}}}function v(x,y,z){scope.vertices.push(new THREE.Vector3(x,y,z))}function f3(a,b,c,isBottom){a+=shapesOffset;b+=shapesOffset;c+=shapesOffset;scope.faces.push(new THREE.Face3(a,b,c,null,null,material));var uvs=isBottom?uvgen.generateBottomUV(scope,shape,options,a,b,c):uvgen.generateTopUV(scope,shape,options,a,b,c);scope.faceVertexUvs[0].push(uvs)}function f4(a,b,c,d,wallContour,stepIndex,stepsLength,contourIndex1,contourIndex2){a+=shapesOffset;b+=shapesOffset;c+=shapesOffset;d+=shapesOffset;scope.faces.push(new THREE.Face3(a,b,d,null,null,extrudeMaterial));scope.faces.push(new THREE.Face3(b,c,d,null,null,extrudeMaterial));var uvs=uvgen.generateSideWallUV(scope,shape,wallContour,options,a,b,c,d,stepIndex,stepsLength,contourIndex1,contourIndex2);scope.faceVertexUvs[0].push([uvs[0],uvs[1],uvs[3]]);scope.faceVertexUvs[0].push([uvs[1],uvs[2],uvs[3]])}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC){var ax=geometry.vertices[indexA].x,ay=geometry.vertices[indexA].y,bx=geometry.vertices[indexB].x,by=geometry.vertices[indexB].y,cx=geometry.vertices[indexC].x,cy=geometry.vertices[indexC].y;return[new THREE.Vector2(ax,ay),new THREE.Vector2(bx,by),new THREE.Vector2(cx,cy)]},generateBottomUV:function(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC){return this.generateTopUV(geometry,extrudedShape,extrudeOptions,indexA,indexB,indexC)},generateSideWallUV:function(geometry,extrudedShape,wallContour,extrudeOptions,indexA,indexB,indexC,indexD,stepIndex,stepsLength,contourIndex1,contourIndex2){var ax=geometry.vertices[indexA].x,ay=geometry.vertices[indexA].y,az=geometry.vertices[indexA].z,bx=geometry.vertices[indexB].x,by=geometry.vertices[indexB].y,bz=geometry.vertices[indexB].z,cx=geometry.vertices[indexC].x,cy=geometry.vertices[indexC].y,cz=geometry.vertices[indexC].z,dx=geometry.vertices[indexD].x,dy=geometry.vertices[indexD].y,dz=geometry.vertices[indexD].z;if(Math.abs(ay-by)<.01){return[new THREE.Vector2(ax,1-az),new THREE.Vector2(bx,1-bz),new THREE.Vector2(cx,1-cz),new THREE.Vector2(dx,1-dz)]}else{return[new THREE.Vector2(ay,1-az),new THREE.Vector2(by,1-bz),new THREE.Vector2(cy,1-cz),new THREE.Vector2(dy,1-dz)]}}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(shapes,options){THREE.Geometry.call(this);if(shapes instanceof Array===false)shapes=[shapes];this.shapebb=shapes[shapes.length-1].getBoundingBox();this.addShapeList(shapes,options);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(shapes,options){for(var i=0,l=shapes.length;i<l;i++){this.addShape(shapes[i],options)}return this};THREE.ShapeGeometry.prototype.addShape=function(shape,options){if(options===undefined)options={};var curveSegments=options.curveSegments!==undefined?options.curveSegments:12;var material=options.material;var uvgen=options.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:options.UVGenerator;var shapebb=this.shapebb;var i,l,hole,s;var shapesOffset=this.vertices.length;var shapePoints=shape.extractPoints(curveSegments);var vertices=shapePoints.shape;var holes=shapePoints.holes;var reverse=!THREE.Shape.Utils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();for(i=0,l=holes.length;i<l;i++){hole=holes[i];if(THREE.Shape.Utils.isClockWise(hole)){holes[i]=hole.reverse()}}reverse=false}var faces=THREE.Shape.Utils.triangulateShape(vertices,holes);var contour=vertices;for(i=0,l=holes.length;i<l;i++){hole=holes[i];vertices=vertices.concat(hole)}var vert,vlen=vertices.length;var face,flen=faces.length;var cont,clen=contour.length;for(i=0;i<vlen;i++){vert=vertices[i];this.vertices.push(new THREE.Vector3(vert.x,vert.y,0))}for(i=0;i<flen;i++){face=faces[i];var a=face[0]+shapesOffset;var b=face[1]+shapesOffset;var c=face[2]+shapesOffset;this.faces.push(new THREE.Face3(a,b,c,null,null,material));this.faceVertexUvs[0].push(uvgen.generateBottomUV(this,shape,options,a,b,c))}};THREE.LatheGeometry=function(points,segments,phiStart,phiLength){THREE.Geometry.call(this);segments=segments||12;phiStart=phiStart||0;phiLength=phiLength||2*Math.PI;var inversePointLength=1/(points.length-1);var inverseSegments=1/segments;for(var i=0,il=segments;i<=il;i++){var phi=phiStart+i*inverseSegments*phiLength;var c=Math.cos(phi),s=Math.sin(phi);for(var j=0,jl=points.length;j<jl;j++){var pt=points[j];var vertex=new THREE.Vector3;vertex.x=c*pt.x-s*pt.y;vertex.y=s*pt.x+c*pt.y;vertex.z=pt.z;this.vertices.push(vertex)}}var np=points.length;for(var i=0,il=segments;i<il;i++){for(var j=0,jl=points.length-1;j<jl;j++){var base=j+np*i;var a=base;var b=base+np;var c=base+1+np;var d=base+1;var u0=i*inverseSegments;var v0=j*inversePointLength;var u1=u0+inverseSegments;var v1=v0+inversePointLength;this.faces.push(new THREE.Face3(a,b,d));this.faceVertexUvs[0].push([new THREE.Vector2(u0,v0),new THREE.Vector2(u1,v0),new THREE.Vector2(u0,v1)]);this.faces.push(new THREE.Face3(b,c,d));this.faceVertexUvs[0].push([new THREE.Vector2(u1,v0),new THREE.Vector2(u1,v1),new THREE.Vector2(u0,v1)])}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(width,height,widthSegments,heightSegments){THREE.Geometry.call(this);this.width=width;this.height=height;this.widthSegments=widthSegments||1;this.heightSegments=heightSegments||1;var ix,iz;var width_half=width/2;var height_half=height/2;var gridX=this.widthSegments;var gridZ=this.heightSegments;var gridX1=gridX+1;var gridZ1=gridZ+1;var segment_width=this.width/gridX;var segment_height=this.height/gridZ;var normal=new THREE.Vector3(0,0,1);for(iz=0;iz<gridZ1;iz++){for(ix=0;ix<gridX1;ix++){var x=ix*segment_width-width_half;var y=iz*segment_height-height_half;this.vertices.push(new THREE.Vector3(x,-y,0))}}for(iz=0;iz<gridZ;iz++){for(ix=0;ix<gridX;ix++){var a=ix+gridX1*iz;var b=ix+gridX1*(iz+1);var c=ix+1+gridX1*(iz+1);var d=ix+1+gridX1*iz;var uva=new THREE.Vector2(ix/gridX,1-iz/gridZ);var uvb=new THREE.Vector2(ix/gridX,1-(iz+1)/gridZ);var uvc=new THREE.Vector2((ix+1)/gridX,1-(iz+1)/gridZ);var uvd=new THREE.Vector2((ix+1)/gridX,1-iz/gridZ);var face=new THREE.Face3(a,b,d);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());this.faces.push(face);this.faceVertexUvs[0].push([uva,uvb,uvd]);face=new THREE.Face3(b,c,d);face.normal.copy(normal);face.vertexNormals.push(normal.clone(),normal.clone(),normal.clone());this.faces.push(face);this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()])}}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){THREE.Geometry.call(this);innerRadius=innerRadius||0;outerRadius=outerRadius||50;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;thetaSegments=thetaSegments!==undefined?Math.max(3,thetaSegments):8;phiSegments=phiSegments!==undefined?Math.max(3,phiSegments):8;var i,o,uvs=[],radius=innerRadius,radiusStep=(outerRadius-innerRadius)/phiSegments;for(i=0;i<=phiSegments;i++){for(o=0;o<=thetaSegments;o++){var vertex=new THREE.Vector3;var segment=thetaStart+o/thetaSegments*thetaLength;vertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);this.vertices.push(vertex);uvs.push(new THREE.Vector2((vertex.x/radius+1)/2,-(vertex.y/radius+1)/2+1))}radius+=radiusStep}var n=new THREE.Vector3(0,0,1);for(i=0;i<phiSegments;i++){var thetaSegment=i*thetaSegments;for(o=0;o<=thetaSegments;o++){var segment=o+thetaSegment;var v1=segment+i;var v2=segment+thetaSegments+i;var v3=segment+thetaSegments+1+i;this.faces.push(new THREE.Face3(v1,v2,v3,[n,n,n]));this.faceVertexUvs[0].push([uvs[v1],uvs[v2],uvs[v3]]);v1=segment+i;v2=segment+thetaSegments+1+i;v3=segment+1+i;this.faces.push(new THREE.Face3(v1,v2,v3,[n,n,n]));this.faceVertexUvs[0].push([uvs[v1],uvs[v2],uvs[v3]])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){THREE.Geometry.call(this);this.radius=radius=radius||50;this.widthSegments=widthSegments=Math.max(3,Math.floor(widthSegments)||8);this.heightSegments=heightSegments=Math.max(2,Math.floor(heightSegments)||6);this.phiStart=phiStart=phiStart!==undefined?phiStart:0;this.phiLength=phiLength=phiLength!==undefined?phiLength:Math.PI*2;this.thetaStart=thetaStart=thetaStart!==undefined?thetaStart:0;this.thetaLength=thetaLength=thetaLength!==undefined?thetaLength:Math.PI;var x,y,vertices=[],uvs=[];for(y=0;y<=heightSegments;y++){var verticesRow=[];var uvsRow=[];for(x=0;x<=widthSegments;x++){var u=x/widthSegments;var v=y/heightSegments;var vertex=new THREE.Vector3;vertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);this.vertices.push(vertex);verticesRow.push(this.vertices.length-1);uvsRow.push(new THREE.Vector2(u,1-v))}vertices.push(verticesRow);uvs.push(uvsRow)}for(y=0;y<this.heightSegments;y++){for(x=0;x<this.widthSegments;x++){var v1=vertices[y][x+1];var v2=vertices[y][x];var v3=vertices[y+1][x];var v4=vertices[y+1][x+1];var n1=this.vertices[v1].clone().normalize();var n2=this.vertices[v2].clone().normalize();var n3=this.vertices[v3].clone().normalize();var n4=this.vertices[v4].clone().normalize();var uv1=uvs[y][x+1].clone();var uv2=uvs[y][x].clone();var uv3=uvs[y+1][x].clone();var uv4=uvs[y+1][x+1].clone();if(Math.abs(this.vertices[v1].y)===this.radius){this.faces.push(new THREE.Face3(v1,v3,v4,[n1,n3,n4]));this.faceVertexUvs[0].push([uv1,uv3,uv4])}else if(Math.abs(this.vertices[v3].y)===this.radius){this.faces.push(new THREE.Face3(v1,v2,v3,[n1,n2,n3]));this.faceVertexUvs[0].push([uv1,uv2,uv3])}else{this.faces.push(new THREE.Face3(v1,v2,v4,[n1,n2,n4]));this.faceVertexUvs[0].push([uv1,uv2,uv4]);this.faces.push(new THREE.Face3(v2,v3,v4,[n2,n3,n4]));this.faceVertexUvs[0].push([uv2.clone(),uv3,uv4.clone()])}}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(text,parameters){parameters=parameters||{};var textShapes=THREE.FontUtils.generateShapes(text,parameters);parameters.amount=parameters.height!==undefined?parameters.height:50;if(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;THREE.ExtrudeGeometry.call(this,textShapes,parameters)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(radius,tube,radialSegments,tubularSegments,arc){THREE.Geometry.call(this);var scope=this;this.radius=radius||100;this.tube=tube||40;this.radialSegments=radialSegments||8;this.tubularSegments=tubularSegments||6;this.arc=arc||Math.PI*2;var center=new THREE.Vector3,uvs=[],normals=[];for(var j=0;j<=this.radialSegments;j++){for(var i=0;i<=this.tubularSegments;i++){var u=i/this.tubularSegments*this.arc;var v=j/this.radialSegments*Math.PI*2;center.x=this.radius*Math.cos(u);center.y=this.radius*Math.sin(u);var vertex=new THREE.Vector3;vertex.x=(this.radius+this.tube*Math.cos(v))*Math.cos(u);vertex.y=(this.radius+this.tube*Math.cos(v))*Math.sin(u);vertex.z=this.tube*Math.sin(v);this.vertices.push(vertex);uvs.push(new THREE.Vector2(i/this.tubularSegments,j/this.radialSegments));normals.push(vertex.clone().sub(center).normalize())}}for(var j=1;j<=this.radialSegments;j++){for(var i=1;i<=this.tubularSegments;i++){var a=(this.tubularSegments+1)*j+i-1;var b=(this.tubularSegments+1)*(j-1)+i-1;var c=(this.tubularSegments+1)*(j-1)+i;var d=(this.tubularSegments+1)*j+i;var face=new THREE.Face3(a,b,d,[normals[a],normals[b],normals[d]]);face.normal.add(normals[a]);face.normal.add(normals[b]);face.normal.add(normals[d]);face.normal.normalize();this.faces.push(face);this.faceVertexUvs[0].push([uvs[a].clone(),uvs[b].clone(),uvs[d].clone()]);face=new THREE.Face3(b,c,d,[normals[b],normals[c],normals[d]]);face.normal.add(normals[b]);face.normal.add(normals[c]);face.normal.add(normals[d]);face.normal.normalize();this.faces.push(face);this.faceVertexUvs[0].push([uvs[b].clone(),uvs[c].clone(),uvs[d].clone()])}}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(radius,tube,radialSegments,tubularSegments,p,q,heightScale){THREE.Geometry.call(this);var scope=this;this.radius=radius||100;this.tube=tube||40;this.radialSegments=radialSegments||64;this.tubularSegments=tubularSegments||8;this.p=p||2;this.q=q||3;this.heightScale=heightScale||1;this.grid=new Array(this.radialSegments);var tang=new THREE.Vector3;var n=new THREE.Vector3;var bitan=new THREE.Vector3;for(var i=0;i<this.radialSegments;++i){this.grid[i]=new Array(this.tubularSegments);var u=i/this.radialSegments*2*this.p*Math.PI;var p1=getPos(u,this.q,this.p,this.radius,this.heightScale);var p2=getPos(u+.01,this.q,this.p,this.radius,this.heightScale);tang.subVectors(p2,p1);n.addVectors(p2,p1);bitan.crossVectors(tang,n);n.crossVectors(bitan,tang);bitan.normalize();n.normalize();for(var j=0;j<this.tubularSegments;++j){var v=j/this.tubularSegments*2*Math.PI;var cx=-this.tube*Math.cos(v);var cy=this.tube*Math.sin(v);var pos=new THREE.Vector3;pos.x=p1.x+cx*n.x+cy*bitan.x;pos.y=p1.y+cx*n.y+cy*bitan.y;pos.z=p1.z+cx*n.z+cy*bitan.z;this.grid[i][j]=scope.vertices.push(pos)-1}}for(var i=0;i<this.radialSegments;++i){for(var j=0;j<this.tubularSegments;++j){var ip=(i+1)%this.radialSegments;var jp=(j+1)%this.tubularSegments;var a=this.grid[i][j];var b=this.grid[ip][j];var c=this.grid[ip][jp];var d=this.grid[i][jp];var uva=new THREE.Vector2(i/this.radialSegments,j/this.tubularSegments);var uvb=new THREE.Vector2((i+1)/this.radialSegments,j/this.tubularSegments);var uvc=new THREE.Vector2((i+1)/this.radialSegments,(j+1)/this.tubularSegments);var uvd=new THREE.Vector2(i/this.radialSegments,(j+1)/this.tubularSegments);this.faces.push(new THREE.Face3(a,b,d));this.faceVertexUvs[0].push([uva,uvb,uvd]);this.faces.push(new THREE.Face3(b,c,d));this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();function getPos(u,in_q,in_p,radius,heightScale){var cu=Math.cos(u);var su=Math.sin(u);var quOverP=in_q/in_p*u;var cs=Math.cos(quOverP);var tx=radius*(2+cs)*.5*cu;var ty=radius*(2+cs)*su*.5;var tz=heightScale*radius*Math.sin(quOverP)*.5;return new THREE.Vector3(tx,ty,tz)}};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(path,segments,radius,radialSegments,closed){THREE.Geometry.call(this);this.path=path;this.segments=segments||64;this.radius=radius||1;this.radialSegments=radialSegments||8;this.closed=closed||false;this.grid=[];var scope=this,tangent,normal,binormal,numpoints=this.segments+1,x,y,z,tx,ty,tz,u,v,cx,cy,pos,pos2=new THREE.Vector3,i,j,ip,jp,a,b,c,d,uva,uvb,uvc,uvd;var frames=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),tangents=frames.tangents,normals=frames.normals,binormals=frames.binormals;this.tangents=tangents;this.normals=normals;this.binormals=binormals;function vert(x,y,z){return scope.vertices.push(new THREE.Vector3(x,y,z))-1}for(i=0;i<numpoints;i++){this.grid[i]=[];u=i/(numpoints-1);pos=path.getPointAt(u);tangent=tangents[i];normal=normals[i];binormal=binormals[i];for(j=0;j<this.radialSegments;j++){v=j/this.radialSegments*2*Math.PI;cx=-this.radius*Math.cos(v);cy=this.radius*Math.sin(v);pos2.copy(pos);pos2.x+=cx*normal.x+cy*binormal.x;pos2.y+=cx*normal.y+cy*binormal.y;pos2.z+=cx*normal.z+cy*binormal.z;this.grid[i][j]=vert(pos2.x,pos2.y,pos2.z)}}for(i=0;i<this.segments;i++){for(j=0;j<this.radialSegments;j++){ip=this.closed?(i+1)%this.segments:i+1;jp=(j+1)%this.radialSegments;a=this.grid[i][j];b=this.grid[ip][j];c=this.grid[ip][jp];d=this.grid[i][jp];uva=new THREE.Vector2(i/this.segments,j/this.radialSegments);uvb=new THREE.Vector2((i+1)/this.segments,j/this.radialSegments);uvc=new THREE.Vector2((i+1)/this.segments,(j+1)/this.radialSegments);uvd=new THREE.Vector2(i/this.segments,(j+1)/this.radialSegments);this.faces.push(new THREE.Face3(a,b,d));this.faceVertexUvs[0].push([uva,uvb,uvd]);this.faces.push(new THREE.Face3(b,c,d));this.faceVertexUvs[0].push([uvb.clone(),uvc,uvd.clone()])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(path,segments,closed){var tangent=new THREE.Vector3,normal=new THREE.Vector3,binormal=new THREE.Vector3,tangents=[],normals=[],binormals=[],vec=new THREE.Vector3,mat=new THREE.Matrix4,numpoints=segments+1,theta,epsilon=1e-4,smallest,tx,ty,tz,i,u,v;this.tangents=tangents;this.normals=normals;this.binormals=binormals;for(i=0;i<numpoints;i++){u=i/(numpoints-1);tangents[i]=path.getTangentAt(u);tangents[i].normalize()}initialNormal3();function initialNormal1(lastBinormal){normals[0]=new THREE.Vector3;binormals[0]=new THREE.Vector3;if(lastBinormal===undefined)lastBinormal=new THREE.Vector3(0,0,1);normals[0].crossVectors(lastBinormal,tangents[0]).normalize();binormals[0].crossVectors(tangents[0],normals[0]).normalize()}function initialNormal2(){var t2=path.getTangentAt(epsilon);normals[0]=(new THREE.Vector3).subVectors(t2,tangents[0]).normalize();binormals[0]=(new THREE.Vector3).crossVectors(tangents[0],normals[0]);normals[0].crossVectors(binormals[0],tangents[0]).normalize();binormals[0].crossVectors(tangents[0],normals[0]).normalize()}function initialNormal3(){normals[0]=new THREE.Vector3;binormals[0]=new THREE.Vector3;smallest=Number.MAX_VALUE;tx=Math.abs(tangents[0].x);ty=Math.abs(tangents[0].y);tz=Math.abs(tangents[0].z);if(tx<=smallest){smallest=tx;normal.set(1,0,0)}if(ty<=smallest){smallest=ty;normal.set(0,1,0)}if(tz<=smallest){normal.set(0,0,1)}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0])}for(i=1;i<numpoints;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>epsilon){vec.normalize();theta=Math.acos(THREE.Math.clamp(tangents[i-1].dot(tangents[i]),-1,1));normals[i].applyMatrix4(mat.makeRotationAxis(vec,theta))}binormals[i].crossVectors(tangents[i],normals[i])}if(closed){theta=Math.acos(THREE.Math.clamp(normals[0].dot(normals[numpoints-1]),-1,1));theta/=numpoints-1;if(tangents[0].dot(vec.crossVectors(normals[0],normals[numpoints-1]))>0){theta=-theta}for(i=1;i<numpoints;i++){normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i])}}};THREE.PolyhedronGeometry=function(vertices,faces,radius,detail){THREE.Geometry.call(this);radius=radius||1;detail=detail||0;var that=this;for(var i=0,l=vertices.length;i<l;i++){prepare(new THREE.Vector3(vertices[i][0],vertices[i][1],vertices[i][2]))}var midpoints=[],p=this.vertices;var f=[];for(var i=0,l=faces.length;i<l;i++){var v1=p[faces[i][0]];var v2=p[faces[i][1]];var v3=p[faces[i][2]];f[i]=new THREE.Face3(v1.index,v2.index,v3.index,[v1.clone(),v2.clone(),v3.clone()])}for(var i=0,l=f.length;i<l;i++){subdivide(f[i],detail)}for(var i=0,l=this.faceVertexUvs[0].length;i<l;i++){var uvs=this.faceVertexUvs[0][i];var x0=uvs[0].x;var x1=uvs[1].x;var x2=uvs[2].x;var max=Math.max(x0,Math.max(x1,x2));var min=Math.min(x0,Math.min(x1,x2));if(max>.9&&min<.1){if(x0<.2)uvs[0].x+=1;if(x1<.2)uvs[1].x+=1;if(x2<.2)uvs[2].x+=1}}for(var i=0,l=this.vertices.length;i<l;i++){this.vertices[i].multiplyScalar(radius)}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,radius);function prepare(vector){var vertex=vector.normalize().clone();vertex.index=that.vertices.push(vertex)-1;var u=azimuth(vector)/2/Math.PI+.5;var v=inclination(vector)/Math.PI+.5;vertex.uv=new THREE.Vector2(u,1-v);return vertex}function make(v1,v2,v3){var face=new THREE.Face3(v1.index,v2.index,v3.index,[v1.clone(),v2.clone(),v3.clone()]);
face.centroid.add(v1).add(v2).add(v3).divideScalar(3);that.faces.push(face);var azi=azimuth(face.centroid);that.faceVertexUvs[0].push([correctUV(v1.uv,v1,azi),correctUV(v2.uv,v2,azi),correctUV(v3.uv,v3,azi)])}function subdivide(face,detail){var cols=Math.pow(2,detail);var cells=Math.pow(4,detail);var a=prepare(that.vertices[face.a]);var b=prepare(that.vertices[face.b]);var c=prepare(that.vertices[face.c]);var v=[];for(var i=0;i<=cols;i++){v[i]=[];var aj=prepare(a.clone().lerp(c,i/cols));var bj=prepare(b.clone().lerp(c,i/cols));var rows=cols-i;for(var j=0;j<=rows;j++){if(j==0&&i==cols){v[i][j]=aj}else{v[i][j]=prepare(aj.clone().lerp(bj,j/rows))}}}for(var i=0;i<cols;i++){for(var j=0;j<2*(cols-i)-1;j++){var k=Math.floor(j/2);if(j%2==0){make(v[i][k+1],v[i+1][k],v[i][k])}else{make(v[i][k+1],v[i+1][k+1],v[i+1][k])}}}}function azimuth(vector){return Math.atan2(vector.z,-vector.x)}function inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z))}function correctUV(uv,vector,azimuth){if(azimuth<0&&uv.x===1)uv=new THREE.Vector2(uv.x-1,uv.y);if(vector.x===0&&vector.z===0)uv=new THREE.Vector2(azimuth/2/Math.PI+.5,uv.y);return uv.clone()}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(radius,detail){this.radius=radius;this.detail=detail;var t=(1+Math.sqrt(5))/2;var vertices=[[-1,t,0],[1,t,0],[-1,-t,0],[1,-t,0],[0,-1,t],[0,1,t],[0,-1,-t],[0,1,-t],[t,0,-1],[t,0,1],[-t,0,-1],[-t,0,1]];var faces=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(radius,detail){var vertices=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]];var faces=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(radius,detail){var vertices=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]];var faces=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,vertices,faces,radius,detail)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(func,slices,stacks){THREE.Geometry.call(this);var verts=this.vertices;var faces=this.faces;var uvs=this.faceVertexUvs[0];var i,il,j,p;var u,v;var stackCount=stacks+1;var sliceCount=slices+1;for(i=0;i<=stacks;i++){v=i/stacks;for(j=0;j<=slices;j++){u=j/slices;p=func(u,v);verts.push(p)}}var a,b,c,d;var uva,uvb,uvc,uvd;for(i=0;i<stacks;i++){for(j=0;j<slices;j++){a=i*sliceCount+j;b=i*sliceCount+j+1;c=(i+1)*sliceCount+j+1;d=(i+1)*sliceCount+j;uva=new THREE.Vector2(j/slices,i/stacks);uvb=new THREE.Vector2((j+1)/slices,i/stacks);uvc=new THREE.Vector2((j+1)/slices,(i+1)/stacks);uvd=new THREE.Vector2(j/slices,(i+1)/stacks);faces.push(new THREE.Face3(a,b,d));uvs.push([uva,uvb,uvd]);faces.push(new THREE.Face3(b,c,d));uvs.push([uvb.clone(),uvc,uvd.clone()])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(size){size=size||1;var geometry=new THREE.Geometry;geometry.vertices.push(new THREE.Vector3,new THREE.Vector3(size,0,0),new THREE.Vector3,new THREE.Vector3(0,size,0),new THREE.Vector3,new THREE.Vector3(0,0,size));geometry.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,geometry,material,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(dir,origin,length,hex){THREE.Object3D.call(this);if(hex===undefined)hex=16776960;if(length===undefined)length=1;this.position=origin;var lineGeometry=new THREE.Geometry;lineGeometry.vertices.push(new THREE.Vector3(0,0,0));lineGeometry.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(lineGeometry,new THREE.LineBasicMaterial({color:hex}));this.line.matrixAutoUpdate=false;this.add(this.line);var coneGeometry=new THREE.CylinderGeometry(0,.05,.25,5,1);coneGeometry.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0));this.cone=new THREE.Mesh(coneGeometry,new THREE.MeshBasicMaterial({color:hex}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var axis=new THREE.Vector3;var radians;return function(dir){if(dir.y>.99999){this.quaternion.set(0,0,0,1)}else if(dir.y<-.99999){this.quaternion.set(1,0,0,0)}else{axis.set(dir.z,0,-dir.x).normalize();radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(axis,radians)}}}();THREE.ArrowHelper.prototype.setLength=function(length){this.scale.set(length,length,length)};THREE.ArrowHelper.prototype.setColor=function(hex){this.line.material.color.setHex(hex);this.cone.material.color.setHex(hex)};THREE.BoxHelper=function(object){var vertices=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=vertices;var geometry=new THREE.Geometry;geometry.vertices.push(vertices[0],vertices[1],vertices[1],vertices[2],vertices[2],vertices[3],vertices[3],vertices[0],vertices[4],vertices[5],vertices[5],vertices[6],vertices[6],vertices[7],vertices[7],vertices[4],vertices[0],vertices[4],vertices[1],vertices[5],vertices[2],vertices[6],vertices[3],vertices[7]);THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);if(object!==undefined){this.update(object)}};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(object){var geometry=object.geometry;if(geometry.boundingBox===null){geometry.computeBoundingBox()}var min=geometry.boundingBox.min;var max=geometry.boundingBox.max;var vertices=this.vertices;vertices[0].set(max.x,max.y,max.z);vertices[1].set(min.x,max.y,max.z);vertices[2].set(min.x,min.y,max.z);vertices[3].set(max.x,min.y,max.z);vertices[4].set(max.x,max.y,min.z);vertices[5].set(min.x,max.y,min.z);vertices[6].set(min.x,min.y,min.z);vertices[7].set(max.x,min.y,min.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=true;this.matrixAutoUpdate=false;this.matrixWorld=object.matrixWorld};THREE.BoundingBoxHelper=function(object,hex){var color=hex||8947848;this.object=object;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:color,wireframe:true}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(camera){var geometry=new THREE.Geometry;var material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});var pointMap={};var hexFrustum=16755200;var hexCone=16711680;var hexUp=43775;var hexTarget=16777215;var hexCross=3355443;addLine("n1","n2",hexFrustum);addLine("n2","n4",hexFrustum);addLine("n4","n3",hexFrustum);addLine("n3","n1",hexFrustum);addLine("f1","f2",hexFrustum);addLine("f2","f4",hexFrustum);addLine("f4","f3",hexFrustum);addLine("f3","f1",hexFrustum);addLine("n1","f1",hexFrustum);addLine("n2","f2",hexFrustum);addLine("n3","f3",hexFrustum);addLine("n4","f4",hexFrustum);addLine("p","n1",hexCone);addLine("p","n2",hexCone);addLine("p","n3",hexCone);addLine("p","n4",hexCone);addLine("u1","u2",hexUp);addLine("u2","u3",hexUp);addLine("u3","u1",hexUp);addLine("c","t",hexTarget);addLine("p","c",hexCross);addLine("cn1","cn2",hexCross);addLine("cn3","cn4",hexCross);addLine("cf1","cf2",hexCross);addLine("cf3","cf4",hexCross);function addLine(a,b,hex){addPoint(a,hex);addPoint(b,hex)}function addPoint(id,hex){geometry.vertices.push(new THREE.Vector3);geometry.colors.push(new THREE.Color(hex));if(pointMap[id]===undefined){pointMap[id]=[]}pointMap[id].push(geometry.vertices.length-1)}THREE.Line.call(this,geometry,material,THREE.LinePieces);this.camera=camera;this.matrixWorld=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var vector=new THREE.Vector3;var camera=new THREE.Camera;var projector=new THREE.Projector;return function(){var scope=this;var w=1,h=1;camera.projectionMatrix.copy(this.camera.projectionMatrix);setPoint("c",0,0,-1);setPoint("t",0,0,1);setPoint("n1",-w,-h,-1);setPoint("n2",w,-h,-1);setPoint("n3",-w,h,-1);setPoint("n4",w,h,-1);setPoint("f1",-w,-h,1);setPoint("f2",w,-h,1);setPoint("f3",-w,h,1);setPoint("f4",w,h,1);setPoint("u1",w*.7,h*1.1,-1);setPoint("u2",-w*.7,h*1.1,-1);setPoint("u3",0,h*2,-1);setPoint("cf1",-w,0,1);setPoint("cf2",w,0,1);setPoint("cf3",0,-h,1);setPoint("cf4",0,h,1);setPoint("cn1",-w,0,-1);setPoint("cn2",w,0,-1);setPoint("cn3",0,-h,-1);setPoint("cn4",0,h,-1);function setPoint(point,x,y,z){vector.set(x,y,z);projector.unprojectVector(vector,camera);var points=scope.pointMap[point];if(points!==undefined){for(var i=0,il=points.length;i<il;i++){scope.geometry.vertices[points[i]].copy(vector)}}}this.geometry.verticesNeedUpdate=true}}();THREE.DirectionalLightHelper=function(light,size){THREE.Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrixWorld=light.matrixWorld;this.matrixAutoUpdate=false;var geometry=new THREE.PlaneGeometry(size,size);var material=new THREE.MeshBasicMaterial({wireframe:true,fog:false});material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Mesh(geometry,material);this.add(this.lightPlane);geometry=new THREE.Geometry;geometry.vertices.push(new THREE.Vector3);geometry.vertices.push(new THREE.Vector3);geometry.computeLineDistances();material=new THREE.LineBasicMaterial({fog:false});material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(geometry,material);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var vector=new THREE.Vector3;return function(){vector.getPositionFromMatrix(this.light.matrixWorld).negate();this.lightPlane.lookAt(vector);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(vector);this.targetLine.geometry.verticesNeedUpdate=true;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.FaceNormalsHelper=function(object,size,hex,linewidth){this.object=object;this.size=size||1;var color=hex||16776960;var width=linewidth||1;var geometry=new THREE.Geometry;var faces=this.object.geometry.faces;for(var i=0,l=faces.length;i<l;i++){geometry.vertices.push(new THREE.Vector3);geometry.vertices.push(new THREE.Vector3)}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces);this.matrixAutoUpdate=false;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.FaceNormalsHelper.prototype.update=function(object){var v1=new THREE.Vector3;return function(object){this.object.updateMatrixWorld(true);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);var vertices=this.geometry.vertices;var faces=this.object.geometry.faces;var worldMatrix=this.object.matrixWorld;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];v1.copy(face.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var idx=2*i;vertices[idx].copy(face.centroid).applyMatrix4(worldMatrix);vertices[idx+1].addVectors(vertices[idx],v1)}this.geometry.verticesNeedUpdate=true;return this}}();THREE.GridHelper=function(size,step){var geometry=new THREE.Geometry;var material=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var i=-size;i<=size;i+=step){geometry.vertices.push(new THREE.Vector3(-size,0,i),new THREE.Vector3(size,0,i),new THREE.Vector3(i,0,-size),new THREE.Vector3(i,0,size));var color=i===0?this.color1:this.color2;geometry.colors.push(color,color,color,color)}THREE.Line.call(this,geometry,material,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.GridHelper.prototype.setColors=function(colorCenterLine,colorGrid){this.color1.set(colorCenterLine);this.color2.set(colorGrid);this.geometry.colorsNeedUpdate=true};THREE.HemisphereLightHelper=function(light,sphereSize,arrowLength,domeSize){THREE.Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrixWorld=light.matrixWorld;this.matrixAutoUpdate=false;this.colors=[new THREE.Color,new THREE.Color];var geometry=new THREE.SphereGeometry(sphereSize,4,2);geometry.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var i=0,il=8;i<il;i++){geometry.faces[i].color=this.colors[i<4?0:1]}var material=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:true});this.lightSphere=new THREE.Mesh(geometry,material);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var vector=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(vector.getPositionFromMatrix(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=true}}();THREE.PointLightHelper=function(light,sphereSize){this.light=light;this.light.updateMatrixWorld();var geometry=new THREE.SphereGeometry(sphereSize,4,2);var material=new THREE.MeshBasicMaterial({wireframe:true,fog:false});material.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,geometry,material);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=false};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SpotLightHelper=function(light){THREE.Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrixWorld=light.matrixWorld;this.matrixAutoUpdate=false;var geometry=new THREE.CylinderGeometry(0,1,1,8,1,true);geometry.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0));geometry.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var material=new THREE.MeshBasicMaterial({wireframe:true,fog:false});this.cone=new THREE.Mesh(geometry,material);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var vector=new THREE.Vector3;var vector2=new THREE.Vector3;return function(){var coneLength=this.light.distance?this.light.distance:1e4;var coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);vector.getPositionFromMatrix(this.light.matrixWorld);vector2.getPositionFromMatrix(this.light.target.matrixWorld);this.cone.lookAt(vector2.sub(vector));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(object,size,hex,linewidth){this.object=object;this.size=size||1;var color=hex||16711680;var width=linewidth||1;var geometry=new THREE.Geometry;var vertices=object.geometry.vertices;var faces=object.geometry.faces;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexNormals.length;j<jl;j++){geometry.vertices.push(new THREE.Vector3);geometry.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces);this.matrixAutoUpdate=false;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexNormalsHelper.prototype.update=function(object){var v1=new THREE.Vector3;return function(object){var keys=["a","b","c","d"];this.object.updateMatrixWorld(true);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);var vertices=this.geometry.vertices;var verts=this.object.geometry.vertices;var faces=this.object.geometry.faces;var worldMatrix=this.object.matrixWorld;var idx=0;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexNormals.length;j<jl;j++){var vertexId=face[keys[j]];var vertex=verts[vertexId];var normal=face.vertexNormals[j];vertices[idx].copy(vertex).applyMatrix4(worldMatrix);v1.copy(normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);v1.add(vertices[idx]);idx=idx+1;vertices[idx].copy(v1);idx=idx+1}}this.geometry.verticesNeedUpdate=true;return this}}();THREE.VertexTangentsHelper=function(object,size,hex,linewidth){this.object=object;this.size=size||1;var color=hex||255;var width=linewidth||1;var geometry=new THREE.Geometry;var vertices=object.geometry.vertices;var faces=object.geometry.faces;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexTangents.length;j<jl;j++){geometry.vertices.push(new THREE.Vector3);geometry.vertices.push(new THREE.Vector3)}}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:color,linewidth:width}),THREE.LinePieces);this.matrixAutoUpdate=false;this.update()};THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);THREE.VertexTangentsHelper.prototype.update=function(object){var v1=new THREE.Vector3;return function(object){var keys=["a","b","c","d"];this.object.updateMatrixWorld(true);var vertices=this.geometry.vertices;var verts=this.object.geometry.vertices;var faces=this.object.geometry.faces;var worldMatrix=this.object.matrixWorld;var idx=0;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexTangents.length;j<jl;j++){var vertexId=face[keys[j]];var vertex=verts[vertexId];var tangent=face.vertexTangents[j];vertices[idx].copy(vertex).applyMatrix4(worldMatrix);v1.copy(tangent).transformDirection(worldMatrix).multiplyScalar(this.size);v1.add(vertices[idx]);idx=idx+1;vertices[idx].copy(v1);idx=idx+1}}this.geometry.verticesNeedUpdate=true;return this}}();THREE.WireframeHelper=function(object){var edge=[0,0],hash={};var sortFunction=function(a,b){return a-b};var keys=["a","b","c","d"];var geometry=new THREE.Geometry;var vertices=object.geometry.vertices;var faces=object.geometry.faces;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0;j<3;j++){edge[0]=face[keys[j]];edge[1]=face[keys[(j+1)%3]];edge.sort(sortFunction);var key=edge.toString();if(hash[key]===undefined){geometry.vertices.push(vertices[edge[0]]);geometry.vertices.push(vertices[edge[1]]);hash[key]=true}}}THREE.Line.call(this,geometry,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces);this.matrixAutoUpdate=false;this.matrixWorld=object.matrixWorld};THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(renderCallback){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(texture,size,distance,blending,color){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=undefined;if(texture!==undefined){this.add(texture,size,distance,blending,color)}};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(texture,size,distance,blending,color,opacity){if(size===undefined)size=-1;if(distance===undefined)distance=0;if(opacity===undefined)opacity=1;if(color===undefined)color=new THREE.Color(16777215);if(blending===undefined)blending=THREE.NormalBlending;distance=Math.min(distance,Math.max(0,distance));this.lensFlares.push({texture:texture,size:size,distance:distance,x:0,y:0,z:0,scale:1,rotation:1,opacity:opacity,color:color,blending:blending})};THREE.LensFlare.prototype.updateLensFlares=function(){var f,fl=this.lensFlares.length;var flare;var vecX=-this.positionScreen.x*2;var vecY=-this.positionScreen.y*2;for(f=0;f<fl;f++){flare=this.lensFlares[f];flare.x=this.positionScreen.x+vecX*flare.distance;flare.y=this.positionScreen.y+vecY*flare.distance;flare.wantedRotation=flare.x*Math.PI*.25;flare.rotation+=(flare.wantedRotation-flare.rotation)*.25}};THREE.MorphBlendMesh=function(geometry,material){THREE.Mesh.call(this,geometry,material);this.animationsMap={};this.animationsList=[];var numFrames=this.geometry.morphTargets.length;var name="__default";var startFrame=0;var endFrame=numFrames-1;var fps=numFrames/1;this.createAnimation(name,startFrame,endFrame,fps);this.setAnimationWeight(name,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(name,start,end,fps){var animation={startFrame:start,endFrame:end,length:end-start+1,fps:fps,duration:(end-start)/fps,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[name]=animation;this.animationsList.push(animation)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(fps){var pattern=/([a-z]+)(\d+)/;var firstAnimation,frameRanges={};var geometry=this.geometry;for(var i=0,il=geometry.morphTargets.length;i<il;i++){var morph=geometry.morphTargets[i];var chunks=morph.name.match(pattern);if(chunks&&chunks.length>1){var name=chunks[1];var num=chunks[2];if(!frameRanges[name])frameRanges[name]={start:Infinity,end:-Infinity};var range=frameRanges[name];if(i<range.start)range.start=i;if(i>range.end)range.end=i;if(!firstAnimation)firstAnimation=name}}for(var name in frameRanges){var range=frameRanges[name];this.createAnimation(name,range.start,range.end,fps)}this.firstAnimation=firstAnimation};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(name){var animation=this.animationsMap[name];if(animation){animation.direction=1;animation.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(name){var animation=this.animationsMap[name];if(animation){animation.direction=-1;animation.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(name,fps){var animation=this.animationsMap[name];if(animation){animation.fps=fps;animation.duration=(animation.end-animation.start)/animation.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(name,duration){var animation=this.animationsMap[name];if(animation){animation.duration=duration;animation.fps=(animation.end-animation.start)/animation.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(name,weight){var animation=this.animationsMap[name];if(animation){animation.weight=weight}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(name,time){var animation=this.animationsMap[name];if(animation){animation.time=time}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(name){var time=0;var animation=this.animationsMap[name];if(animation){time=animation.time}return time};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(name){var duration=-1;var animation=this.animationsMap[name];if(animation){duration=animation.duration}return duration};THREE.MorphBlendMesh.prototype.playAnimation=function(name){var animation=this.animationsMap[name];if(animation){animation.time=0;animation.active=true}else{console.warn("animation["+name+"] undefined")}};THREE.MorphBlendMesh.prototype.stopAnimation=function(name){var animation=this.animationsMap[name];if(animation){animation.active=false}};THREE.MorphBlendMesh.prototype.update=function(delta){for(var i=0,il=this.animationsList.length;i<il;i++){var animation=this.animationsList[i];if(!animation.active)continue;var frameTime=animation.duration/animation.length;animation.time+=animation.direction*delta;if(animation.mirroredLoop){if(animation.time>animation.duration||animation.time<0){animation.direction*=-1;if(animation.time>animation.duration){animation.time=animation.duration;animation.directionBackwards=true}if(animation.time<0){animation.time=0;animation.directionBackwards=false}}}else{animation.time=animation.time%animation.duration;if(animation.time<0)animation.time+=animation.duration}var keyframe=animation.startFrame+THREE.Math.clamp(Math.floor(animation.time/frameTime),0,animation.length-1);var weight=animation.weight;if(keyframe!==animation.currentFrame){this.morphTargetInfluences[animation.lastFrame]=0;this.morphTargetInfluences[animation.currentFrame]=1*weight;this.morphTargetInfluences[keyframe]=0;animation.lastFrame=animation.currentFrame;animation.currentFrame=keyframe}var mix=animation.time%frameTime/frameTime;if(animation.directionBackwards)mix=1-mix;this.morphTargetInfluences[animation.currentFrame]=mix*weight;this.morphTargetInfluences[animation.lastFrame]=(1-mix)*weight}};THREE.LensFlarePlugin=function(){var _gl,_renderer,_precision,_lensFlare={};this.init=function(renderer){_gl=renderer.context;_renderer=renderer;_precision=renderer.getPrecision();_lensFlare.vertices=new Float32Array(8+8);_lensFlare.faces=new Uint16Array(6);var i=0;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=-1;_lensFlare.vertices[i++]=1;_lensFlare.vertices[i++]=0;_lensFlare.vertices[i++]=1;i=0;_lensFlare.faces[i++]=0;_lensFlare.faces[i++]=1;_lensFlare.faces[i++]=2;_lensFlare.faces[i++]=0;_lensFlare.faces[i++]=2;_lensFlare.faces[i++]=3;_lensFlare.vertexBuffer=_gl.createBuffer();_lensFlare.elementBuffer=_gl.createBuffer();_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,_lensFlare.vertices,_gl.STATIC_DRAW);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.faces,_gl.STATIC_DRAW);_lensFlare.tempTexture=_gl.createTexture();_lensFlare.occlusionTexture=_gl.createTexture();_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture);_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGB,16,16,0,_gl.RGB,_gl.UNSIGNED_BYTE,null);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture);_gl.texImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,16,16,0,_gl.RGBA,_gl.UNSIGNED_BYTE,null);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_S,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_WRAP_T,_gl.CLAMP_TO_EDGE);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MAG_FILTER,_gl.NEAREST);_gl.texParameteri(_gl.TEXTURE_2D,_gl.TEXTURE_MIN_FILTER,_gl.NEAREST);if(_gl.getParameter(_gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){_lensFlare.hasVertexTexture=false;_lensFlare.program=createProgram(THREE.ShaderFlares["lensFlare"],_precision)}else{_lensFlare.hasVertexTexture=true;_lensFlare.program=createProgram(THREE.ShaderFlares["lensFlareVertexTexture"],_precision)}_lensFlare.attributes={};_lensFlare.uniforms={};_lensFlare.attributes.vertex=_gl.getAttribLocation(_lensFlare.program,"position");_lensFlare.attributes.uv=_gl.getAttribLocation(_lensFlare.program,"uv");_lensFlare.uniforms.renderType=_gl.getUniformLocation(_lensFlare.program,"renderType");_lensFlare.uniforms.map=_gl.getUniformLocation(_lensFlare.program,"map");_lensFlare.uniforms.occlusionMap=_gl.getUniformLocation(_lensFlare.program,"occlusionMap");_lensFlare.uniforms.opacity=_gl.getUniformLocation(_lensFlare.program,"opacity");_lensFlare.uniforms.color=_gl.getUniformLocation(_lensFlare.program,"color");_lensFlare.uniforms.scale=_gl.getUniformLocation(_lensFlare.program,"scale");_lensFlare.uniforms.rotation=_gl.getUniformLocation(_lensFlare.program,"rotation");_lensFlare.uniforms.screenPosition=_gl.getUniformLocation(_lensFlare.program,"screenPosition")};this.render=function(scene,camera,viewportWidth,viewportHeight){var flares=scene.__webglFlares,nFlares=flares.length;if(!nFlares)return;var tempPosition=new THREE.Vector3;var invAspect=viewportHeight/viewportWidth,halfViewportWidth=viewportWidth*.5,halfViewportHeight=viewportHeight*.5;var size=16/viewportHeight,scale=new THREE.Vector2(size*invAspect,size);var screenPosition=new THREE.Vector3(1,1,0),screenPositionPixels=new THREE.Vector2(1,1);var uniforms=_lensFlare.uniforms,attributes=_lensFlare.attributes;_gl.useProgram(_lensFlare.program);_gl.enableVertexAttribArray(_lensFlare.attributes.vertex);_gl.enableVertexAttribArray(_lensFlare.attributes.uv);_gl.uniform1i(uniforms.occlusionMap,0);_gl.uniform1i(uniforms.map,1);_gl.bindBuffer(_gl.ARRAY_BUFFER,_lensFlare.vertexBuffer);_gl.vertexAttribPointer(attributes.vertex,2,_gl.FLOAT,false,2*8,0);_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,false,2*8,8);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_lensFlare.elementBuffer);_gl.disable(_gl.CULL_FACE);_gl.depthMask(false);var i,j,jl,flare,sprite;for(i=0;i<nFlares;i++){size=16/viewportHeight;scale.set(size*invAspect,size);flare=flares[i];tempPosition.set(flare.matrixWorld.elements[12],flare.matrixWorld.elements[13],flare.matrixWorld.elements[14]);tempPosition.applyMatrix4(camera.matrixWorldInverse);tempPosition.applyProjection(camera.projectionMatrix);screenPosition.copy(tempPosition);screenPositionPixels.x=screenPosition.x*halfViewportWidth+halfViewportWidth;screenPositionPixels.y=screenPosition.y*halfViewportHeight+halfViewportHeight;if(_lensFlare.hasVertexTexture||screenPositionPixels.x>0&&screenPositionPixels.x<viewportWidth&&screenPositionPixels.y>0&&screenPositionPixels.y<viewportHeight){_gl.activeTexture(_gl.TEXTURE1);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture);_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGB,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0);_gl.uniform1i(uniforms.renderType,0);_gl.uniform2f(uniforms.scale,scale.x,scale.y);_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z);_gl.disable(_gl.BLEND);_gl.enable(_gl.DEPTH_TEST);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0);_gl.activeTexture(_gl.TEXTURE0);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.occlusionTexture);_gl.copyTexImage2D(_gl.TEXTURE_2D,0,_gl.RGBA,screenPositionPixels.x-8,screenPositionPixels.y-8,16,16,0);_gl.uniform1i(uniforms.renderType,1);_gl.disable(_gl.DEPTH_TEST);_gl.activeTexture(_gl.TEXTURE1);_gl.bindTexture(_gl.TEXTURE_2D,_lensFlare.tempTexture);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0);
flare.positionScreen.copy(screenPosition);if(flare.customUpdateCallback){flare.customUpdateCallback(flare)}else{flare.updateLensFlares()}_gl.uniform1i(uniforms.renderType,2);_gl.enable(_gl.BLEND);for(j=0,jl=flare.lensFlares.length;j<jl;j++){sprite=flare.lensFlares[j];if(sprite.opacity>.001&&sprite.scale>.001){screenPosition.x=sprite.x;screenPosition.y=sprite.y;screenPosition.z=sprite.z;size=sprite.size*sprite.scale/viewportHeight;scale.x=size*invAspect;scale.y=size;_gl.uniform3f(uniforms.screenPosition,screenPosition.x,screenPosition.y,screenPosition.z);_gl.uniform2f(uniforms.scale,scale.x,scale.y);_gl.uniform1f(uniforms.rotation,sprite.rotation);_gl.uniform1f(uniforms.opacity,sprite.opacity);_gl.uniform3f(uniforms.color,sprite.color.r,sprite.color.g,sprite.color.b);_renderer.setBlending(sprite.blending,sprite.blendEquation,sprite.blendSrc,sprite.blendDst);_renderer.setTexture(sprite.texture,1);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0)}}}}_gl.enable(_gl.CULL_FACE);_gl.enable(_gl.DEPTH_TEST);_gl.depthMask(true)};function createProgram(shader,precision){var program=_gl.createProgram();var fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER);var vertexShader=_gl.createShader(_gl.VERTEX_SHADER);var prefix="precision "+precision+" float;\n";_gl.shaderSource(fragmentShader,prefix+shader.fragmentShader);_gl.shaderSource(vertexShader,prefix+shader.vertexShader);_gl.compileShader(fragmentShader);_gl.compileShader(vertexShader);_gl.attachShader(program,fragmentShader);_gl.attachShader(program,vertexShader);_gl.linkProgram(program);return program}};THREE.ShadowMapPlugin=function(){var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_depthMaterialSkin,_depthMaterialMorphSkin,_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4,_min=new THREE.Vector3,_max=new THREE.Vector3,_matrixPosition=new THREE.Vector3;this.init=function(renderer){_gl=renderer.context;_renderer=renderer;var depthShader=THREE.ShaderLib["depthRGBA"];var depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms});_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true});_depthMaterialSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,skinning:true});_depthMaterialMorphSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true,skinning:true});_depthMaterial._shadowPass=true;_depthMaterialMorph._shadowPass=true;_depthMaterialSkin._shadowPass=true;_depthMaterialMorphSkin._shadowPass=true};this.render=function(scene,camera){if(!(_renderer.shadowMapEnabled&&_renderer.shadowMapAutoUpdate))return;this.update(scene,camera)};this.update=function(scene,camera){var i,il,j,jl,n,shadowMap,shadowMatrix,shadowCamera,program,buffer,material,webglObject,object,light,renderList,lights=[],k=0,fog=null;_gl.clearColor(1,1,1,1);_gl.disable(_gl.BLEND);_gl.enable(_gl.CULL_FACE);_gl.frontFace(_gl.CCW);if(_renderer.shadowMapCullFace===THREE.CullFaceFront){_gl.cullFace(_gl.FRONT)}else{_gl.cullFace(_gl.BACK)}_renderer.setDepthTest(true);for(i=0,il=scene.__lights.length;i<il;i++){light=scene.__lights[i];if(!light.castShadow)continue;if(light instanceof THREE.DirectionalLight&&light.shadowCascade){for(n=0;n<light.shadowCascadeCount;n++){var virtualLight;if(!light.shadowCascadeArray[n]){virtualLight=createVirtualLight(light,n);virtualLight.originalCamera=camera;var gyro=new THREE.Gyroscope;gyro.position=light.shadowCascadeOffset;gyro.add(virtualLight);gyro.add(virtualLight.target);camera.add(gyro);light.shadowCascadeArray[n]=virtualLight;console.log("Created virtualLight",virtualLight)}else{virtualLight=light.shadowCascadeArray[n]}updateVirtualLight(light,n);lights[k]=virtualLight;k++}}else{lights[k]=light;k++}}for(i=0,il=lights.length;i<il;i++){light=lights[i];if(!light.shadowMap){var shadowFilter=THREE.LinearFilter;if(_renderer.shadowMapType===THREE.PCFSoftShadowMap){shadowFilter=THREE.NearestFilter}var pars={minFilter:shadowFilter,magFilter:shadowFilter,format:THREE.RGBAFormat};light.shadowMap=new THREE.WebGLRenderTarget(light.shadowMapWidth,light.shadowMapHeight,pars);light.shadowMapSize=new THREE.Vector2(light.shadowMapWidth,light.shadowMapHeight);light.shadowMatrix=new THREE.Matrix4}if(!light.shadowCamera){if(light instanceof THREE.SpotLight){light.shadowCamera=new THREE.PerspectiveCamera(light.shadowCameraFov,light.shadowMapWidth/light.shadowMapHeight,light.shadowCameraNear,light.shadowCameraFar)}else if(light instanceof THREE.DirectionalLight){light.shadowCamera=new THREE.OrthographicCamera(light.shadowCameraLeft,light.shadowCameraRight,light.shadowCameraTop,light.shadowCameraBottom,light.shadowCameraNear,light.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}scene.add(light.shadowCamera);if(scene.autoUpdate===true)scene.updateMatrixWorld()}if(light.shadowCameraVisible&&!light.cameraHelper){light.cameraHelper=new THREE.CameraHelper(light.shadowCamera);light.shadowCamera.add(light.cameraHelper)}if(light.isVirtual&&virtualLight.originalCamera==camera){updateShadowCamera(camera,light)}shadowMap=light.shadowMap;shadowMatrix=light.shadowMatrix;shadowCamera=light.shadowCamera;shadowCamera.position.getPositionFromMatrix(light.matrixWorld);_matrixPosition.getPositionFromMatrix(light.target.matrixWorld);shadowCamera.lookAt(_matrixPosition);shadowCamera.updateMatrixWorld();shadowCamera.matrixWorldInverse.getInverse(shadowCamera.matrixWorld);if(light.cameraHelper)light.cameraHelper.visible=light.shadowCameraVisible;if(light.shadowCameraVisible)light.cameraHelper.update();shadowMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);_projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);_renderer.setRenderTarget(shadowMap);_renderer.clear();renderList=scene.__webglObjects;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;webglObject.render=false;if(object.visible&&object.castShadow){if(!(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)||!object.frustumCulled||_frustum.intersectsObject(object)){object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);webglObject.render=true}}}var objectMaterial,useMorphing,useSkinning;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];if(webglObject.render){object=webglObject.object;buffer=webglObject.buffer;objectMaterial=getObjectMaterial(object);useMorphing=object.geometry.morphTargets.length>0&&objectMaterial.morphTargets;useSkinning=object instanceof THREE.SkinnedMesh&&objectMaterial.skinning;if(object.customDepthMaterial){material=object.customDepthMaterial}else if(useSkinning){material=useMorphing?_depthMaterialMorphSkin:_depthMaterialSkin}else if(useMorphing){material=_depthMaterialMorph}else{material=_depthMaterial}if(buffer instanceof THREE.BufferGeometry){_renderer.renderBufferDirect(shadowCamera,scene.__lights,fog,material,buffer,object)}else{_renderer.renderBuffer(shadowCamera,scene.__lights,fog,material,buffer,object)}}}renderList=scene.__webglObjectsImmediate;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;if(object.visible&&object.castShadow){object._modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);_renderer.renderImmediateObject(shadowCamera,scene.__lights,fog,_depthMaterial,object)}}}var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha);_gl.enable(_gl.BLEND);if(_renderer.shadowMapCullFace===THREE.CullFaceFront){_gl.cullFace(_gl.BACK)}};function createVirtualLight(light,cascade){var virtualLight=new THREE.DirectionalLight;virtualLight.isVirtual=true;virtualLight.onlyShadow=true;virtualLight.castShadow=true;virtualLight.shadowCameraNear=light.shadowCameraNear;virtualLight.shadowCameraFar=light.shadowCameraFar;virtualLight.shadowCameraLeft=light.shadowCameraLeft;virtualLight.shadowCameraRight=light.shadowCameraRight;virtualLight.shadowCameraBottom=light.shadowCameraBottom;virtualLight.shadowCameraTop=light.shadowCameraTop;virtualLight.shadowCameraVisible=light.shadowCameraVisible;virtualLight.shadowDarkness=light.shadowDarkness;virtualLight.shadowBias=light.shadowCascadeBias[cascade];virtualLight.shadowMapWidth=light.shadowCascadeWidth[cascade];virtualLight.shadowMapHeight=light.shadowCascadeHeight[cascade];virtualLight.pointsWorld=[];virtualLight.pointsFrustum=[];var pointsWorld=virtualLight.pointsWorld,pointsFrustum=virtualLight.pointsFrustum;for(var i=0;i<8;i++){pointsWorld[i]=new THREE.Vector3;pointsFrustum[i]=new THREE.Vector3}var nearZ=light.shadowCascadeNearZ[cascade];var farZ=light.shadowCascadeFarZ[cascade];pointsFrustum[0].set(-1,-1,nearZ);pointsFrustum[1].set(1,-1,nearZ);pointsFrustum[2].set(-1,1,nearZ);pointsFrustum[3].set(1,1,nearZ);pointsFrustum[4].set(-1,-1,farZ);pointsFrustum[5].set(1,-1,farZ);pointsFrustum[6].set(-1,1,farZ);pointsFrustum[7].set(1,1,farZ);return virtualLight}function updateVirtualLight(light,cascade){var virtualLight=light.shadowCascadeArray[cascade];virtualLight.position.copy(light.position);virtualLight.target.position.copy(light.target.position);virtualLight.lookAt(virtualLight.target);virtualLight.shadowCameraVisible=light.shadowCameraVisible;virtualLight.shadowDarkness=light.shadowDarkness;virtualLight.shadowBias=light.shadowCascadeBias[cascade];var nearZ=light.shadowCascadeNearZ[cascade];var farZ=light.shadowCascadeFarZ[cascade];var pointsFrustum=virtualLight.pointsFrustum;pointsFrustum[0].z=nearZ;pointsFrustum[1].z=nearZ;pointsFrustum[2].z=nearZ;pointsFrustum[3].z=nearZ;pointsFrustum[4].z=farZ;pointsFrustum[5].z=farZ;pointsFrustum[6].z=farZ;pointsFrustum[7].z=farZ}function updateShadowCamera(camera,light){var shadowCamera=light.shadowCamera,pointsFrustum=light.pointsFrustum,pointsWorld=light.pointsWorld;_min.set(Infinity,Infinity,Infinity);_max.set(-Infinity,-Infinity,-Infinity);for(var i=0;i<8;i++){var p=pointsWorld[i];p.copy(pointsFrustum[i]);THREE.ShadowMapPlugin.__projector.unprojectVector(p,camera);p.applyMatrix4(shadowCamera.matrixWorldInverse);if(p.x<_min.x)_min.x=p.x;if(p.x>_max.x)_max.x=p.x;if(p.y<_min.y)_min.y=p.y;if(p.y>_max.y)_max.y=p.y;if(p.z<_min.z)_min.z=p.z;if(p.z>_max.z)_max.z=p.z}shadowCamera.left=_min.x;shadowCamera.right=_max.x;shadowCamera.top=_max.y;shadowCamera.bottom=_min.y;shadowCamera.updateProjectionMatrix()}function getObjectMaterial(object){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[0]:object.material}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){var _gl,_renderer,_precision,_sprite={};this.init=function(renderer){_gl=renderer.context;_renderer=renderer;_precision=renderer.getPrecision();_sprite.vertices=new Float32Array(8+8);_sprite.faces=new Uint16Array(6);var i=0;_sprite.vertices[i++]=-1;_sprite.vertices[i++]=-1;_sprite.vertices[i++]=0;_sprite.vertices[i++]=0;_sprite.vertices[i++]=1;_sprite.vertices[i++]=-1;_sprite.vertices[i++]=1;_sprite.vertices[i++]=0;_sprite.vertices[i++]=1;_sprite.vertices[i++]=1;_sprite.vertices[i++]=1;_sprite.vertices[i++]=1;_sprite.vertices[i++]=-1;_sprite.vertices[i++]=1;_sprite.vertices[i++]=0;_sprite.vertices[i++]=1;i=0;_sprite.faces[i++]=0;_sprite.faces[i++]=1;_sprite.faces[i++]=2;_sprite.faces[i++]=0;_sprite.faces[i++]=2;_sprite.faces[i++]=3;_sprite.vertexBuffer=_gl.createBuffer();_sprite.elementBuffer=_gl.createBuffer();_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer);_gl.bufferData(_gl.ARRAY_BUFFER,_sprite.vertices,_gl.STATIC_DRAW);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer);_gl.bufferData(_gl.ELEMENT_ARRAY_BUFFER,_sprite.faces,_gl.STATIC_DRAW);_sprite.program=createProgram(THREE.ShaderSprite["sprite"],_precision);_sprite.attributes={};_sprite.uniforms={};_sprite.attributes.position=_gl.getAttribLocation(_sprite.program,"position");_sprite.attributes.uv=_gl.getAttribLocation(_sprite.program,"uv");_sprite.uniforms.uvOffset=_gl.getUniformLocation(_sprite.program,"uvOffset");_sprite.uniforms.uvScale=_gl.getUniformLocation(_sprite.program,"uvScale");_sprite.uniforms.rotation=_gl.getUniformLocation(_sprite.program,"rotation");_sprite.uniforms.scale=_gl.getUniformLocation(_sprite.program,"scale");_sprite.uniforms.alignment=_gl.getUniformLocation(_sprite.program,"alignment");_sprite.uniforms.color=_gl.getUniformLocation(_sprite.program,"color");_sprite.uniforms.map=_gl.getUniformLocation(_sprite.program,"map");_sprite.uniforms.opacity=_gl.getUniformLocation(_sprite.program,"opacity");_sprite.uniforms.useScreenCoordinates=_gl.getUniformLocation(_sprite.program,"useScreenCoordinates");_sprite.uniforms.sizeAttenuation=_gl.getUniformLocation(_sprite.program,"sizeAttenuation");_sprite.uniforms.screenPosition=_gl.getUniformLocation(_sprite.program,"screenPosition");_sprite.uniforms.modelViewMatrix=_gl.getUniformLocation(_sprite.program,"modelViewMatrix");_sprite.uniforms.projectionMatrix=_gl.getUniformLocation(_sprite.program,"projectionMatrix");_sprite.uniforms.fogType=_gl.getUniformLocation(_sprite.program,"fogType");_sprite.uniforms.fogDensity=_gl.getUniformLocation(_sprite.program,"fogDensity");_sprite.uniforms.fogNear=_gl.getUniformLocation(_sprite.program,"fogNear");_sprite.uniforms.fogFar=_gl.getUniformLocation(_sprite.program,"fogFar");_sprite.uniforms.fogColor=_gl.getUniformLocation(_sprite.program,"fogColor");_sprite.uniforms.alphaTest=_gl.getUniformLocation(_sprite.program,"alphaTest")};this.render=function(scene,camera,viewportWidth,viewportHeight){var sprites=scene.__webglSprites,nSprites=sprites.length;if(!nSprites)return;var attributes=_sprite.attributes,uniforms=_sprite.uniforms;var invAspect=viewportHeight/viewportWidth;var halfViewportWidth=viewportWidth*.5,halfViewportHeight=viewportHeight*.5;_gl.useProgram(_sprite.program);_gl.enableVertexAttribArray(attributes.position);_gl.enableVertexAttribArray(attributes.uv);_gl.disable(_gl.CULL_FACE);_gl.enable(_gl.BLEND);_gl.bindBuffer(_gl.ARRAY_BUFFER,_sprite.vertexBuffer);_gl.vertexAttribPointer(attributes.position,2,_gl.FLOAT,false,2*8,0);_gl.vertexAttribPointer(attributes.uv,2,_gl.FLOAT,false,2*8,8);_gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER,_sprite.elementBuffer);_gl.uniformMatrix4fv(uniforms.projectionMatrix,false,camera.projectionMatrix.elements);_gl.activeTexture(_gl.TEXTURE0);_gl.uniform1i(uniforms.map,0);var oldFogType=0;var sceneFogType=0;var fog=scene.fog;if(fog){_gl.uniform3f(uniforms.fogColor,fog.color.r,fog.color.g,fog.color.b);if(fog instanceof THREE.Fog){_gl.uniform1f(uniforms.fogNear,fog.near);_gl.uniform1f(uniforms.fogFar,fog.far);_gl.uniform1i(uniforms.fogType,1);oldFogType=1;sceneFogType=1}else if(fog instanceof THREE.FogExp2){_gl.uniform1f(uniforms.fogDensity,fog.density);_gl.uniform1i(uniforms.fogType,2);oldFogType=2;sceneFogType=2}}else{_gl.uniform1i(uniforms.fogType,0);oldFogType=0;sceneFogType=0}var i,sprite,material,screenPosition,size,fogType,scale=[];for(i=0;i<nSprites;i++){sprite=sprites[i];material=sprite.material;if(!sprite.visible||material.opacity===0)continue;if(!material.useScreenCoordinates){sprite._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,sprite.matrixWorld);sprite.z=-sprite._modelViewMatrix.elements[14]}else{sprite.z=-sprite.position.z}}sprites.sort(painterSortStable);for(i=0;i<nSprites;i++){sprite=sprites[i];material=sprite.material;if(!sprite.visible||material.opacity===0)continue;if(material.map&&material.map.image&&material.map.image.width){_gl.uniform1f(uniforms.alphaTest,material.alphaTest);if(material.useScreenCoordinates===true){_gl.uniform1i(uniforms.useScreenCoordinates,1);_gl.uniform3f(uniforms.screenPosition,(sprite.position.x*_renderer.devicePixelRatio-halfViewportWidth)/halfViewportWidth,(halfViewportHeight-sprite.position.y*_renderer.devicePixelRatio)/halfViewportHeight,Math.max(0,Math.min(1,sprite.position.z)));scale[0]=_renderer.devicePixelRatio;scale[1]=_renderer.devicePixelRatio}else{_gl.uniform1i(uniforms.useScreenCoordinates,0);_gl.uniform1i(uniforms.sizeAttenuation,material.sizeAttenuation?1:0);_gl.uniformMatrix4fv(uniforms.modelViewMatrix,false,sprite._modelViewMatrix.elements);scale[0]=1;scale[1]=1}if(scene.fog&&material.fog){fogType=sceneFogType}else{fogType=0}if(oldFogType!==fogType){_gl.uniform1i(uniforms.fogType,fogType);oldFogType=fogType}size=1/(material.scaleByViewport?viewportHeight:1);scale[0]*=size*invAspect*sprite.scale.x;scale[1]*=size*sprite.scale.y;_gl.uniform2f(uniforms.uvScale,material.uvScale.x,material.uvScale.y);_gl.uniform2f(uniforms.uvOffset,material.uvOffset.x,material.uvOffset.y);_gl.uniform2f(uniforms.alignment,material.alignment.x,material.alignment.y);_gl.uniform1f(uniforms.opacity,material.opacity);_gl.uniform3f(uniforms.color,material.color.r,material.color.g,material.color.b);_gl.uniform1f(uniforms.rotation,sprite.rotation);_gl.uniform2fv(uniforms.scale,scale);_renderer.setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst);_renderer.setDepthTest(material.depthTest);_renderer.setDepthWrite(material.depthWrite);_renderer.setTexture(material.map,0);_gl.drawElements(_gl.TRIANGLES,6,_gl.UNSIGNED_SHORT,0)}}_gl.enable(_gl.CULL_FACE)};function createProgram(shader,precision){var program=_gl.createProgram();var fragmentShader=_gl.createShader(_gl.FRAGMENT_SHADER);var vertexShader=_gl.createShader(_gl.VERTEX_SHADER);var prefix="precision "+precision+" float;\n";_gl.shaderSource(fragmentShader,prefix+shader.fragmentShader);_gl.shaderSource(vertexShader,prefix+shader.vertexShader);_gl.compileShader(fragmentShader);_gl.compileShader(vertexShader);_gl.attachShader(program,fragmentShader);_gl.attachShader(program,vertexShader);_gl.linkProgram(program);return program}function painterSortStable(a,b){if(a.z!==b.z){return b.z-a.z}else{return b.id-a.id}}};THREE.DepthPassPlugin=function(){this.enabled=false;this.renderTarget=null;var _gl,_renderer,_depthMaterial,_depthMaterialMorph,_depthMaterialSkin,_depthMaterialMorphSkin,_frustum=new THREE.Frustum,_projScreenMatrix=new THREE.Matrix4;this.init=function(renderer){_gl=renderer.context;_renderer=renderer;var depthShader=THREE.ShaderLib["depthRGBA"];var depthUniforms=THREE.UniformsUtils.clone(depthShader.uniforms);_depthMaterial=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms});_depthMaterialMorph=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true});_depthMaterialSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,skinning:true});_depthMaterialMorphSkin=new THREE.ShaderMaterial({fragmentShader:depthShader.fragmentShader,vertexShader:depthShader.vertexShader,uniforms:depthUniforms,morphTargets:true,skinning:true});_depthMaterial._shadowPass=true;_depthMaterialMorph._shadowPass=true;_depthMaterialSkin._shadowPass=true;_depthMaterialMorphSkin._shadowPass=true};this.render=function(scene,camera){if(!this.enabled)return;this.update(scene,camera)};this.update=function(scene,camera){var i,il,j,jl,n,program,buffer,material,webglObject,object,light,renderList,fog=null;_gl.clearColor(1,1,1,1);_gl.disable(_gl.BLEND);_renderer.setDepthTest(true);if(scene.autoUpdate===true)scene.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);_renderer.setRenderTarget(this.renderTarget);_renderer.clear();renderList=scene.__webglObjects;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;webglObject.render=false;if(object.visible){if(!(object instanceof THREE.Mesh||object instanceof THREE.ParticleSystem)||!object.frustumCulled||_frustum.intersectsObject(object)){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);webglObject.render=true}}}var objectMaterial,useMorphing,useSkinning;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];if(webglObject.render){object=webglObject.object;buffer=webglObject.buffer;if(object instanceof THREE.ParticleSystem&&!object.customDepthMaterial)continue;objectMaterial=getObjectMaterial(object);if(objectMaterial)_renderer.setMaterialFaces(object.material);useMorphing=object.geometry.morphTargets.length>0&&objectMaterial.morphTargets;useSkinning=object instanceof THREE.SkinnedMesh&&objectMaterial.skinning;if(object.customDepthMaterial){material=object.customDepthMaterial}else if(useSkinning){material=useMorphing?_depthMaterialMorphSkin:_depthMaterialSkin}else if(useMorphing){material=_depthMaterialMorph}else{material=_depthMaterial}if(buffer instanceof THREE.BufferGeometry){_renderer.renderBufferDirect(camera,scene.__lights,fog,material,buffer,object)}else{_renderer.renderBuffer(camera,scene.__lights,fog,material,buffer,object)}}}renderList=scene.__webglObjectsImmediate;for(j=0,jl=renderList.length;j<jl;j++){webglObject=renderList[j];object=webglObject.object;if(object.visible){object._modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);_renderer.renderImmediateObject(camera,scene.__lights,fog,_depthMaterial,object)}}var clearColor=_renderer.getClearColor(),clearAlpha=_renderer.getClearAlpha();_gl.clearColor(clearColor.r,clearColor.g,clearColor.b,clearAlpha);_gl.enable(_gl.BLEND)};function getObjectMaterial(object){return object.material instanceof THREE.MeshFaceMaterial?object.material.materials[0]:object.material}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}};THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};THREE.ColladaLoader=function(){var COLLADA=null;var scene=null;var daeScene;var readyCallbackFunc=null;var sources={};var images={};var animations={};var controllers={};var geometries={};var materials={};var effects={};var cameras={};var lights={};var animData;var visualScenes;var baseUrl;var morphs;var skins;var flip_uv=true;var preferredShading=THREE.SmoothShading;var options={centerGeometry:false,convertUpAxis:false,subdivideFaces:true,upAxis:"Y",defaultEnvMap:null};var colladaUnit=1;var colladaUp="Y";var upConversion=null;function load(url,readyCallback,progressCallback){var length=0;if(document.implementation&&document.implementation.createDocument){var request=new XMLHttpRequest;request.onreadystatechange=function(){if(request.readyState==4){if(request.status==0||request.status==200){if(request.responseXML){readyCallbackFunc=readyCallback;parse(request.responseXML,undefined,url)}else if(request.responseText){readyCallbackFunc=readyCallback;var xmlParser=new DOMParser;var responseXML=xmlParser.parseFromString(request.responseText,"application/xml");parse(responseXML,undefined,url)}else{console.error("ColladaLoader: Empty or non-existing file ("+url+")")}}}else if(request.readyState==3){if(progressCallback){if(length==0){length=request.getResponseHeader("Content-Length")}progressCallback({total:length,loaded:request.responseText.length})}}};request.open("GET",url,true);request.send(null)}else{alert("Don't know how to parse XML!")}}function parse(doc,callBack,url){COLLADA=doc;callBack=callBack||readyCallbackFunc;if(url!==undefined){var parts=url.split("/");parts.pop();baseUrl=(parts.length<1?".":parts.join("/"))+"/"}parseAsset();setUpConversion();images=parseLib("//dae:library_images/dae:image",_Image,"image");materials=parseLib("//dae:library_materials/dae:material",Material,"material");effects=parseLib("//dae:library_effects/dae:effect",Effect,"effect");geometries=parseLib("//dae:library_geometries/dae:geometry",Geometry,"geometry");cameras=parseLib(".//dae:library_cameras/dae:camera",Camera,"camera");lights=parseLib(".//dae:library_lights/dae:light",Light,"light");controllers=parseLib("//dae:library_controllers/dae:controller",Controller,"controller");animations=parseLib("//dae:library_animations/dae:animation",Animation,"animation");visualScenes=parseLib(".//dae:library_visual_scenes/dae:visual_scene",VisualScene,"visual_scene");morphs=[];skins=[];daeScene=parseScene();scene=new THREE.Object3D;for(var i=0;i<daeScene.nodes.length;i++){scene.add(createSceneGraph(daeScene.nodes[i]))}scene.scale.multiplyScalar(colladaUnit);createAnimations();var result={scene:scene,morphs:morphs,skins:skins,animations:animData,dae:{images:images,materials:materials,cameras:cameras,lights:lights,effects:effects,geometries:geometries,controllers:controllers,animations:animations,visualScenes:visualScenes,scene:daeScene}};if(callBack){callBack(result)}return result}function setPreferredShading(shading){preferredShading=shading}function parseAsset(){var elements=COLLADA.evaluate("//dae:asset",COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);var element=elements.iterateNext();if(element&&element.childNodes){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"unit":var meter=child.getAttribute("meter");if(meter){colladaUnit=parseFloat(meter)}break;case"up_axis":colladaUp=child.textContent.charAt(0);break}}}}function parseLib(q,classSpec,prefix){var elements=COLLADA.evaluate(q,COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);var lib={};var element=elements.iterateNext();var i=0;while(element){var daeElement=(new classSpec).parse(element);if(!daeElement.id||daeElement.id.length==0)daeElement.id=prefix+i++;lib[daeElement.id]=daeElement;element=elements.iterateNext()}return lib}function parseScene(){var sceneElement=COLLADA.evaluate(".//dae:scene/dae:instance_visual_scene",COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext();if(sceneElement){var url=sceneElement.getAttribute("url").replace(/^#/,"");return visualScenes[url.length>0?url:"visual_scene0"]}else{return null}}function createAnimations(){animData=[];recurseHierarchy(scene)}function recurseHierarchy(node){var n=daeScene.getChildById(node.name,true),newData=null;if(n&&n.keys){newData={fps:60,hierarchy:[{node:n,keys:n.keys,sids:n.sids}],node:node,name:"animation_"+node.name,length:0};animData.push(newData);for(var i=0,il=n.keys.length;i<il;i++){newData.length=Math.max(newData.length,n.keys[i].time)}}else{newData={hierarchy:[{keys:[],sids:[]}]}}for(var i=0,il=node.children.length;i<il;i++){var d=recurseHierarchy(node.children[i]);for(var j=0,jl=d.hierarchy.length;j<jl;j++){newData.hierarchy.push({
keys:[],sids:[]})}}return newData}function calcAnimationBounds(){var start=1e6;var end=-start;var frames=0;for(var id in animations){var animation=animations[id];for(var i=0;i<animation.sampler.length;i++){var sampler=animation.sampler[i];sampler.create();start=Math.min(start,sampler.startTime);end=Math.max(end,sampler.endTime);frames=Math.max(frames,sampler.input.length)}}return{start:start,end:end,frames:frames}}function createMorph(geometry,ctrl){var morphCtrl=ctrl instanceof InstanceController?controllers[ctrl.url]:ctrl;if(!morphCtrl||!morphCtrl.morph){console.log("could not find morph controller!");return}var morph=morphCtrl.morph;for(var i=0;i<morph.targets.length;i++){var target_id=morph.targets[i];var daeGeometry=geometries[target_id];if(!daeGeometry.mesh||!daeGeometry.mesh.primitives||!daeGeometry.mesh.primitives.length){continue}var target=daeGeometry.mesh.primitives[0].geometry;if(target.vertices.length===geometry.vertices.length){geometry.morphTargets.push({name:"target_1",vertices:target.vertices})}}geometry.morphTargets.push({name:"target_Z",vertices:geometry.vertices})}function createSkin(geometry,ctrl,applyBindShape){var skinCtrl=controllers[ctrl.url];if(!skinCtrl||!skinCtrl.skin){console.log("could not find skin controller!");return}if(!ctrl.skeleton||!ctrl.skeleton.length){console.log("could not find the skeleton for the skin!");return}var skin=skinCtrl.skin;var skeleton=daeScene.getChildById(ctrl.skeleton[0]);var hierarchy=[];applyBindShape=applyBindShape!==undefined?applyBindShape:true;var bones=[];geometry.skinWeights=[];geometry.skinIndices=[];if(applyBindShape){for(var i=0;i<geometry.vertices.length;i++){geometry.vertices[i].applyMatrix4(skin.bindShapeMatrix)}}}function setupSkeleton(node,bones,frame,parent){node.world=node.world||new THREE.Matrix4;node.world.copy(node.matrix);if(node.channels&&node.channels.length){var channel=node.channels[0];var m=channel.sampler.output[frame];if(m instanceof THREE.Matrix4){node.world.copy(m)}}if(parent){node.world.multiplyMatrices(parent,node.world)}bones.push(node);for(var i=0;i<node.nodes.length;i++){setupSkeleton(node.nodes[i],bones,frame,node.world)}}function setupSkinningMatrices(bones,skin){for(var i=0;i<bones.length;i++){var bone=bones[i];var found=-1;if(bone.type!="JOINT")continue;for(var j=0;j<skin.joints.length;j++){if(bone.sid==skin.joints[j]){found=j;break}}if(found>=0){var inv=skin.invBindMatrices[found];bone.invBindMatrix=inv;bone.skinningMatrix=new THREE.Matrix4;bone.skinningMatrix.multiplyMatrices(bone.world,inv);bone.weights=[];for(var j=0;j<skin.weights.length;j++){for(var k=0;k<skin.weights[j].length;k++){var w=skin.weights[j][k];if(w.joint==found){bone.weights.push(w)}}}}else{throw"ColladaLoader: Could not find joint '"+bone.sid+"'."}}}function applySkin(geometry,instanceCtrl,frame){var skinController=controllers[instanceCtrl.url];frame=frame!==undefined?frame:40;if(!skinController||!skinController.skin){console.log("ColladaLoader: Could not find skin controller.");return}if(!instanceCtrl.skeleton||!instanceCtrl.skeleton.length){console.log("ColladaLoader: Could not find the skeleton for the skin. ");return}var animationBounds=calcAnimationBounds();var skeleton=daeScene.getChildById(instanceCtrl.skeleton[0],true)||daeScene.getChildBySid(instanceCtrl.skeleton[0],true);var i,j,w,vidx,weight;var v=new THREE.Vector3,o,s;for(i=0;i<geometry.vertices.length;i++){geometry.vertices[i].applyMatrix4(skinController.skin.bindShapeMatrix)}for(frame=0;frame<animationBounds.frames;frame++){var bones=[];var skinned=[];for(i=0;i<geometry.vertices.length;i++){skinned.push(new THREE.Vector3)}setupSkeleton(skeleton,bones,frame);setupSkinningMatrices(bones,skinController.skin);for(i=0;i<bones.length;i++){if(bones[i].type!="JOINT")continue;for(j=0;j<bones[i].weights.length;j++){w=bones[i].weights[j];vidx=w.index;weight=w.weight;o=geometry.vertices[vidx];s=skinned[vidx];v.x=o.x;v.y=o.y;v.z=o.z;v.applyMatrix4(bones[i].skinningMatrix);s.x+=v.x*weight;s.y+=v.y*weight;s.z+=v.z*weight}}geometry.morphTargets.push({name:"target_"+frame,vertices:skinned})}}function createSceneGraph(node,parent){var obj=new THREE.Object3D;var skinned=false;var skinController;var morphController;var i,j;for(i=0;i<node.controllers.length;i++){var controller=controllers[node.controllers[i].url];switch(controller.type){case"skin":if(geometries[controller.skin.source]){var inst_geom=new InstanceGeometry;inst_geom.url=controller.skin.source;inst_geom.instance_material=node.controllers[i].instance_material;node.geometries.push(inst_geom);skinned=true;skinController=node.controllers[i]}else if(controllers[controller.skin.source]){var second=controllers[controller.skin.source];morphController=second;if(second.morph&&geometries[second.morph.source]){var inst_geom=new InstanceGeometry;inst_geom.url=second.morph.source;inst_geom.instance_material=node.controllers[i].instance_material;node.geometries.push(inst_geom)}}break;case"morph":if(geometries[controller.morph.source]){var inst_geom=new InstanceGeometry;inst_geom.url=controller.morph.source;inst_geom.instance_material=node.controllers[i].instance_material;node.geometries.push(inst_geom);morphController=node.controllers[i]}console.log("ColladaLoader: Morph-controller partially supported.");default:break}}var double_sided_materials={};for(i=0;i<node.geometries.length;i++){var instance_geometry=node.geometries[i];var instance_materials=instance_geometry.instance_material;var geometry=geometries[instance_geometry.url];var used_materials={};var used_materials_array=[];var num_materials=0;var first_material;if(geometry){if(!geometry.mesh||!geometry.mesh.primitives)continue;if(obj.name.length==0){obj.name=geometry.id}if(instance_materials){for(j=0;j<instance_materials.length;j++){var instance_material=instance_materials[j];var mat=materials[instance_material.target];var effect_id=mat.instance_effect.url;var shader=effects[effect_id].shader;var material3js=shader.material;if(geometry.doubleSided){if(!(instance_material.symbol in double_sided_materials)){var _copied_material=material3js.clone();_copied_material.side=THREE.DoubleSide;double_sided_materials[instance_material.symbol]=_copied_material}material3js=double_sided_materials[instance_material.symbol]}material3js.opacity=!material3js.opacity?1:material3js.opacity;used_materials[instance_material.symbol]=num_materials;used_materials_array.push(material3js);first_material=material3js;first_material.name=mat.name==null||mat.name===""?mat.id:mat.name;num_materials++}}var mesh;var material=first_material||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:geometry.doubleSided?THREE.DoubleSide:THREE.FrontSide});var geom=geometry.mesh.geometry3js;if(num_materials>1){material=new THREE.MeshFaceMaterial(used_materials_array);for(j=0;j<geom.faces.length;j++){var face=geom.faces[j];face.materialIndex=used_materials[face.daeMaterial]}}if(skinController!==undefined){applySkin(geom,skinController);material.morphTargets=true;mesh=new THREE.SkinnedMesh(geom,material,false);mesh.skeleton=skinController.skeleton;mesh.skinController=controllers[skinController.url];mesh.skinInstanceController=skinController;mesh.name="skin_"+skins.length;skins.push(mesh)}else if(morphController!==undefined){createMorph(geom,morphController);material.morphTargets=true;mesh=new THREE.Mesh(geom,material);mesh.name="morph_"+morphs.length;morphs.push(mesh)}else{mesh=new THREE.Mesh(geom,material)}node.geometries.length>1?obj.add(mesh):obj=mesh}}for(i=0;i<node.cameras.length;i++){var instance_camera=node.cameras[i];var cparams=cameras[instance_camera.url];obj=new THREE.PerspectiveCamera(cparams.fov,parseFloat(cparams.aspect_ratio),parseFloat(cparams.znear),parseFloat(cparams.zfar))}for(i=0;i<node.lights.length;i++){var instance_light=node.lights[i];var lparams=lights[instance_light.url];if(lparams&&lparams.technique){var color=lparams.color.getHex();var intensity=lparams.intensity;var distance=0;var angle=lparams.falloff_angle;var exponent;switch(lparams.technique){case"directional":obj=new THREE.DirectionalLight(color,intensity,distance);break;case"point":obj=new THREE.PointLight(color,intensity,distance);break;case"spot":obj=new THREE.SpotLight(color,intensity,distance,angle,exponent);break;case"ambient":obj=new THREE.AmbientLight(color);break}}}obj.name=node.name||node.id||"";obj.matrix=node.matrix;obj.matrix.decompose(obj.position,obj.quaternion,obj.scale);if(options.centerGeometry&&obj.geometry){var delta=THREE.GeometryUtils.center(obj.geometry);delta.multiply(obj.scale);delta.applyQuaternion(obj.quaternion);obj.position.sub(delta)}for(i=0;i<node.nodes.length;i++){obj.add(createSceneGraph(node.nodes[i],node))}return obj}function getJointId(skin,id){for(var i=0;i<skin.joints.length;i++){if(skin.joints[i]==id){return i}}}function getLibraryNode(id){return COLLADA.evaluate(".//dae:library_nodes//dae:node[@id='"+id+"']",COLLADA,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext()}function getChannelsForNode(node){var channels=[];var startTime=1e6;var endTime=-1e6;for(var id in animations){var animation=animations[id];for(var i=0;i<animation.channel.length;i++){var channel=animation.channel[i];var sampler=animation.sampler[i];var id=channel.target.split("/")[0];if(id==node.id){sampler.create();channel.sampler=sampler;startTime=Math.min(startTime,sampler.startTime);endTime=Math.max(endTime,sampler.endTime);channels.push(channel)}}}if(channels.length){node.startTime=startTime;node.endTime=endTime}return channels}function calcFrameDuration(node){var minT=1e7;for(var i=0;i<node.channels.length;i++){var sampler=node.channels[i].sampler;for(var j=0;j<sampler.input.length-1;j++){var t0=sampler.input[j];var t1=sampler.input[j+1];minT=Math.min(minT,t1-t0)}}return minT}function calcMatrixAt(node,t){var animated={};var i,j;for(i=0;i<node.channels.length;i++){var channel=node.channels[i];animated[channel.sid]=channel}var matrix=new THREE.Matrix4;for(i=0;i<node.transforms.length;i++){var transform=node.transforms[i];var channel=animated[transform.sid];if(channel!==undefined){var sampler=channel.sampler;var value;for(j=0;j<sampler.input.length-1;j++){if(sampler.input[j+1]>t){value=sampler.output[j];break}}if(value!==undefined){if(value instanceof THREE.Matrix4){matrix.multiplyMatrices(matrix,value)}else{matrix.multiplyMatrices(matrix,transform.matrix)}}else{matrix.multiplyMatrices(matrix,transform.matrix)}}else{matrix.multiplyMatrices(matrix,transform.matrix)}}return matrix}function bakeAnimations(node){if(node.channels&&node.channels.length){var keys=[],sids=[];for(var i=0,il=node.channels.length;i<il;i++){var channel=node.channels[i],fullSid=channel.fullSid,sampler=channel.sampler,input=sampler.input,transform=node.getTransformBySid(channel.sid),member;if(channel.arrIndices){member=[];for(var j=0,jl=channel.arrIndices.length;j<jl;j++){member[j]=getConvertedIndex(channel.arrIndices[j])}}else{member=getConvertedMember(channel.member)}if(transform){if(sids.indexOf(fullSid)===-1){sids.push(fullSid)}for(var j=0,jl=input.length;j<jl;j++){var time=input[j],data=sampler.getData(transform.type,j),key=findKey(keys,time);if(!key){key=new Key(time);var timeNdx=findTimeNdx(keys,time);keys.splice(timeNdx==-1?keys.length:timeNdx,0,key)}key.addTarget(fullSid,transform,member,data)}}else{console.log('Could not find transform "'+channel.sid+'" in node '+node.id)}}for(var i=0;i<sids.length;i++){var sid=sids[i];for(var j=0;j<keys.length;j++){var key=keys[j];if(!key.hasTarget(sid)){interpolateKeys(keys,key,j,sid)}}}node.keys=keys;node.sids=sids}}function findKey(keys,time){var retVal=null;for(var i=0,il=keys.length;i<il&&retVal==null;i++){var key=keys[i];if(key.time===time){retVal=key}else if(key.time>time){break}}return retVal}function findTimeNdx(keys,time){var ndx=-1;for(var i=0,il=keys.length;i<il&&ndx==-1;i++){var key=keys[i];if(key.time>=time){ndx=i}}return ndx}function interpolateKeys(keys,key,ndx,fullSid){var prevKey=getPrevKeyWith(keys,fullSid,ndx?ndx-1:0),nextKey=getNextKeyWith(keys,fullSid,ndx+1);if(prevKey&&nextKey){var scale=(key.time-prevKey.time)/(nextKey.time-prevKey.time),prevTarget=prevKey.getTarget(fullSid),nextData=nextKey.getTarget(fullSid).data,prevData=prevTarget.data,data;if(prevTarget.type==="matrix"){data=prevData}else if(prevData.length){data=[];for(var i=0;i<prevData.length;++i){data[i]=prevData[i]+(nextData[i]-prevData[i])*scale}}else{data=prevData+(nextData-prevData)*scale}key.addTarget(fullSid,prevTarget.transform,prevTarget.member,data)}}function getNextKeyWith(keys,fullSid,ndx){for(;ndx<keys.length;ndx++){var key=keys[ndx];if(key.hasTarget(fullSid)){return key}}return null}function getPrevKeyWith(keys,fullSid,ndx){ndx=ndx>=0?ndx:ndx+keys.length;for(;ndx>=0;ndx--){var key=keys[ndx];if(key.hasTarget(fullSid)){return key}}return null}function _Image(){this.id="";this.init_from=""}_Image.prototype.parse=function(element){this.id=element.getAttribute("id");for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeName=="init_from"){this.init_from=child.textContent}}return this};function Controller(){this.id="";this.name="";this.type="";this.skin=null;this.morph=null}Controller.prototype.parse=function(element){this.id=element.getAttribute("id");this.name=element.getAttribute("name");this.type="none";for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"skin":this.skin=(new Skin).parse(child);this.type=child.nodeName;break;case"morph":this.morph=(new Morph).parse(child);this.type=child.nodeName;break;default:break}}return this};function Morph(){this.method=null;this.source=null;this.targets=null;this.weights=null}Morph.prototype.parse=function(element){var sources={};var inputs=[];var i;this.method=element.getAttribute("method");this.source=element.getAttribute("source").replace(/^#/,"");for(i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"source":var source=(new Source).parse(child);sources[source.id]=source;break;case"targets":inputs=this.parseInputs(child);break;default:console.log(child.nodeName);break}}for(i=0;i<inputs.length;i++){var input=inputs[i];var source=sources[input.source];switch(input.semantic){case"MORPH_TARGET":this.targets=source.read();break;case"MORPH_WEIGHT":this.weights=source.read();break;default:break}}return this};Morph.prototype.parseInputs=function(element){var inputs=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"input":inputs.push((new Input).parse(child));break;default:break}}return inputs};function Skin(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}Skin.prototype.parse=function(element){var sources={};var joints,weights;this.source=element.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"bind_shape_matrix":var f=_floats(child.textContent);this.bindShapeMatrix=getConvertedMat4(f);break;case"source":var src=(new Source).parse(child);sources[src.id]=src;break;case"joints":joints=child;break;case"vertex_weights":weights=child;break;default:console.log(child.nodeName);break}}this.parseJoints(joints,sources);this.parseWeights(weights,sources);return this};Skin.prototype.parseJoints=function(element,sources){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"input":var input=(new Input).parse(child);var source=sources[input.source];if(input.semantic=="JOINT"){this.joints=source.read()}else if(input.semantic=="INV_BIND_MATRIX"){this.invBindMatrices=source.read()}break;default:break}}};Skin.prototype.parseWeights=function(element,sources){var v,vcount,inputs=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"input":inputs.push((new Input).parse(child));break;case"v":v=_ints(child.textContent);break;case"vcount":vcount=_ints(child.textContent);break;default:break}}var index=0;for(var i=0;i<vcount.length;i++){var numBones=vcount[i];var vertex_weights=[];for(var j=0;j<numBones;j++){var influence={};for(var k=0;k<inputs.length;k++){var input=inputs[k];var value=v[index+input.offset];switch(input.semantic){case"JOINT":influence.joint=value;break;case"WEIGHT":influence.weight=sources[input.source].data[value];break;default:break}}vertex_weights.push(influence);index+=inputs.length}for(var j=0;j<vertex_weights.length;j++){vertex_weights[j].index=i}this.weights.push(vertex_weights)}};function VisualScene(){this.id="";this.name="";this.nodes=[];this.scene=new THREE.Object3D}VisualScene.prototype.getChildById=function(id,recursive){for(var i=0;i<this.nodes.length;i++){var node=this.nodes[i].getChildById(id,recursive);if(node){return node}}return null};VisualScene.prototype.getChildBySid=function(sid,recursive){for(var i=0;i<this.nodes.length;i++){var node=this.nodes[i].getChildBySid(sid,recursive);if(node){return node}}return null};VisualScene.prototype.parse=function(element){this.id=element.getAttribute("id");this.name=element.getAttribute("name");this.nodes=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"node":this.nodes.push((new Node).parse(child));break;default:break}}return this};function Node(){this.id="";this.name="";this.sid="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=[];this.matrix=new THREE.Matrix4}Node.prototype.getChannelForTransform=function(transformSid){for(var i=0;i<this.channels.length;i++){var channel=this.channels[i];var parts=channel.target.split("/");var id=parts.shift();var sid=parts.shift();var dotSyntax=sid.indexOf(".")>=0;var arrSyntax=sid.indexOf("(")>=0;var arrIndices;var member;if(dotSyntax){parts=sid.split(".");sid=parts.shift();member=parts.shift()}else if(arrSyntax){arrIndices=sid.split("(");sid=arrIndices.shift();for(var j=0;j<arrIndices.length;j++){arrIndices[j]=parseInt(arrIndices[j].replace(/\)/,""))}}if(sid==transformSid){channel.info={sid:sid,dotSyntax:dotSyntax,arrSyntax:arrSyntax,arrIndices:arrIndices};return channel}}return null};Node.prototype.getChildById=function(id,recursive){if(this.id==id){return this}if(recursive){for(var i=0;i<this.nodes.length;i++){var n=this.nodes[i].getChildById(id,recursive);if(n){return n}}}return null};Node.prototype.getChildBySid=function(sid,recursive){if(this.sid==sid){return this}if(recursive){for(var i=0;i<this.nodes.length;i++){var n=this.nodes[i].getChildBySid(sid,recursive);if(n){return n}}}return null};Node.prototype.getTransformBySid=function(sid){for(var i=0;i<this.transforms.length;i++){if(this.transforms[i].sid==sid)return this.transforms[i]}return null};Node.prototype.parse=function(element){var url;this.id=element.getAttribute("id");this.sid=element.getAttribute("sid");this.name=element.getAttribute("name");this.type=element.getAttribute("type");this.type=this.type=="JOINT"?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.lights=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"node":this.nodes.push((new Node).parse(child));break;case"instance_camera":this.cameras.push((new InstanceCamera).parse(child));break;case"instance_controller":this.controllers.push((new InstanceController).parse(child));break;case"instance_geometry":this.geometries.push((new InstanceGeometry).parse(child));break;case"instance_light":this.lights.push((new InstanceLight).parse(child));break;case"instance_node":url=child.getAttribute("url").replace(/^#/,"");var iNode=getLibraryNode(url);if(iNode){this.nodes.push((new Node).parse(iNode))}break;case"rotate":case"translate":case"scale":case"matrix":case"lookat":case"skew":this.transforms.push((new Transform).parse(child));break;case"extra":break;default:console.log(child.nodeName);break}}this.channels=getChannelsForNode(this);bakeAnimations(this);this.updateMatrix();return this};Node.prototype.updateMatrix=function(){this.matrix.identity();for(var i=0;i<this.transforms.length;i++){this.transforms[i].apply(this.matrix)}};function Transform(){this.sid="";this.type="";this.data=[];this.obj=null}Transform.prototype.parse=function(element){this.sid=element.getAttribute("sid");this.type=element.nodeName;this.data=_floats(element.textContent);this.convert();return this};Transform.prototype.convert=function(){switch(this.type){case"matrix":this.obj=getConvertedMat4(this.data);break;case"rotate":this.angle=THREE.Math.degToRad(this.data[3]);case"translate":fixCoords(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case"scale":fixCoords(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type);break}};Transform.prototype.apply=function(){var m1=new THREE.Matrix4;return function(matrix){switch(this.type){case"matrix":matrix.multiply(this.obj);break;case"translate":matrix.multiply(m1.makeTranslation(this.obj.x,this.obj.y,this.obj.z));break;case"rotate":matrix.multiply(m1.makeRotationAxis(this.obj,this.angle));break;case"scale":matrix.scale(this.obj);break}}}();Transform.prototype.update=function(data,member){var members=["X","Y","Z","ANGLE"];switch(this.type){case"matrix":if(!member){this.obj.copy(data)}else if(member.length===1){switch(member[0]){case 0:this.obj.n11=data[0];this.obj.n21=data[1];this.obj.n31=data[2];this.obj.n41=data[3];break;case 1:this.obj.n12=data[0];this.obj.n22=data[1];this.obj.n32=data[2];this.obj.n42=data[3];break;case 2:this.obj.n13=data[0];this.obj.n23=data[1];this.obj.n33=data[2];this.obj.n43=data[3];break;case 3:this.obj.n14=data[0];this.obj.n24=data[1];this.obj.n34=data[2];this.obj.n44=data[3];break}}else if(member.length===2){var propName="n"+(member[0]+1)+(member[1]+1);this.obj[propName]=data}else{console.log("Incorrect addressing of matrix in transform.")}break;case"translate":case"scale":if(Object.prototype.toString.call(member)==="[object Array]"){member=members[member[0]]}switch(member){case"X":this.obj.x=data;break;case"Y":this.obj.y=data;break;case"Z":this.obj.z=data;break;default:this.obj.x=data[0];this.obj.y=data[1];this.obj.z=data[2];break}break;case"rotate":if(Object.prototype.toString.call(member)==="[object Array]"){member=members[member[0]]}switch(member){case"X":this.obj.x=data;break;case"Y":this.obj.y=data;break;case"Z":this.obj.z=data;break;case"ANGLE":this.angle=THREE.Math.degToRad(data);break;default:this.obj.x=data[0];this.obj.y=data[1];this.obj.z=data[2];this.angle=THREE.Math.degToRad(data[3]);break}break}};function InstanceController(){this.url="";this.skeleton=[];this.instance_material=[]}InstanceController.prototype.parse=function(element){this.url=element.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!==1)continue;switch(child.nodeName){case"skeleton":this.skeleton.push(child.textContent.replace(/^#/,""));break;case"bind_material":var instances=COLLADA.evaluate(".//dae:instance_material",child,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(instances){var instance=instances.iterateNext();while(instance){this.instance_material.push((new InstanceMaterial).parse(instance));instance=instances.iterateNext()}}break;case"extra":break;default:break}}return this};function InstanceMaterial(){this.symbol="";this.target=""}InstanceMaterial.prototype.parse=function(element){this.symbol=element.getAttribute("symbol");this.target=element.getAttribute("target").replace(/^#/,"");return this};function InstanceGeometry(){this.url="";this.instance_material=[]}InstanceGeometry.prototype.parse=function(element){this.url=element.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;if(child.nodeName=="bind_material"){var instances=COLLADA.evaluate(".//dae:instance_material",child,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(instances){var instance=instances.iterateNext();while(instance){this.instance_material.push((new InstanceMaterial).parse(instance));instance=instances.iterateNext()}}break}}return this};function Geometry(){this.id="";this.mesh=null}Geometry.prototype.parse=function(element){this.id=element.getAttribute("id");extractDoubleSided(this,element);for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"mesh":this.mesh=new Mesh(this).parse(child);break;case"extra":break;default:break}}return this};function Mesh(geometry){this.geometry=geometry.id;this.primitives=[];this.vertices=null;this.geometry3js=null}Mesh.prototype.parse=function(element){this.primitives=[];var i,j;for(i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"source":_source(child);break;case"vertices":this.vertices=(new Vertices).parse(child);break;case"triangles":this.primitives.push((new Triangles).parse(child));break;case"polygons":this.primitives.push((new Polygons).parse(child));break;case"polylist":this.primitives.push((new Polylist).parse(child));break;default:break}}this.geometry3js=new THREE.Geometry;var vertexData=sources[this.vertices.input["POSITION"].source].data;for(i=0;i<vertexData.length;i+=3){this.geometry3js.vertices.push(getConvertedVec3(vertexData,i).clone())}for(i=0;i<this.primitives.length;i++){var primitive=this.primitives[i];primitive.setVertices(this.vertices);this.handlePrimitive(primitive,this.geometry3js)}this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();if(this.geometry3js.calcNormals){this.geometry3js.computeVertexNormals();delete this.geometry3js.calcNormals}return this};Mesh.prototype.handlePrimitive=function(primitive,geom){var j,k,pList=primitive.p,inputs=primitive.inputs;var input,index,idx32;var source,numParams;var vcIndex=0,vcount=3,maxOffset=0;var texture_sets=[];for(j=0;j<inputs.length;j++){input=inputs[j];var offset=input.offset+1;maxOffset=maxOffset<offset?offset:maxOffset;switch(input.semantic){case"TEXCOORD":texture_sets.push(input.set);break}}for(var pCount=0;pCount<pList.length;++pCount){var p=pList[pCount],i=0;while(i<p.length){var vs=[];var ns=[];var ts=null;var cs=[];if(primitive.vcount){vcount=primitive.vcount.length?primitive.vcount[vcIndex++]:primitive.vcount}else{vcount=p.length/maxOffset}for(j=0;j<vcount;j++){for(k=0;k<inputs.length;k++){input=inputs[k];source=sources[input.source];index=p[i+j*maxOffset+input.offset];numParams=source.accessor.params.length;idx32=index*numParams;switch(input.semantic){case"VERTEX":vs.push(index);break;case"NORMAL":ns.push(getConvertedVec3(source.data,idx32));break;case"TEXCOORD":ts=ts||{};if(ts[input.set]===undefined)ts[input.set]=[];ts[input.set].push(new THREE.Vector2(source.data[idx32],source.data[idx32+1]));break;case"COLOR":cs.push((new THREE.Color).setRGB(source.data[idx32],source.data[idx32+1],source.data[idx32+2]));break;default:break}}}if(ns.length==0){input=this.vertices.input.NORMAL;if(input){source=sources[input.source];numParams=source.accessor.params.length;for(var ndx=0,len=vs.length;ndx<len;ndx++){ns.push(getConvertedVec3(source.data,vs[ndx]*numParams))}}else{geom.calcNormals=true}}if(!ts){ts={};input=this.vertices.input.TEXCOORD;if(input){texture_sets.push(input.set);source=sources[input.source];numParams=source.accessor.params.length;for(var ndx=0,len=vs.length;ndx<len;ndx++){idx32=vs[ndx]*numParams;if(ts[input.set]===undefined)ts[input.set]=[];ts[input.set].push(new THREE.Vector2(source.data[idx32],1-source.data[idx32+1]))}}}if(cs.length==0){input=this.vertices.input.COLOR;if(input){source=sources[input.source];numParams=source.accessor.params.length;for(var ndx=0,len=vs.length;ndx<len;ndx++){idx32=vs[ndx]*numParams;cs.push((new THREE.Color).setRGB(source.data[idx32],source.data[idx32+1],source.data[idx32+2]))}}}var face=null,faces=[],uv,uvArr;if(vcount===3){faces.push(new THREE.Face3(vs[0],vs[1],vs[2],ns,cs.length?cs:new THREE.Color))}else if(vcount===4){faces.push(new THREE.Face3(vs[0],vs[1],vs[3],[ns[0],ns[1],ns[3]],cs.length?[cs[0],cs[1],cs[3]]:new THREE.Color));faces.push(new THREE.Face3(vs[1],vs[2],vs[3],[ns[1],ns[2],ns[3]],cs.length?[cs[1],cs[2],cs[3]]:new THREE.Color))}else if(vcount>4&&options.subdivideFaces){var clr=cs.length?cs:new THREE.Color,vec1,vec2,vec3,v1,v2,norm;for(k=1;k<vcount-1;){faces.push(new THREE.Face3(vs[0],vs[k],vs[k+1],[ns[0],ns[k++],ns[k]],clr))}}if(faces.length){for(var ndx=0,len=faces.length;ndx<len;ndx++){face=faces[ndx];face.daeMaterial=primitive.material;geom.faces.push(face);for(k=0;k<texture_sets.length;k++){uv=ts[texture_sets[k]];if(vcount>4){uvArr=[uv[0],uv[ndx+1],uv[ndx+2]]}else if(vcount===4){if(ndx===0){uvArr=[uv[0],uv[1],uv[3]]}else{uvArr=[uv[1].clone(),uv[2],uv[3].clone()]}}else{uvArr=[uv[0],uv[1],uv[2]]}if(geom.faceVertexUvs[k]===undefined){geom.faceVertexUvs[k]=[]}geom.faceVertexUvs[k].push(uvArr)}}}else{console.log("dropped face with vcount "+vcount+" for geometry with id: "+geom.id)}i+=maxOffset*vcount}}};function Polygons(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}Polygons.prototype.setVertices=function(vertices){for(var i=0;i<this.inputs.length;i++){if(this.inputs[i].source==vertices.id){this.inputs[i].source=vertices.input["POSITION"].source}}};Polygons.prototype.parse=function(element){this.material=element.getAttribute("material");this.count=_attr_as_int(element,"count",0);for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"input":this.inputs.push((new Input).parse(element.childNodes[i]));break;case"vcount":this.vcount=_ints(child.textContent);break;case"p":this.p.push(_ints(child.textContent));break;case"ph":console.warn("polygon holes not yet supported!");break;default:break}}return this};function Polylist(){Polygons.call(this);this.vcount=[]}Polylist.prototype=Object.create(Polygons.prototype);function Triangles(){Polygons.call(this);this.vcount=3}Triangles.prototype=Object.create(Polygons.prototype);function Accessor(){this.source="";this.count=0;this.stride=0;this.params=[]}Accessor.prototype.parse=function(element){this.params=[];this.source=element.getAttribute("source");this.count=_attr_as_int(element,"count",0);this.stride=_attr_as_int(element,"stride",0);for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeName=="param"){var param={};param["name"]=child.getAttribute("name");param["type"]=child.getAttribute("type");this.params.push(param)}}return this};function Vertices(){this.input={}}Vertices.prototype.parse=function(element){this.id=element.getAttribute("id");for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeName=="input"){var input=(new Input).parse(element.childNodes[i]);this.input[input.semantic]=input}}return this};function Input(){this.semantic="";this.offset=0;this.source="";this.set=0}Input.prototype.parse=function(element){this.semantic=element.getAttribute("semantic");this.source=element.getAttribute("source").replace(/^#/,"");this.set=_attr_as_int(element,"set",-1);this.offset=_attr_as_int(element,"offset",0);if(this.semantic=="TEXCOORD"&&this.set<0){this.set=0}return this};function Source(id){this.id=id;this.type=null}Source.prototype.parse=function(element){this.id=element.getAttribute("id");for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"bool_array":this.data=_bools(child.textContent);
this.type=child.nodeName;break;case"float_array":this.data=_floats(child.textContent);this.type=child.nodeName;break;case"int_array":this.data=_ints(child.textContent);this.type=child.nodeName;break;case"IDREF_array":case"Name_array":this.data=_strings(child.textContent);this.type=child.nodeName;break;case"technique_common":for(var j=0;j<child.childNodes.length;j++){if(child.childNodes[j].nodeName=="accessor"){this.accessor=(new Accessor).parse(child.childNodes[j]);break}}break;default:break}}return this};Source.prototype.read=function(){var result=[];var param=this.accessor.params[0];switch(param.type){case"IDREF":case"Name":case"name":case"float":return this.data;case"float4x4":for(var j=0;j<this.data.length;j+=16){var s=this.data.slice(j,j+16);var m=getConvertedMat4(s);result.push(m)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+param.type+".");break}return result};function Material(){this.id="";this.name="";this.instance_effect=null}Material.prototype.parse=function(element){this.id=element.getAttribute("id");this.name=element.getAttribute("name");for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeName=="instance_effect"){this.instance_effect=(new InstanceEffect).parse(element.childNodes[i]);break}}return this};function ColorOrTexture(){this.color=new THREE.Color;this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texture=null;this.texcoord=null;this.texOpts=null}ColorOrTexture.prototype.isColor=function(){return this.texture==null};ColorOrTexture.prototype.isTexture=function(){return this.texture!=null};ColorOrTexture.prototype.parse=function(element){if(element.nodeName=="transparent"){this.opaque=element.getAttribute("opaque")}for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"color":var rgba=_floats(child.textContent);this.color=new THREE.Color;this.color.setRGB(rgba[0],rgba[1],rgba[2]);this.color.a=rgba[3];break;case"texture":this.texture=child.getAttribute("texture");this.texcoord=child.getAttribute("texcoord");this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1};this.parseTexture(child);break;default:break}}return this};ColorOrTexture.prototype.parseTexture=function(element){if(!element.childNodes)return this;if(element.childNodes[1]&&element.childNodes[1].nodeName==="extra"){element=element.childNodes[1];if(element.childNodes[1]&&element.childNodes[1].nodeName==="technique"){element=element.childNodes[1]}}for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"offsetU":case"offsetV":case"repeatU":case"repeatV":this.texOpts[child.nodeName]=parseFloat(child.textContent);break;case"wrapU":case"wrapV":this.texOpts[child.nodeName]=parseInt(child.textContent);break;default:this.texOpts[child.nodeName]=child.textContent;break}}return this};function Shader(type,effect){this.type=type;this.effect=effect;this.material=null}Shader.prototype.parse=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"ambient":case"emission":case"diffuse":case"specular":case"transparent":this[child.nodeName]=(new ColorOrTexture).parse(child);break;case"shininess":case"reflectivity":case"index_of_refraction":case"transparency":var f=evaluateXPath(child,".//dae:float");if(f.length>0)this[child.nodeName]=parseFloat(f[0].textContent);break;default:break}}this.create();return this};Shader.prototype.create=function(){var props={};var transparent=false;if(this["transparency"]!==undefined&&this["transparent"]!==undefined){var transparentColor=this["transparent"];var transparencyLevel=(this.transparent.color.r+this.transparent.color.g+this.transparent.color.b)/3*this.transparency;if(transparencyLevel>0){transparent=true;props["transparent"]=true;props["opacity"]=1-transparencyLevel}}for(var prop in this){switch(prop){case"ambient":case"emission":case"diffuse":case"specular":var cot=this[prop];if(cot instanceof ColorOrTexture){if(cot.isTexture()){var samplerId=cot.texture;var surfaceId=this.effect.sampler[samplerId];if(surfaceId!==undefined&&surfaceId.source!==undefined){var surface=this.effect.surface[surfaceId.source];var image=images[surface.init_from];if(image){var texture=THREE.ImageUtils.loadTexture(baseUrl+image.init_from);texture.wrapS=cot.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;texture.wrapT=cot.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;texture.offset.x=cot.texOpts.offsetU;texture.offset.y=cot.texOpts.offsetV;texture.repeat.x=cot.texOpts.repeatU;texture.repeat.y=cot.texOpts.repeatV;props["map"]=texture;if(prop==="emission")props["emissive"]=16777215}}}else if(prop==="diffuse"||!transparent){if(prop==="emission"){props["emissive"]=cot.color.getHex()}else{props[prop]=cot.color.getHex()}}}break;case"shininess":props[prop]=this[prop];break;case"reflectivity":props[prop]=this[prop];if(props[prop]>0)props["envMap"]=options.defaultEnvMap;props["combine"]=THREE.MixOperation;break;case"index_of_refraction":props["refractionRatio"]=this[prop];if(this[prop]!==1)props["envMap"]=options.defaultEnvMap;break;case"transparency":break;default:break}}props["shading"]=preferredShading;props["side"]=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;switch(this.type){case"constant":if(props.emissive!=undefined)props.color=props.emissive;this.material=new THREE.MeshBasicMaterial(props);break;case"phong":case"blinn":if(props.diffuse!=undefined)props.color=props.diffuse;this.material=new THREE.MeshPhongMaterial(props);break;case"lambert":default:if(props.diffuse!=undefined)props.color=props.diffuse;this.material=new THREE.MeshLambertMaterial(props);break}return this.material};function Surface(effect){this.effect=effect;this.init_from=null;this.format=null}Surface.prototype.parse=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"init_from":this.init_from=child.textContent;break;case"format":this.format=child.textContent;break;default:console.log("unhandled Surface prop: "+child.nodeName);break}}return this};function Sampler2D(effect){this.effect=effect;this.source=null;this.wrap_s=null;this.wrap_t=null;this.minfilter=null;this.magfilter=null;this.mipfilter=null}Sampler2D.prototype.parse=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"source":this.source=child.textContent;break;case"minfilter":this.minfilter=child.textContent;break;case"magfilter":this.magfilter=child.textContent;break;case"mipfilter":this.mipfilter=child.textContent;break;case"wrap_s":this.wrap_s=child.textContent;break;case"wrap_t":this.wrap_t=child.textContent;break;default:console.log("unhandled Sampler2D prop: "+child.nodeName);break}}return this};function Effect(){this.id="";this.name="";this.shader=null;this.surface={};this.sampler={}}Effect.prototype.create=function(){if(this.shader==null){return null}};Effect.prototype.parse=function(element){this.id=element.getAttribute("id");this.name=element.getAttribute("name");extractDoubleSided(this,element);this.shader=null;for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(child));break;default:break}}return this};Effect.prototype.parseNewparam=function(element){var sid=element.getAttribute("sid");for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"surface":this.surface[sid]=new Surface(this).parse(child);break;case"sampler2D":this.sampler[sid]=new Sampler2D(this).parse(child);break;case"extra":break;default:console.log(child.nodeName);break}}};Effect.prototype.parseProfileCOMMON=function(element){var technique;for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"profile_COMMON":this.parseProfileCOMMON(child);break;case"technique":technique=child;break;case"newparam":this.parseNewparam(child);break;case"image":var _image=(new _Image).parse(child);images[_image.id]=_image;break;case"extra":break;default:console.log(child.nodeName);break}}return technique};Effect.prototype.parseTechnique=function(element){for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"constant":case"lambert":case"blinn":case"phong":this.shader=new Shader(child.nodeName,this).parse(child);break;default:break}}};function InstanceEffect(){this.url=""}InstanceEffect.prototype.parse=function(element){this.url=element.getAttribute("url").replace(/^#/,"");return this};function Animation(){this.id="";this.name="";this.source={};this.sampler=[];this.channel=[]}Animation.prototype.parse=function(element){this.id=element.getAttribute("id");this.name=element.getAttribute("name");this.source={};for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"animation":var anim=(new Animation).parse(child);for(var src in anim.source){this.source[src]=anim.source[src]}for(var j=0;j<anim.channel.length;j++){this.channel.push(anim.channel[j]);this.sampler.push(anim.sampler[j])}break;case"source":var src=(new Source).parse(child);this.source[src.id]=src;break;case"sampler":this.sampler.push(new Sampler(this).parse(child));break;case"channel":this.channel.push(new Channel(this).parse(child));break;default:break}}return this};function Channel(animation){this.animation=animation;this.source="";this.target="";this.fullSid=null;this.sid=null;this.dotSyntax=null;this.arrSyntax=null;this.arrIndices=null;this.member=null}Channel.prototype.parse=function(element){this.source=element.getAttribute("source").replace(/^#/,"");this.target=element.getAttribute("target");var parts=this.target.split("/");var id=parts.shift();var sid=parts.shift();var dotSyntax=sid.indexOf(".")>=0;var arrSyntax=sid.indexOf("(")>=0;if(dotSyntax){parts=sid.split(".");this.sid=parts.shift();this.member=parts.shift()}else if(arrSyntax){var arrIndices=sid.split("(");this.sid=arrIndices.shift();for(var j=0;j<arrIndices.length;j++){arrIndices[j]=parseInt(arrIndices[j].replace(/\)/,""))}this.arrIndices=arrIndices}else{this.sid=sid}this.fullSid=sid;this.dotSyntax=dotSyntax;this.arrSyntax=arrSyntax;return this};function Sampler(animation){this.id="";this.animation=animation;this.inputs=[];this.input=null;this.output=null;this.strideOut=null;this.interpolation=null;this.startTime=null;this.endTime=null;this.duration=0}Sampler.prototype.parse=function(element){this.id=element.getAttribute("id");this.inputs=[];for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"input":this.inputs.push((new Input).parse(child));break;default:break}}return this};Sampler.prototype.create=function(){for(var i=0;i<this.inputs.length;i++){var input=this.inputs[i];var source=this.animation.source[input.source];switch(input.semantic){case"INPUT":this.input=source.read();break;case"OUTPUT":this.output=source.read();this.strideOut=source.accessor.stride;break;case"INTERPOLATION":this.interpolation=source.read();break;case"IN_TANGENT":break;case"OUT_TANGENT":break;default:console.log(input.semantic);break}}this.startTime=0;this.endTime=0;this.duration=0;if(this.input.length){this.startTime=1e8;this.endTime=-1e8;for(var i=0;i<this.input.length;i++){this.startTime=Math.min(this.startTime,this.input[i]);this.endTime=Math.max(this.endTime,this.input[i])}this.duration=this.endTime-this.startTime}};Sampler.prototype.getData=function(type,ndx){var data;if(type==="matrix"&&this.strideOut===16){data=this.output[ndx]}else if(this.strideOut>1){data=[];ndx*=this.strideOut;for(var i=0;i<this.strideOut;++i){data[i]=this.output[ndx+i]}if(this.strideOut===3){switch(type){case"rotate":case"translate":fixCoords(data,-1);break;case"scale":fixCoords(data,1);break}}else if(this.strideOut===4&&type==="matrix"){fixCoords(data,-1)}}else{data=this.output[ndx]}return data};function Key(time){this.targets=[];this.time=time}Key.prototype.addTarget=function(fullSid,transform,member,data){this.targets.push({sid:fullSid,member:member,transform:transform,data:data})};Key.prototype.apply=function(opt_sid){for(var i=0;i<this.targets.length;++i){var target=this.targets[i];if(!opt_sid||target.sid===opt_sid){target.transform.update(target.data,target.member)}}};Key.prototype.getTarget=function(fullSid){for(var i=0;i<this.targets.length;++i){if(this.targets[i].sid===fullSid){return this.targets[i]}}return null};Key.prototype.hasTarget=function(fullSid){for(var i=0;i<this.targets.length;++i){if(this.targets[i].sid===fullSid){return true}}return false};Key.prototype.interpolate=function(nextKey,time){for(var i=0;i<this.targets.length;++i){var target=this.targets[i],nextTarget=nextKey.getTarget(target.sid),data;if(target.transform.type!=="matrix"&&nextTarget){var scale=(time-this.time)/(nextKey.time-this.time),nextData=nextTarget.data,prevData=target.data;if(scale<0||scale>1){console.log("Key.interpolate: Warning! Scale out of bounds:"+scale);scale=scale<0?0:1}if(prevData.length){data=[];for(var j=0;j<prevData.length;++j){data[j]=prevData[j]+(nextData[j]-prevData[j])*scale}}else{data=prevData+(nextData-prevData)*scale}}else{data=target.data}target.transform.update(data,target.member)}};function Camera(){this.id="";this.name="";this.technique=""}Camera.prototype.parse=function(element){this.id=element.getAttribute("id");this.name=element.getAttribute("name");for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"optics":this.parseOptics(child);break;default:break}}return this};Camera.prototype.parseOptics=function(element){for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeName=="technique_common"){var technique=element.childNodes[i];for(var j=0;j<technique.childNodes.length;j++){this.technique=technique.childNodes[j].nodeName;if(this.technique=="perspective"){var perspective=technique.childNodes[j];for(var k=0;k<perspective.childNodes.length;k++){var param=perspective.childNodes[k];switch(param.nodeName){case"yfov":this.yfov=param.textContent;break;case"xfov":this.xfov=param.textContent;break;case"znear":this.znear=param.textContent;break;case"zfar":this.zfar=param.textContent;break;case"aspect_ratio":this.aspect_ratio=param.textContent;break}}}else if(this.technique=="orthographic"){var orthographic=technique.childNodes[j];for(var k=0;k<orthographic.childNodes.length;k++){var param=orthographic.childNodes[k];switch(param.nodeName){case"xmag":this.xmag=param.textContent;break;case"ymag":this.ymag=param.textContent;break;case"znear":this.znear=param.textContent;break;case"zfar":this.zfar=param.textContent;break;case"aspect_ratio":this.aspect_ratio=param.textContent;break}}}}}}return this};function InstanceCamera(){this.url=""}InstanceCamera.prototype.parse=function(element){this.url=element.getAttribute("url").replace(/^#/,"");return this};function Light(){this.id="";this.name="";this.technique=""}Light.prototype.parse=function(element){this.id=element.getAttribute("id");this.name=element.getAttribute("name");for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];if(child.nodeType!=1)continue;switch(child.nodeName){case"technique_common":this.parseCommon(child);break;case"technique":this.parseTechnique(child);break;default:break}}return this};Light.prototype.parseCommon=function(element){for(var i=0;i<element.childNodes.length;i++){switch(element.childNodes[i].nodeName){case"directional":case"point":case"spot":case"ambient":this.technique=element.childNodes[i].nodeName;var light=element.childNodes[i];for(var j=0;j<light.childNodes.length;j++){var child=light.childNodes[j];switch(child.nodeName){case"color":var rgba=_floats(child.textContent);this.color=new THREE.Color(0);this.color.setRGB(rgba[0],rgba[1],rgba[2]);this.color.a=rgba[3];break;case"falloff_angle":this.falloff_angle=parseFloat(child.textContent);break}}}}return this};Light.prototype.parseTechnique=function(element){this.profile=element.getAttribute("profile");for(var i=0;i<element.childNodes.length;i++){var child=element.childNodes[i];switch(child.nodeName){case"intensity":this.intensity=parseFloat(child.textContent);break}}return this};function InstanceLight(){this.url=""}InstanceLight.prototype.parse=function(element){this.url=element.getAttribute("url").replace(/^#/,"");return this};function _source(element){var id=element.getAttribute("id");if(sources[id]!=undefined){return sources[id]}sources[id]=new Source(id).parse(element);return sources[id]}function _nsResolver(nsPrefix){if(nsPrefix=="dae"){return"http://www.collada.org/2005/11/COLLADASchema"}return null}function _bools(str){var raw=_strings(str);var data=[];for(var i=0,l=raw.length;i<l;i++){data.push(raw[i]=="true"||raw[i]=="1"?true:false)}return data}function _floats(str){var raw=_strings(str);var data=[];for(var i=0,l=raw.length;i<l;i++){data.push(parseFloat(raw[i]))}return data}function _ints(str){var raw=_strings(str);var data=[];for(var i=0,l=raw.length;i<l;i++){data.push(parseInt(raw[i],10))}return data}function _strings(str){return str.length>0?_trimString(str).split(/\s+/):[]}function _trimString(str){return str.replace(/^\s+/,"").replace(/\s+$/,"")}function _attr_as_float(element,name,defaultValue){if(element.hasAttribute(name)){return parseFloat(element.getAttribute(name))}else{return defaultValue}}function _attr_as_int(element,name,defaultValue){if(element.hasAttribute(name)){return parseInt(element.getAttribute(name),10)}else{return defaultValue}}function _attr_as_string(element,name,defaultValue){if(element.hasAttribute(name)){return element.getAttribute(name)}else{return defaultValue}}function _format_float(f,num){if(f===undefined){var s="0.";while(s.length<num+2){s+="0"}return s}num=num||2;var parts=f.toString().split(".");parts[1]=parts.length>1?parts[1].substr(0,num):"0";while(parts[1].length<num){parts[1]+="0"}return parts.join(".")}function evaluateXPath(node,query){var instances=COLLADA.evaluate(query,node,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);var inst=instances.iterateNext();var result=[];while(inst){result.push(inst);inst=instances.iterateNext()}return result}function extractDoubleSided(obj,element){obj.doubleSided=false;var node=COLLADA.evaluate(".//dae:extra//dae:double_sided",element,_nsResolver,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(node){node=node.iterateNext();if(node&&parseInt(node.textContent,10)===1){obj.doubleSided=true}}}function setUpConversion(){if(!options.convertUpAxis||colladaUp===options.upAxis){upConversion=null}else{switch(colladaUp){case"X":upConversion=options.upAxis==="Y"?"XtoY":"XtoZ";break;case"Y":upConversion=options.upAxis==="X"?"YtoX":"YtoZ";break;case"Z":upConversion=options.upAxis==="X"?"ZtoX":"ZtoY";break}}}function fixCoords(data,sign){if(!options.convertUpAxis||colladaUp===options.upAxis){return}switch(upConversion){case"XtoY":var tmp=data[0];data[0]=sign*data[1];data[1]=tmp;break;case"XtoZ":var tmp=data[2];data[2]=data[1];data[1]=data[0];data[0]=tmp;break;case"YtoX":var tmp=data[0];data[0]=data[1];data[1]=sign*tmp;break;case"YtoZ":var tmp=data[1];data[1]=sign*data[2];data[2]=tmp;break;case"ZtoX":var tmp=data[0];data[0]=data[1];data[1]=data[2];data[2]=tmp;break;case"ZtoY":var tmp=data[1];data[1]=data[2];data[2]=sign*tmp;break}}function getConvertedVec3(data,offset){var arr=[data[offset],data[offset+1],data[offset+2]];fixCoords(arr,-1);return new THREE.Vector3(arr[0],arr[1],arr[2])}function getConvertedMat4(data){if(options.convertUpAxis){var arr=[data[0],data[4],data[8]];fixCoords(arr,-1);data[0]=arr[0];data[4]=arr[1];data[8]=arr[2];arr=[data[1],data[5],data[9]];fixCoords(arr,-1);data[1]=arr[0];data[5]=arr[1];data[9]=arr[2];arr=[data[2],data[6],data[10]];fixCoords(arr,-1);data[2]=arr[0];data[6]=arr[1];data[10]=arr[2];arr=[data[0],data[1],data[2]];fixCoords(arr,-1);data[0]=arr[0];data[1]=arr[1];data[2]=arr[2];arr=[data[4],data[5],data[6]];fixCoords(arr,-1);data[4]=arr[0];data[5]=arr[1];data[6]=arr[2];arr=[data[8],data[9],data[10]];fixCoords(arr,-1);data[8]=arr[0];data[9]=arr[1];data[10]=arr[2];arr=[data[3],data[7],data[11]];fixCoords(arr,-1);data[3]=arr[0];data[7]=arr[1];data[11]=arr[2]}return new THREE.Matrix4(data[0],data[1],data[2],data[3],data[4],data[5],data[6],data[7],data[8],data[9],data[10],data[11],data[12],data[13],data[14],data[15])}function getConvertedIndex(index){if(index>-1&&index<3){var members=["X","Y","Z"],indices={X:0,Y:1,Z:2};index=getConvertedMember(members[index]);index=indices[index]}return index}function getConvertedMember(member){if(options.convertUpAxis){switch(member){case"X":switch(upConversion){case"XtoY":case"XtoZ":case"YtoX":member="Y";break;case"ZtoX":member="Z";break}break;case"Y":switch(upConversion){case"XtoY":case"YtoX":case"ZtoX":member="X";break;case"XtoZ":case"YtoZ":case"ZtoY":member="Z";break}break;case"Z":switch(upConversion){case"XtoZ":member="X";break;case"YtoZ":case"ZtoX":case"ZtoY":member="Y";break}break}}return member}return{load:load,parse:parse,setPreferredShading:setPreferredShading,applySkin:applySkin,geometries:geometries,options:options}};THREE.STLLoader=function(){};THREE.STLLoader.prototype={constructor:THREE.STLLoader};THREE.STLLoader.prototype.load=function(url,callback){var scope=this;var xhr=new XMLHttpRequest;function onloaded(event){if(event.target.status===200||event.target.status===0){var geometry=scope.parse(event.target.response||event.target.responseText);scope.dispatchEvent({type:"load",content:geometry});if(callback)callback(geometry)}else{scope.dispatchEvent({type:"error",message:"Couldn't load URL ["+url+"]",response:event.target.responseText})}}xhr.addEventListener("load",onloaded,false);xhr.addEventListener("progress",function(event){scope.dispatchEvent({type:"progress",loaded:event.loaded,total:event.total})},false);xhr.addEventListener("error",function(){scope.dispatchEvent({type:"error",message:"Couldn't load URL ["+url+"]"})},false);xhr.overrideMimeType("text/plain; charset=x-user-defined");xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.send(null)};THREE.STLLoader.prototype.parse=function(data){var isBinary=function(){var expect,face_size,n_faces,reader;reader=new DataView(binData);face_size=32/8*3+32/8*3*3+16/8;n_faces=reader.getUint32(80,true);expect=80+32/8+n_faces*face_size;return expect===reader.byteLength};var binData=this.ensureBinary(data);return isBinary()?this.parseBinary(binData):this.parseASCII(this.ensureString(data))};THREE.STLLoader.prototype.parseBinary=function(data){var face,geometry,n_faces,reader,length,normal,i,dataOffset,faceLength,start,vertexstart;reader=new DataView(data);n_faces=reader.getUint32(80,true);geometry=new THREE.Geometry;dataOffset=84;faceLength=12*4+2;for(face=0;face<n_faces;face++){start=dataOffset+face*faceLength;normal=new THREE.Vector3(reader.getFloat32(start,true),reader.getFloat32(start+4,true),reader.getFloat32(start+8,true));for(i=1;i<=3;i++){vertexstart=start+i*12;geometry.vertices.push(new THREE.Vector3(reader.getFloat32(vertexstart,true),reader.getFloat32(vertexstart+4,true),reader.getFloat32(vertexstart+8,true)))}length=geometry.vertices.length;geometry.faces.push(new THREE.Face3(length-3,length-2,length-1,normal))}geometry.computeCentroids();geometry.computeBoundingSphere();return geometry};THREE.STLLoader.prototype.parseASCII=function(data){var geometry,length,normal,patternFace,patternNormal,patternVertex,result,text;geometry=new THREE.Geometry;patternFace=/facet([\s\S]*?)endfacet/g;while((result=patternFace.exec(data))!=null){text=result[0];patternNormal=/normal[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;while((result=patternNormal.exec(text))!=null){normal=new THREE.Vector3(parseFloat(result[1]),parseFloat(result[3]),parseFloat(result[5]))}patternVertex=/vertex[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;while((result=patternVertex.exec(text))!=null){geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]),parseFloat(result[3]),parseFloat(result[5])))}length=geometry.vertices.length;geometry.faces.push(new THREE.Face3(length-3,length-2,length-1,normal))}geometry.computeCentroids();geometry.computeBoundingBox();geometry.computeBoundingSphere();return geometry};THREE.STLLoader.prototype.ensureString=function(buf){if(typeof buf!=="string"){var array_buffer=new Uint8Array(buf);var str="";for(var i=0;i<buf.byteLength;i++){str+=String.fromCharCode(array_buffer[i])}return str}else{return buf}};THREE.STLLoader.prototype.ensureBinary=function(buf){if(typeof buf==="string"){var array_buffer=new Uint8Array(buf.length);for(var i=0;i<buf.length;i++){array_buffer[i]=buf.charCodeAt(i)&255}return array_buffer.buffer||array_buffer}else{return buf}};THREE.EventDispatcher.prototype.apply(THREE.STLLoader.prototype);if(typeof DataView==="undefined"){DataView=function(buffer,byteOffset,byteLength){this.buffer=buffer;this.byteOffset=byteOffset||0;this.byteLength=byteLength||buffer.byteLength||buffer.length;this._isString=typeof buffer==="string"};DataView.prototype={_getCharCodes:function(buffer,start,length){start=start||0;length=length||buffer.length;var end=start+length;var codes=[];for(var i=start;i<end;i++){codes.push(buffer.charCodeAt(i)&255)}return codes},_getBytes:function(length,byteOffset,littleEndian){var result;if(littleEndian===undefined){littleEndian=this._littleEndian}if(byteOffset===undefined){byteOffset=this.byteOffset}else{byteOffset=this.byteOffset+byteOffset}if(length===undefined){length=this.byteLength-byteOffset}if(typeof byteOffset!=="number"){throw new TypeError("DataView byteOffset is not a number")}if(length<0||byteOffset+length>this.byteLength){throw new Error("DataView length or (byteOffset+length) value is out of bounds")}if(this.isString){result=this._getCharCodes(this.buffer,byteOffset,byteOffset+length)}else{result=this.buffer.slice(byteOffset,byteOffset+length)}if(!littleEndian&&length>1){if(!(result instanceof Array)){result=Array.prototype.slice.call(result)}result.reverse()}return result},getFloat64:function(byteOffset,littleEndian){var b=this._getBytes(8,byteOffset,littleEndian),sign=1-2*(b[7]>>7),exponent=((b[7]<<1&255)<<3|b[6]>>4)-((1<<10)-1),mantissa=(b[6]&15)*Math.pow(2,48)+b[5]*Math.pow(2,40)+b[4]*Math.pow(2,32)+b[3]*Math.pow(2,24)+b[2]*Math.pow(2,16)+b[1]*Math.pow(2,8)+b[0];if(exponent===1024){if(mantissa!==0){return NaN}else{return sign*Infinity}}if(exponent===-1023){return sign*mantissa*Math.pow(2,-1022-52)}return sign*(1+mantissa*Math.pow(2,-52))*Math.pow(2,exponent)},getFloat32:function(byteOffset,littleEndian){var b=this._getBytes(4,byteOffset,littleEndian),sign=1-2*(b[3]>>7),exponent=(b[3]<<1&255|b[2]>>7)-127,mantissa=(b[2]&127)<<16|b[1]<<8|b[0];if(exponent===128){if(mantissa!==0){return NaN}else{return sign*Infinity}}if(exponent===-127){return sign*mantissa*Math.pow(2,-126-23)}return sign*(1+mantissa*Math.pow(2,-23))*Math.pow(2,exponent)},getInt32:function(byteOffset,littleEndian){var b=this._getBytes(4,byteOffset,littleEndian);return b[3]<<24|b[2]<<16|b[1]<<8|b[0]},getUint32:function(byteOffset,littleEndian){return this.getInt32(byteOffset,littleEndian)>>>0},getInt16:function(byteOffset,littleEndian){return this.getUint16(byteOffset,littleEndian)<<16>>16},getUint16:function(byteOffset,littleEndian){var b=this._getBytes(2,byteOffset,littleEndian);return b[1]<<8|b[0]},getInt8:function(byteOffset){return this.getUint8(byteOffset)<<24>>24},getUint8:function(byteOffset){return this._getBytes(1,byteOffset)[0]}}}(function(){var ColladaAnimation,ColladaAnimationTarget,ColladaAsset,ColladaCamera,ColladaCameraParam,ColladaChannel,ColladaColorOrTexture,ColladaController,ColladaEffect,ColladaEffectSampler,ColladaEffectSurface,ColladaEffectTechnique,ColladaFile,ColladaFxLink,ColladaGeometry,ColladaImage,ColladaInput,ColladaInstanceCamera,ColladaInstanceController,ColladaInstanceGeometry,ColladaInstanceLight,ColladaInstanceMaterial,ColladaJoints,ColladaLight,ColladaLightParam,ColladaLoader2,ColladaMaterial,ColladaNodeTransform,ColladaSampler,ColladaSidLink,ColladaSkin,ColladaSource,ColladaTriangles,ColladaUrlLink,ColladaVertexWeights,ColladaVertices,ColladaVisualScene,ColladaVisualSceneNode,TO_RADIANS,ThreejsAnimationChannel,ThreejsMaterialMap,ThreejsSkeletonBone,getNodeInfo,graphNodeString,indentString,_checkMatrix4,_colorToHex,_fillMatrix4ColumnMajor,_fillMatrix4RowMajor,_floatsToMatrix4ColumnMajor,_floatsToMatrix4RowMajor,_floatsToVec3,_strToBools,_strToColor,_strToFloats,_strToInts,_strToStrings,__hasProp=Object.prototype.hasOwnProperty,__extends=function(child,parent){for(var key in parent){if(__hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child};indentString=function(count,str){var i,output;output="";for(i=1;i<=count;i+=1){output+="    "}output+=str;return output};graphNodeString=function(indent,str){return indentString(indent,"|-"+str)};getNodeInfo=function(node,indent,prefix){if(!(node!=null))return"";if(typeof node==="string"){return graphNodeString(indent,prefix+("'"+node+"'\n"))}if(typeof node==="number"){return graphNodeString(indent,prefix+(""+node+"\n"))}if(typeof node==="boolean"){return graphNodeString(indent,prefix+(""+node+"\n"))}if(node.getInfo!=null)return node.getInfo(indent,prefix);return graphNodeString(indent,prefix+"<unknown data type>\n")};ColladaUrlLink=function(){function ColladaUrlLink(url){this.url=url.trim().replace(/^#/,"");this.object=null}ColladaUrlLink.prototype.getInfo=function(indent,prefix){return graphNodeString(indent,prefix+("<urlLink url='"+this.url+"'>\n"))};return ColladaUrlLink}();ColladaFxLink=function(){function ColladaFxLink(url,scope){this.url=url;this.scope=scope;this.object=null}ColladaFxLink.prototype.getInfo=function(indent,prefix){return graphNodeString(indent,prefix+("<fxLink url='"+this.url+"'>\n"))};return ColladaFxLink}();ColladaSidLink=function(){function ColladaSidLink(parentId,url){var arrIndices,arrSyntax,dotSyntax,index,lastSid,parts,_i,_len;this.url=url;this.object=null;this.id=null;this.sids=[];this.member=null;this.indices=null;this.dotSyntax=false;this.arrSyntax=false;parts=url.split("/");this.id=parts.shift();if(this.id===".")this.id=parentId;while(parts.length>1){this.sids.push(parts.shift())}if(parts.length>0){lastSid=parts[0];dotSyntax=lastSid.indexOf(".")>=0;arrSyntax=lastSid.indexOf("(")>=0;if(dotSyntax){parts=lastSid.split(".");this.sids.push(parts.shift());this.member=parts.shift();this.dotSyntax=true}else if(arrSyntax){arrIndices=lastSid.split("(");this.sids.push(arrIndices.shift());this.indices=[];for(_i=0,_len=arrIndices.length;_i<_len;_i++){index=arrIndices[_i];this.indices.push(parseInt(index.replace(/\)/,""),10))}this.arrSyntax=true}else{this.sids.push(lastSid)}}}ColladaSidLink.prototype.getInfo=function(indent,prefix){var output,str;str="<sidLink id='"+this.id+"'";if(this.sids.length>0){str+=", sids='[";str+=this.sids.join(",");str+="]'"}str+=">\n";return output=graphNodeString(indent,prefix+str)};return ColladaSidLink}();ColladaAnimationTarget=function(){function ColladaAnimationTarget(){this.animTarget={};this.animTarget.channels=[];this.animTarget.activeChannels=[];this.animTarget.dataRows=null;this.animTarget.dataColumns=null}ColladaAnimationTarget.prototype.selectAnimation=function(filter){var channel,i,_len,_ref;this.animTarget.activeChannels=[];_ref=this.animTarget.channels;
for(i=0,_len=_ref.length;i<_len;i++){channel=_ref[i];if(filter(channel,i))this.animTarget.activeChannels.push(channel)}};ColladaAnimationTarget.prototype.selectAnimationById=function(id){this.selectAnimation(function(channel,i){return channel.animation.id===id})};ColladaAnimationTarget.prototype.selectAnimationByName=function(name){this.selectAnimation(function(channel,i){return channel.animation.name===name})};ColladaAnimationTarget.prototype.selectAllAnimations=function(index){this.selectAnimation(function(channel,i){return true})};ColladaAnimationTarget.prototype.applyAnimationKeyframe=function(keyframe){throw new Error("applyAnimationKeyframe() not implemented")};ColladaAnimationTarget.prototype.initAnimationTarget=function(){throw new Error("initAnimationTarget() not implemented")};ColladaAnimationTarget.prototype.resetAnimation=function(){throw new Error("resetAnimation() not implemented")};return ColladaAnimationTarget}();ColladaAsset=function(){function ColladaAsset(){this.unit=1;this.upAxis=null}ColladaAsset.prototype.getInfo=function(indent,prefix){return graphNodeString(indent,prefix+"<asset>\n")};return ColladaAsset}();ColladaVisualScene=function(){function ColladaVisualScene(){this.id=null;this.children=[];this.sidChildren=[]}ColladaVisualScene.prototype.getInfo=function(indent,prefix){var child,output,_i,_len,_ref;output=graphNodeString(indent,prefix+("<visualScene id='"+this.id+"'>\n"));if(this.children!=null){_ref=this.children;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];output+=getNodeInfo(child,indent+1,"child ")}}return output};return ColladaVisualScene}();ColladaVisualSceneNode=function(){function ColladaVisualSceneNode(){this.id=null;this.sid=null;this.name=null;this.type=null;this.layer=null;this.parent=null;this.children=[];this.sidChildren=[];this.transformations=[];this.geometries=[];this.controllers=[];this.lights=[];this.cameras=[]}ColladaVisualSceneNode.prototype.getInfo=function(indent,prefix){var child,output,_i,_j,_k,_l,_len,_len2,_len3,_len4,_len5,_m,_ref,_ref2,_ref3,_ref4,_ref5;output=graphNodeString(indent,prefix+("<visualSceneNode id='"+this.id+"', sid='"+this.sid+"', name='"+this.name+"'>\n"));if(this.geometries!=null){_ref=this.geometries;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];output+=getNodeInfo(child,indent+1,"geometry ")}}if(this.controllers!=null){_ref2=this.controllers;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){child=_ref2[_j];output+=getNodeInfo(child,indent+1,"controller ")}}if(this.lights!=null){_ref3=this.lights;for(_k=0,_len3=_ref3.length;_k<_len3;_k++){child=_ref3[_k];output+=getNodeInfo(child,indent+1,"light ")}}if(this.cameras!=null){_ref4=this.cameras;for(_l=0,_len4=_ref4.length;_l<_len4;_l++){child=_ref4[_l];output+=getNodeInfo(child,indent+1,"camera ")}}if(this.children!=null){_ref5=this.children;for(_m=0,_len5=_ref5.length;_m<_len5;_m++){child=_ref5[_m];output+=getNodeInfo(child,indent+1,"child ")}}return output};ColladaVisualSceneNode.prototype.getTransformMatrix=function(result){var temp,transform,_i,_len,_ref;temp=new THREE.Matrix4;result.identity();_ref=this.transformations;for(_i=0,_len=_ref.length;_i<_len;_i++){transform=_ref[_i];transform.getTransformMatrix(temp);result.multiplyMatrices(result,temp)}};return ColladaVisualSceneNode}();ColladaNodeTransform=function(_super){__extends(ColladaNodeTransform,_super);function ColladaNodeTransform(){ColladaNodeTransform.__super__.constructor.call(this);this.sid=null;this.type=null;this.data=null;this.originalData=null;this.node=null}ColladaNodeTransform.prototype.getTransformMatrix=function(result){var axis;switch(this.type){case"matrix":_fillMatrix4RowMajor(this.data,0,result);break;case"rotate":axis=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);result.makeRotationAxis(axis,this.data[3]*TO_RADIANS);break;case"translate":result.makeTranslation(this.data[0],this.data[1],this.data[2]);break;case"scale":result.makeScale(this.data[0],this.data[1],this.data[2]);break;default:throw new Error("transform type '"+this.type+"' not implemented")}};ColladaNodeTransform.prototype.applyAnimationKeyframe=function(keyframe){var channel,i,outputData,_i,_len,_ref,_ref2;_ref=this.animTarget.activeChannels;for(_i=0,_len=_ref.length;_i<_len;_i++){channel=_ref[_i];outputData=channel.outputData;for(i=0,_ref2=channel.count-1;i<=_ref2;i+=1){this.data[channel.offset+i]=outputData[keyframe*channel.stride+i]}}};ColladaNodeTransform.prototype.initAnimationTarget=function(){var i,x,_len,_ref;this.originalData=new Float32Array(this.data.length);_ref=this.data;for(i=0,_len=_ref.length;i<_len;i++){x=_ref[i];this.originalData[i]=this.data[i]}switch(this.type){case"matrix":this.animTarget.dataColumns=4;this.animTarget.dataRows=4;break;case"rotate":this.animTarget.dataColumns=4;this.animTarget.dataRows=1;break;case"translate":case"scale":this.animTarget.dataColumns=3;this.animTarget.dataRows=1;break;default:throw new Error("transform type '"+this.type+"' not implemented")}};ColladaNodeTransform.prototype.resetAnimation=function(){var i,x,_len,_ref;_ref=this.originalData;for(i=0,_len=_ref.length;i<_len;i++){x=_ref[i];this.data[i]=this.originalData[i]}};return ColladaNodeTransform}(ColladaAnimationTarget);ColladaInstanceGeometry=function(){function ColladaInstanceGeometry(){this.geometry=null;this.materials=[];this.sidChildren=[]}ColladaInstanceGeometry.prototype.getInfo=function(indent,prefix){var material,output,_i,_len,_ref;output=graphNodeString(indent,prefix+"<instanceGeometry>\n");output+=getNodeInfo(this.geometry,indent+1,"geometry ");_ref=this.materials;for(_i=0,_len=_ref.length;_i<_len;_i++){material=_ref[_i];output+=getNodeInfo(material,indent+1,"material ")}return output};return ColladaInstanceGeometry}();ColladaInstanceController=function(){function ColladaInstanceController(){this.controller=null;this.skeletons=[];this.materials=[];this.sidChildren=[]}ColladaInstanceController.prototype.getInfo=function(indent,prefix){var material,output,skeleton,_i,_j,_len,_len2,_ref,_ref2;output=graphNodeString(indent,prefix+"<instanceController>\n");output+=getNodeInfo(this.controller,indent+1,"controller ");_ref=this.skeletons;for(_i=0,_len=_ref.length;_i<_len;_i++){skeleton=_ref[_i];output+=getNodeInfo(skeleton,indent+1,"skeleton ")}_ref2=this.materials;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){material=_ref2[_j];output+=getNodeInfo(material,indent+1,"material ")}return output};return ColladaInstanceController}();ColladaInstanceMaterial=function(){function ColladaInstanceMaterial(){this.sid=null;this.symbol=null;this.material=null;this.name=null;this.vertexInputs={};this.params={}}ColladaInstanceMaterial.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<instanceMaterial sid='"+this.sid+"'>\n"));output+=getNodeInfo(this.material,indent+1,"material ");return output};return ColladaInstanceMaterial}();ColladaInstanceLight=function(){function ColladaInstanceLight(){this.sid=null;this.light=null;this.name=null;this.sidChildren=[]}ColladaInstanceLight.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+"<instanceLight>\n");output+=getNodeInfo(this.light,indent+1,"light ");return output};return ColladaInstanceLight}();ColladaInstanceCamera=function(){function ColladaInstanceCamera(){this.sid=null;this.camera=null;this.name=null;this.sidChildren=[]}ColladaInstanceCamera.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+"<instanceCamera>\n");output+=getNodeInfo(this.light,indent+1,"camera ");return output};return ColladaInstanceCamera}();ColladaImage=function(){function ColladaImage(){this.id=null;this.initFrom=null}ColladaImage.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<image id='"+this.id+"'>\n"));output+=getNodeInfo(this.initFrom,indent+1,"initFrom ");return output};return ColladaImage}();ColladaEffect=function(){function ColladaEffect(){this.id=null;this.sids={};this.technique=null}ColladaEffect.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<effect id='"+this.id+"'>\n"));output+=getNodeInfo(this.technique,indent+1,"technique ");return output};return ColladaEffect}();ColladaEffectTechnique=function(){function ColladaEffectTechnique(){this.sid=null;this.sids={};this.fxScope=null;this.shading=null;this.emission=null;this.ambient=null;this.diffuse=null;this.specular=null;this.shininess=null;this.reflective=null;this.transparent=null;this.bump=null;this.reflectivity=null;this.transparency=null;this.index_of_refraction=null}ColladaEffectTechnique.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<technique sid='"+this.sid+"'>\n"));return output};return ColladaEffectTechnique}();ColladaEffectSurface=function(){function ColladaEffectSurface(){this.sid=null;this.fxScope=null;this.type=null;this.initFrom=null;this.format=null;this.size=null;this.viewportRatio=null;this.mipLevels=null;this.mipmapGenerate=null}ColladaEffectSurface.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<surface sid='"+this.sid+"'>\n"));output+=getNodeInfo(this.initFrom,indent+1,"initFrom ");return output};return ColladaEffectSurface}();ColladaEffectSampler=function(){function ColladaEffectSampler(){this.sid=null;this.fxScope=null;this.surface=null;this.image=null;this.wrapS=null;this.wrapT=null;this.minfilter=null;this.magfilter=null;this.borderColor=null;this.mipmapMaxLevel=null;this.mipmapBias=null}ColladaEffectSampler.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<sampler sid='"+this.sid+"'>\n"));output+=getNodeInfo(this.image,indent+1,"image ");output+=getNodeInfo(this.surface,indent+1,"surface ");return output};return ColladaEffectSampler}();ColladaColorOrTexture=function(){function ColladaColorOrTexture(){this.color=null;this.textureSampler=null;this.texcoord=null;this.opaque=null;this.bumptype=null}return ColladaColorOrTexture}();ColladaMaterial=function(){function ColladaMaterial(){this.id=null;this.name=null;this.effect=null}ColladaMaterial.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<material id='"+this.id+"' name='"+this.name+"'>\n"));output+=getNodeInfo(this.effect,indent+1,"effect ");return output};return ColladaMaterial}();ColladaGeometry=function(){function ColladaGeometry(){this.id=null;this.name=null;this.sources=[];this.vertices=null;this.triangles=[]}ColladaGeometry.prototype.getInfo=function(indent,prefix){var output,source,tri,_i,_j,_len,_len2,_ref,_ref2;output=graphNodeString(indent,prefix+("<geometry id='"+this.id+"' name='"+this.name+"'>\n"));_ref=this.sources;for(_i=0,_len=_ref.length;_i<_len;_i++){source=_ref[_i];output+=getNodeInfo(source,indent+1,"source ")}output+=getNodeInfo(this.vertices,indent+1,"vertices ");_ref2=this.triangles;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){tri=_ref2[_j];output+=getNodeInfo(tri,indent+1,"triangles ")}return output};return ColladaGeometry}();ColladaSource=function(){function ColladaSource(){this.id=null;this.name=null;this.sourceId=null;this.count=null;this.stride=null;this.data=null;this.params={}}ColladaSource.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<source id='"+this.id+"' name='"+this.name+"'>\n"));output+=getNodeInfo(this.sourceId,indent+1,"sourceId ");return output};return ColladaSource}();ColladaVertices=function(){function ColladaVertices(){this.id=null;this.name=null;this.inputs=[]}ColladaVertices.prototype.getInfo=function(indent,prefix){var input,output,_i,_len,_ref;output=graphNodeString(indent,prefix+("<vertices id='"+this.id+"' name='"+this.name+"'>\n"));_ref=this.inputs;for(_i=0,_len=_ref.length;_i<_len;_i++){input=_ref[_i];output+=getNodeInfo(input,indent+1,"input ")}return output};return ColladaVertices}();ColladaTriangles=function(){function ColladaTriangles(){this.name=null;this.count=null;this.material=null;this.inputs=[];this.indices=null}ColladaTriangles.prototype.getInfo=function(indent,prefix){var input,output,_i,_len,_ref;output=graphNodeString(indent,prefix+("<triangles name='"+this.name+"'>\n"));output+=getNodeInfo(this.material,indent+1,"material ");_ref=this.inputs;for(_i=0,_len=_ref.length;_i<_len;_i++){input=_ref[_i];output+=getNodeInfo(input,indent+1,"input ")}return output};return ColladaTriangles}();ColladaInput=function(){function ColladaInput(){this.semantic=null;this.source=null;this.offset=null;this.set=null}ColladaInput.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<input semantic="+this.semantic+">\n"));output+=getNodeInfo(this.source,indent+1,"source ");return output};return ColladaInput}();ColladaController=function(){function ColladaController(){this.id=null;this.name=null;this.skin=null;this.morph=null}ColladaController.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+("<controller id='"+this.id+"', name='"+this.name+"'>\n"));output+=getNodeInfo(this.skin,indent+1,"skin ");output+=getNodeInfo(this.morph,indent+1,"morph ");return output};return ColladaController}();ColladaSkin=function(){function ColladaSkin(){this.source=null;this.bindShapeMatrix=null;this.sources=[];this.joints=null;this.vertexWeights=null}ColladaSkin.prototype.getInfo=function(indent,prefix){var output,source,_i,_len,_ref;output=graphNodeString(indent,prefix+("<skin source='"+this.source+"'>\n"));output+=getNodeInfo(this.bindShapeMatrix,indent+1,"bind_shape_matrix ");_ref=this.sources;for(_i=0,_len=_ref.length;_i<_len;_i++){source=_ref[_i];output+=getNodeInfo(source,indent+1,"source ")}output+=getNodeInfo(this.joints,indent+1,"joints ");output+=getNodeInfo(this.vertexWeights,indent+1,"vertex_weights ");return output};return ColladaSkin}();ColladaJoints=function(){function ColladaJoints(){this.joints=null;this.invBindMatrices=null}ColladaJoints.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+"<joints>\n");output+=getNodeInfo(this.joints,indent+1,"joints ");output+=getNodeInfo(this.invBindMatrices,indent+1,"invBindMatrices ");return output};return ColladaJoints}();ColladaVertexWeights=function(){function ColladaVertexWeights(){this.inputs=[];this.vcount=null;this.v=null;this.joints=null;this.weights=null}ColladaVertexWeights.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+"<vertex_weights>\n");output+=getNodeInfo(this.joints,indent+1,"joints ");output+=getNodeInfo(this.weights,indent+1,"weights ");return output};return ColladaVertexWeights}();ColladaAnimation=function(){function ColladaAnimation(){this.id=null;this.name=null;this.parent=null;this.rootId=null;this.rootName=null;this.animations=[];this.sources=[];this.samplers=[];this.channels=[]}ColladaAnimation.prototype.getInfo=function(indent,prefix){var animation,channel,output,sampler,source,_i,_j,_k,_l,_len,_len2,_len3,_len4,_ref,_ref2,_ref3,_ref4;output=graphNodeString(indent,prefix+("<animation id='"+this.id+"', name='"+name+"'>\n"));_ref=this.animations;for(_i=0,_len=_ref.length;_i<_len;_i++){animation=_ref[_i];output+=getNodeInfo(animation,indent+1,"animation ")}_ref2=this.sources;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){source=_ref2[_j];output+=getNodeInfo(source,indent+1,"source ")}_ref3=this.samplers;for(_k=0,_len3=_ref3.length;_k<_len3;_k++){sampler=_ref3[_k];output+=getNodeInfo(sampler,indent+1,"sampler ")}_ref4=this.channels;for(_l=0,_len4=_ref4.length;_l<_len4;_l++){channel=_ref4[_l];output+=getNodeInfo(channel,indent+1,"channel ")}return output};return ColladaAnimation}();ColladaSampler=function(){function ColladaSampler(){this.id=null;this.input=null;this.outputs=[];this.inTangents=[];this.outTangents=[];this.interpolation=null}ColladaSampler.prototype.getInfo=function(indent,prefix){var o,output,t,_i,_j,_k,_len,_len2,_len3,_ref,_ref2,_ref3;output=graphNodeString(indent,prefix+("<sampler id='"+this.id+"'>\n"));output+=getNodeInfo(this.input,indent+1,"input ");_ref=this.outputs;for(_i=0,_len=_ref.length;_i<_len;_i++){o=_ref[_i];output+=getNodeInfo(o,indent+1,"output ")}_ref2=this.inTangents;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){t=_ref2[_j];output+=getNodeInfo(t,indent+1,"inTangent ")}_ref3=this.outTangents;for(_k=0,_len3=_ref3.length;_k<_len3;_k++){t=_ref3[_k];output+=getNodeInfo(t,indent+1,"outTangent ")}output+=getNodeInfo(this.interpolation,indent+1,"interpolation ");return output};return ColladaSampler}();ColladaChannel=function(){function ColladaChannel(){this.animation=null;this.source=null;this.target=null}ColladaChannel.prototype.getInfo=function(indent,prefix){var output;output=graphNodeString(indent,prefix+"<channel>\n");output+=getNodeInfo(this.source,indent+1,"source ");output+=getNodeInfo(this.target,indent+1,"target ");return output};return ColladaChannel}();ColladaLight=function(){function ColladaLight(){this.id=null;this.name=null;this.type=null;this.color=null;this.params={};this.sidChildren=[]}ColladaLight.prototype.getInfo=function(indent,prefix){return graphNodeString(indent,prefix+"<light>\n")};return ColladaLight}();ColladaLightParam=function(){function ColladaLightParam(){this.sid=null;this.name=null;this.value=null}return ColladaLightParam}();ColladaCamera=function(){function ColladaCamera(){this.id=null;this.name=null;this.type=null;this.params={};this.sidChildren=[]}ColladaCamera.prototype.getInfo=function(indent,prefix){return graphNodeString(indent,prefix+"<camera>\n")};return ColladaCamera}();ColladaCameraParam=function(){function ColladaCameraParam(){this.sid=null;this.name=null;this.value=null}return ColladaCameraParam}();ThreejsAnimationChannel=function(){function ThreejsAnimationChannel(){this.inputData=null;this.outputData=null;this.offset=null;this.stride=null;this.count=null;this.animation=null}return ThreejsAnimationChannel}();ThreejsSkeletonBone=function(){function ThreejsSkeletonBone(){this.index=null;this.node=null;this.sid=null;this.parent=null;this.isAnimated=null;this.matrix=new THREE.Matrix4;this.worldMatrix=new THREE.Matrix4;this.invBindMatrix=new THREE.Matrix4;this.skinMatrix=new THREE.Matrix4;this.worldMatrixDirty=true}ThreejsSkeletonBone.prototype.getWorldMatrix=function(){if(this.worldMatrixDirty){if(this.parent!=null){this.worldMatrix.multiplyMatrices(this.parent.getWorldMatrix(),this.matrix)}else{this.worldMatrix.copy(this.matrix)}this.worldMatrixDirty=false}return this.worldMatrix};ThreejsSkeletonBone.prototype.applyAnimation=function(frame){var transform,_i,_len,_ref;if(this.isAnimated){_ref=this.node.transformations;for(_i=0,_len=_ref.length;_i<_len;_i++){transform=_ref[_i];transform.applyAnimationKeyframe(frame)}this.node.getTransformMatrix(this.matrix)}this.worldMatrixDirty=true;return null};ThreejsSkeletonBone.prototype.updateSkinMatrix=function(bindShapeMatrix){var worldMatrix;worldMatrix=this.getWorldMatrix();this.skinMatrix.multiplyMatrices(worldMatrix,this.invBindMatrix);this.skinMatrix.multiplyMatrices(this.skinMatrix,bindShapeMatrix);return null};return ThreejsSkeletonBone}();ThreejsMaterialMap=function(){function ThreejsMaterialMap(){this.materials=[];this.indices={};this.needTangents=false}return ThreejsMaterialMap}();ColladaFile=function(){function ColladaFile(loader){var key,value,_ref;this._url=null;this._baseUrl=null;this._loader=loader;this._options={};_ref=loader.options;for(key in _ref){value=_ref[key];this._options[key]=value}this._log=loader.log;this._readyCallback=null;this._progressCallback=null;this.dae={};this.dae.ids={};this.dae.animationTargets=[];this.dae.libEffects=[];this.dae.libMaterials=[];this.dae.libGeometries=[];this.dae.libControllers=[];this.dae.libLights=[];this.dae.libCameras=[];this.dae.libImages=[];this.dae.libVisualScenes=[];this.dae.libAnimations=[];this.dae.asset=null;this.dae.scene=null;this.threejs={};this.threejs.scene=null;this.threejs.images=[];this.threejs.geometries=[];this.threejs.materials=[];this.scene=null}ColladaFile.prototype.setUrl=function(url){var parts;if(url!=null){this._url=url;parts=url.split("/");parts.pop();this._baseUrl=(parts.length<1?".":parts.join("/"))+"/"}else{this._url="";this._baseUrl=""}};ColladaFile.prototype.getLibInfo=function(lib,indent,libname){var child,numElements,output,_i,_len;if(lib==null)return"";output=graphNodeString(indent,libname+(" <"+libname+">\n"));numElements=0;for(_i=0,_len=lib.length;_i<_len;_i++){child=lib[_i];output+=getNodeInfo(child,indent+1,"");numElements+=1}if(numElements>0){return output}else{return""}};ColladaFile.prototype.getInfo=function(indent,prefix){var output;output="<collada url='"+this.url+"'>\n";output+=getNodeInfo(this.dae.asset,indent+1,"asset ");output+=getNodeInfo(this.dae.scene,indent+1,"scene ");output+=this.getLibInfo(this.dae.libEffects,indent+1,"library_effects");output+=this.getLibInfo(this.dae.libMaterials,indent+1,"library_materials");output+=this.getLibInfo(this.dae.libGeometries,indent+1,"library_geometries");output+=this.getLibInfo(this.dae.libControllers,indent+1,"library_controllers");output+=this.getLibInfo(this.dae.libLights,indent+1,"library_lights");output+=this.getLibInfo(this.dae.libCameras,indent+1,"library_cameras");output+=this.getLibInfo(this.dae.libImages,indent+1,"library_images");output+=this.getLibInfo(this.dae.libVisualScenes,indent+1,"library_visual_scenes");output+=this.getLibInfo(this.dae.libAnimations,indent+1,"library_animations");return output};ColladaFile.prototype._reportUnexpectedChild=function(parent,child){this._log("Skipped unknown <"+parent.nodeName+"> child <"+child.nodeName+">.",ColladaLoader2.messageWarning)};ColladaFile.prototype._reportUnhandledExtra=function(parent,child){this._log("Skipped element <"+parent.nodeName+">/<"+child.nodeName+">. Element is legal, but not handled by this loader.",ColladaLoader2.messageWarning)};ColladaFile.prototype._getAttributeAsFloat=function(el,name,defaultValue){var data;data=el.getAttribute(name);if(data!=null){return parseFloat(data)}else{return defaultValue}};ColladaFile.prototype._getAttributeAsInt=function(el,name,defaultValue){var data;data=el.getAttribute(name);if(data!=null){return parseInt(data,10)}else{return defaultValue}};ColladaFile.prototype._addUrlTarget=function(object,lib,needsId){var id;if(lib!=null)lib.push(object);id=object.id;if(!(id!=null)){if(needsId)this._log("Object has no ID.",ColladaLoader2.messageError);return}if(this.dae.ids[id]!=null){this._log("There is already an object with ID "+id+".",ColladaLoader2.messageError);return}this.dae.ids[id]=object};ColladaFile.prototype._resolveUrlLink=function(link){link.object=this.dae.ids[link.url];if(!(link.object!=null)){this._log("Could not resolve URL #"+link.url,ColladaLoader2.messageError);return false}return true};ColladaFile.prototype._addFxTarget=function(object,scope){var sid;sid=object.sid;if(!(sid!=null)){this._log("Cannot add a FX target: object has no SID.",ColladaLoader2.messageError);return}if(scope.sids[sid]!=null){this._log("There is already an FX target with SID "+sid+".",ColladaLoader2.messageError);return}object.fxScope=scope;scope.sids[sid]=object};ColladaFile.prototype._resolveFxLink=function(link){var scope;scope=link.scope;while(!(link.object!=null)&&scope!=null){link.object=scope.sids[link.url];scope=scope.fxScope}if(!(link.object!=null)){this._log("Could not resolve FX parameter #"+link.url,ColladaLoader2.messageError);return false}return true};ColladaFile.prototype._addSidTarget=function(object,parent){if(!(parent.sidChildren!=null))parent.sidChildren=[];parent.sidChildren.push(object)};ColladaFile.prototype._findSidTarget=function(root,sidString){var childObject,front,parentObject,queue,sid,sidChild,sids,_i,_j,_len,_len2,_ref;sids=sidString.split("/");parentObject=root;childObject=null;for(_i=0,_len=sids.length;_i<_len;_i++){sid=sids[_i];queue=[parentObject];while(queue.length!==0){front=queue.shift();if(front.sid===sid){childObject=front;break}if(front.sidChildren!=null){_ref=front.sidChildren;for(_j=0,_len2=_ref.length;_j<_len2;_j++){sidChild=_ref[_j];queue.push(sidChild)}}}if(!(childObject!=null))return null;parentObject=childObject}return childObject};ColladaFile.prototype._resolveSidLink=function(link){var baseObject,childObject,front,parentObject,queue,sid,sidChild,_i,_j,_len,_len2,_ref,_ref2;baseObject=this.dae.ids[link.id];if(!(baseObject!=null)){this._log("Could not resolve SID #"+link.url+", missing base ID "+link.id,ColladaLoader2.messageError);return false}parentObject=baseObject;childObject=null;_ref=link.sids;for(_i=0,_len=_ref.length;_i<_len;_i++){sid=_ref[_i];queue=[parentObject];while(queue.length!==0){front=queue.shift();if(front.sid===sid){childObject=front;break}if(front.sidChildren!=null){_ref2=front.sidChildren;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){sidChild=_ref2[_j];queue.push(sidChild)}}}if(!(childObject!=null)){this._log("Could not resolve SID #"+link.url+", missing SID part "+sid,ColladaLoader2.messageError);return false}parentObject=childObject}link.object=childObject;return true};ColladaFile.prototype._getLinkTarget=function(link,type){if(!(link!=null))return null;if(!(link.object!=null)){if(link instanceof ColladaUrlLink){this._resolveUrlLink(link)}else if(link instanceof ColladaSidLink){this._resolveSidLink(link)}else if(link instanceof ColladaFxLink){this._resolveFxLink(link)}else{this._log("Trying to resolve an object that is not a link",ColladaLoader2.messageError)}}if(type!=null&&link.object!=null&&!(link.object instanceof type)){this._log("Link "+link.url+" does not link to a "+type.name,ColladaLoader2.messageError)}return link.object};ColladaFile.prototype._parseXml=function(doc){var colladaElement,_ref;colladaElement=doc.childNodes[0];if((colladaElement!=null?(_ref=colladaElement.nodeName)!=null?_ref.toUpperCase():void 0:void 0)==="COLLADA"){this._parseCollada(colladaElement)}else{this._log("Can not parse document, top level element is not <COLLADA>.",ColladaLoader2.messageError)}};ColladaFile.prototype._parseCollada=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"asset":this._parseAsset(child);break;case"scene":this._parseScene(child);break;case"library_effects":this._parseLibEffect(child);break;case"library_materials":this._parseLibMaterial(child);break;case"library_geometries":this._parseLibGeometry(child);break;case"library_images":this._parseLibImage(child);break;case"library_visual_scenes":this._parseLibVisualScene(child);break;case"library_controllers":this._parseLibController(child);break;case"library_animations":this._parseLibAnimation(child);break;case"library_lights":this._parseLibLight(child);break;case"library_cameras":this._parseLibCamera(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseAsset=function(el){var child,_i,_len,_ref;if(!this.dae.asset)this.dae.asset=new ColladaAsset;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"unit":this.dae.asset.unit=this._getAttributeAsFloat(child,"meter");break;case"up_axis":this.dae.asset.upAxis=child.textContent.toUpperCase().charAt(0);break;case"contributor":case"created":case"modified":case"revision":case"title":case"subject":case"keywords":break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseScene=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"instance_visual_scene":this.dae.scene=new ColladaUrlLink(child.getAttribute("url"));break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLibVisualScene=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"visual_scene":this._parseVisualScene(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseVisualScene=function(el){var child,scene,_i,_len,_ref;scene=new ColladaVisualScene;scene.id=el.getAttribute("id");this._addUrlTarget(scene,this.dae.libVisualScenes,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"node":this._parseSceneNode(scene,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseSceneNode=function(parent,el){var child,node,_i,_len,_ref;node=new ColladaVisualSceneNode;node.id=el.getAttribute("id");node.sid=el.getAttribute("sid");node.name=el.getAttribute("name");node.type=el.getAttribute("type");node.layer=el.getAttribute("layer");node.parent=parent;parent.children.push(node);this._addUrlTarget(node,null,false);this._addSidTarget(node,parent);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"instance_geometry":this._parseInstanceGeometry(node,child);break;case"instance_controller":this._parseInstanceController(node,child);break;case"instance_light":this._parseInstanceLight(node,child);break;case"instance_camera":this._parseInstanceCamera(node,child);break;case"matrix":case"rotate":case"translate":case"scale":this._parseTransformElement(node,child);break;case"node":this._parseSceneNode(node,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseInstanceGeometry=function(parent,el){var child,geometry,_i,_len,_ref;geometry=new ColladaInstanceGeometry;geometry.geometry=new ColladaUrlLink(el.getAttribute("url"));geometry.sid=el.getAttribute("sid");parent.geometries.push(geometry);this._addSidTarget(geometry,parent);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"bind_material":this._parseBindMaterial(geometry,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseInstanceController=function(parent,el){var child,controller,_i,_len,_ref;controller=new ColladaInstanceController;controller.controller=new ColladaUrlLink(el.getAttribute("url"));controller.sid=el.getAttribute("sid");controller.name=el.getAttribute("name");parent.controllers.push(controller);this._addSidTarget(controller,parent);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"skeleton":controller.skeletons.push(new ColladaUrlLink(child.textContent));break;case"bind_material":this._parseBindMaterial(controller,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseBindMaterial=function(parent,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"technique_common":this._parseBindMaterialTechnique(parent,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseBindMaterialTechnique=function(parent,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"instance_material":this._parseInstanceMaterial(parent,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseInstanceMaterial=function(parent,el){var child,inputSemantic,inputSet,material,semantic,target,_i,_len,_ref;material=new ColladaInstanceMaterial;material.symbol=el.getAttribute("symbol");material.material=new ColladaUrlLink(el.getAttribute("target"));parent.materials.push(material);this._addSidTarget(material,parent);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"bind_vertex_input":semantic=child.getAttribute("semantic");inputSemantic=child.getAttribute("input_semantic");inputSet=child.getAttribute("input_set");if(inputSet!=null)inputSet=parseInt(inputSet,10);
material.vertexInputs[semantic]={inputSemantic:inputSemantic,inputSet:inputSet};break;case"bind":semantic=child.getAttribute("semantic");target=new ColladaSidLink(null,child.getAttribute("target"));material.params[semantic]={target:target};break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseTransformElement=function(parent,el){var expectedDataLength,transform;transform=new ColladaNodeTransform;transform.sid=el.getAttribute("sid");transform.type=el.nodeName;transform.node=parent;parent.transformations.push(transform);this._addSidTarget(transform,parent);this.dae.animationTargets.push(transform);transform.data=_strToFloats(el.textContent);expectedDataLength=0;switch(transform.type){case"matrix":expectedDataLength=16;break;case"rotate":expectedDataLength=4;break;case"translate":expectedDataLength=3;break;case"scale":expectedDataLength=3;break;case"skew":expectedDataLength=7;break;case"lookat":expectedDataLength=9;break;default:this._log("Unknown transformation type "+transform.type+".",ColladaLoader2.messageError)}if(transform.data.length!==expectedDataLength){this._log("Wrong number of elements for transformation type '"+transform.type+"': expected "+expectedDataLength+", found "+transform.data.length,ColladaLoader2.messageError)}};ColladaFile.prototype._parseInstanceLight=function(parent,el){var child,light,_i,_len,_ref;light=new ColladaInstanceLight;light.light=new ColladaUrlLink(el.getAttribute("url"));light.sid=el.getAttribute("sid");light.name=el.getAttribute("name");parent.lights.push(light);this._addSidTarget(light,parent);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"extra":this._reportUnhandledExtra(el,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseInstanceCamera=function(parent,el){var camera,child,_i,_len,_ref;camera=new ColladaInstanceCamera;camera.camera=new ColladaUrlLink(el.getAttribute("url"));camera.sid=el.getAttribute("sid");camera.name=el.getAttribute("name");parent.cameras.push(camera);this._addSidTarget(camera,parent);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"extra":this._reportUnhandledExtra(el,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLibEffect=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"effect":this._parseEffect(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseEffect=function(el){var child,effect,_i,_len,_ref;effect=new ColladaEffect;effect.id=el.getAttribute("id");this._addUrlTarget(effect,this.dae.libEffects,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"profile_COMMON":this._parseEffectProfileCommon(effect,child);break;case"profile":this._log("Skipped non-common effect profile for effect "+effect.id+".",ColladaLoader2.messageWarning);break;case"extra":break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseEffectProfileCommon=function(effect,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"newparam":this._parseEffectNewparam(effect,child);break;case"technique":this._parseEffectTechnique(effect,child);break;case"extra":this._parseTechniqueExtra(effect.technique,"COMMON",child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseEffectNewparam=function(scope,el){var child,sid,_i,_len,_ref;sid=el.getAttribute("sid");_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"surface":this._parseEffectSurface(scope,sid,child);break;case"sampler2D":this._parseEffectSampler(scope,sid,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseEffectSurface=function(scope,sid,el){var child,surface,_i,_len,_ref;surface=new ColladaEffectSurface;surface.type=el.getAttribute("type");surface.sid=sid;this._addFxTarget(surface,scope);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"init_from":surface.initFrom=new ColladaUrlLink(child.textContent);break;case"format":surface.format=child.textContent;break;case"size":surface.size=_strToFloats(child.textContent);break;case"viewport_ratio":surface.viewportRatio=_strToFloats(child.textContent);break;case"mip_levels":surface.mipLevels=parseInt(child.textContent,10);break;case"mipmap_generate":surface.mipmapGenerate=child.textContent;break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseEffectSampler=function(scope,sid,el){var child,sampler,_i,_len,_ref;sampler=new ColladaEffectSampler;sampler.sid=sid;this._addFxTarget(sampler,scope);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"source":sampler.surface=new ColladaFxLink(child.textContent,scope);break;case"instance_image":sampler.image=new ColladaUrlLink(child.getAttribute("url"));break;case"wrap_s":sampler.wrapS=child.textContent;break;case"wrap_t":sampler.wrapT=child.textContent;break;case"minfilter":sampler.minfilter=child.textContent;break;case"magfilter":sampler.magfilter=child.textContent;break;case"border_color":sampler.borderColor=_strToFloats(child.textContent);break;case"mipmap_maxlevel":sampler.mipmapMaxLevel=parseInt(child.textContent,10);break;case"mipmap_bias":sampler.mipmapBias=parseFloat(child.textContent);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseEffectTechnique=function(effect,el){var child,technique,_i,_len,_ref;technique=new ColladaEffectTechnique;technique.sid=el.getAttribute("sid");this._addFxTarget(technique,effect);effect.technique=technique;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"blinn":case"phong":case"lambert":case"constant":technique.shading=child.nodeName;this._parseTechniqueParam(technique,"COMMON",child);break;case"extra":this._parseTechniqueExtra(technique,"COMMON",child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseTechniqueParam=function(technique,profile,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"newparam":this._parseEffectNewparam(technique,child);break;case"emission":case"ambient":case"diffuse":case"specular":case"reflective":this._parseEffectColorOrTexture(technique,child);break;case"shininess":case"reflectivity":case"transparency":case"index_of_refraction":technique[child.nodeName]=parseFloat(child.childNodes[1].textContent);break;case"transparent":this._parseEffectColorOrTexture(technique,child);technique.transparent.opaque=child.getAttribute("opaque");break;case"bump":this._parseEffectColorOrTexture(technique,child);technique.bump.bumptype=child.getAttribute("bumptype");break;case"double_sided":technique.doubleSided=parseInt(child.textContent,10)===1?true:false;break;default:if(profile==="COMMON")this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseTechniqueExtra=function(technique,profile,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"technique":profile=child.getAttribute("profile");this._parseTechniqueParam(technique,profile,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseEffectColorOrTexture=function(technique,el){var child,colorOrTexture,name,texture,_i,_len,_ref;name=el.nodeName;colorOrTexture=technique[name];if(!(colorOrTexture!=null)){colorOrTexture=new ColladaColorOrTexture;technique[name]=colorOrTexture}_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"color":colorOrTexture.color=_strToColor(child.textContent);break;case"texture":texture=child.getAttribute("texture");colorOrTexture.textureSampler=new ColladaFxLink(texture,technique);colorOrTexture.texcoord=child.getAttribute("texcoord");break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLibMaterial=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"material":this._parseMaterial(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseMaterial=function(el){var child,material,_i,_len,_ref;material=new ColladaMaterial;material.id=el.getAttribute("id");material.name=el.getAttribute("name");this._addUrlTarget(material,this.dae.libMaterials,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"instance_effect":material.effect=new ColladaUrlLink(child.getAttribute("url"));break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLibGeometry=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"geometry":this._parseGeometry(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseGeometry=function(el){var child,geometry,_i,_len,_ref;geometry=new ColladaGeometry;geometry.id=el.getAttribute("id");geometry.name=el.getAttribute("name");this._addUrlTarget(geometry,this.dae.libGeometries,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"mesh":this._parseMesh(geometry,child);break;case"convex_mesh":case"spline":this._log("Geometry type "+child.nodeName+" not supported.",ColladaLoader2.messageError);break;case"extra":this._parseGeometryExtra(geometry,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseMesh=function(geometry,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"source":this._parseSource(geometry,child);break;case"vertices":this._parseVertices(geometry,child);break;case"triangles":case"polylist":case"polygons":this._parseTriangles(geometry,child);break;case"lines":case"linestrips":case"trifans":case"tristrips":this._log("Geometry primitive type "+child.nodeName+" not supported.",ColladaLoader2.messageError);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseGeometryExtra=function(geometry,el){var child,profile,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"technique":profile=child.getAttribute("profile");this._parseGeometryExtraTechnique(geometry,profile,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseGeometryExtraTechnique=function(geometry,profile,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"double_sided":geometry.doubleSided=el.textContent==="1"}}}};ColladaFile.prototype._parseSource=function(parent,el){var child,source,_i,_len,_ref;source=new ColladaSource;source.id=el.getAttribute("id");source.name=el.getAttribute("name");this._addUrlTarget(source,parent.sources,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"bool_array":source.sourceId=child.getAttribute("id");source.data=_strToBools(child.textContent);break;case"float_array":source.sourceId=child.getAttribute("id");source.data=_strToFloats(child.textContent);break;case"int_array":source.sourceId=child.getAttribute("id");source.data=_strToInts(child.textContent);break;case"IDREF_array":case"Name_array":source.sourceId=child.getAttribute("id");source.data=_strToStrings(child.textContent);break;case"technique_common":this._parseSourceTechniqueCommon(source,child);break;case"technique":break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseVertices=function(geometry,el){var child,vertices,_i,_len,_ref;vertices=new ColladaVertices;vertices.id=el.getAttribute("id");vertices.name=el.getAttribute("name");this._addUrlTarget(vertices,null,true);geometry.vertices=vertices;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"input":vertices.inputs.push(this._parseInput(child));break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseTriangles=function(geometry,el){var child,triangles,_i,_len,_ref;triangles=new ColladaTriangles;triangles.name=el.getAttribute("name");triangles.material=el.getAttribute("material");triangles.count=this._getAttributeAsInt(el,"count");triangles.type=el.nodeName;geometry.triangles.push(triangles);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"input":triangles.inputs.push(this._parseInput(child));break;case"vcount":triangles.vcount=_strToInts(child.textContent);break;case"p":triangles.indices=_strToInts(child.textContent);break;default:this._reportUnexpectedChild(el,child)}}}return triangles};ColladaFile.prototype._parseSourceTechniqueCommon=function(source,el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"accessor":this._parseAccessor(source,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseAccessor=function(source,el){var child,name,sourceId,type,_i,_len,_ref;sourceId=el.getAttribute("source");source.count=el.getAttribute("count");source.stride=this._getAttributeAsInt(el,"stride",1);if(sourceId!=="#"+source.sourceId){this._log("Non-local sources not supported, source data will be empty",ColladaLoader2.messageError)}_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"param":name=child.getAttribute("name");type=child.getAttribute("type");source.params[name]=type;break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseInput=function(el){var input;input=new ColladaInput;input.semantic=el.getAttribute("semantic");input.source=new ColladaUrlLink(el.getAttribute("source"));input.offset=this._getAttributeAsInt(el,"offset");input.set=this._getAttributeAsInt(el,"set");return input};ColladaFile.prototype._parseLibImage=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"image":this._parseImage(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseImage=function(el){var child,image,_i,_len,_ref;image=new ColladaImage;image.id=el.getAttribute("id");this._addUrlTarget(image,this.dae.libImages,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"init_from":image.initFrom=child.textContent;break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLibController=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"controller":this._parseController(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseController=function(el){var child,controller,_i,_len,_ref;controller=new ColladaController;controller.id=el.getAttribute("id");controller.name=el.getAttribute("name");this._addUrlTarget(controller,this.dae.libControllers,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"skin":this._parseSkin(controller,child);break;case"morph":this._parseMorph(controller,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseMorph=function(parent,el){this._log("Morph controllers not implemented",ColladaLoader2.messageError)};ColladaFile.prototype._parseSkin=function(parent,el){var child,skin,_i,_len,_ref;skin=new ColladaSkin;skin.source=new ColladaUrlLink(el.getAttribute("source"));if(parent.skin!=null||parent.morph!=null){this._log("Controller already has a skin or morph",ColladaLoader2.messageError)}parent.skin=skin;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"bind_shape_matrix":this._parseBindShapeMatrix(skin,child);break;case"source":this._parseSource(skin,child);break;case"joints":this._parseJoints(skin,child);break;case"vertex_weights":this._parseVertexWeights(skin,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseBindShapeMatrix=function(parent,el){parent.bindShapeMatrix=_strToFloats(el.textContent)};ColladaFile.prototype._parseJoints=function(parent,el){var child,input,inputs,joints,_i,_j,_len,_len2,_ref;joints=new ColladaJoints;if(parent.joints!=null){this._log("Skin already has a joints array",ColladaLoader2.messageError)}parent.joints=joints;inputs=[];_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"input":inputs.push(this._parseInput(child));break;default:this._reportUnexpectedChild(el,child)}}}for(_j=0,_len2=inputs.length;_j<_len2;_j++){input=inputs[_j];switch(input.semantic){case"JOINT":joints.joints=input;break;case"INV_BIND_MATRIX":joints.invBindMatrices=input;break;default:this._log("Unknown joints input semantic "+input.semantic,ColladaLoader2.messageError)}}};ColladaFile.prototype._parseVertexWeights=function(parent,el){var child,input,inputs,weights,_i,_j,_len,_len2,_ref;weights=new ColladaVertexWeights;weights.count=parseInt(el.getAttribute("count"),10);if(parent.vertexWeights!=null){this._log("Skin already has a vertex weight array",ColladaLoader2.messageError)}parent.vertexWeights=weights;inputs=[];_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"input":inputs.push(this._parseInput(child));break;case"vcount":weights.vcount=_strToInts(child.textContent);break;case"v":weights.v=_strToInts(child.textContent);break;default:this._reportUnexpectedChild(el,child)}}}for(_j=0,_len2=inputs.length;_j<_len2;_j++){input=inputs[_j];switch(input.semantic){case"JOINT":weights.joints=input;break;case"WEIGHT":weights.weights=input;break;default:this._log("Unknown vertex weight input semantic "+input.semantic,ColladaLoader2.messageError)}}};ColladaFile.prototype._parseLibAnimation=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"animation":this._parseAnimation(null,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseAnimation=function(parent,el){var animation,child,_i,_len,_ref;animation=new ColladaAnimation;animation.id=el.getAttribute("id");animation.name=el.getAttribute("name");animation.parent=parent;if(parent!=null){animation.rootId=parent.rootId;animation.rootName=parent.rootName}else{animation.rootId=animation.id;animation.rootName=animation.name}this._addUrlTarget(animation,(parent!=null?parent.animations:void 0)||this.dae.libAnimations,false);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"animation":this._parseAnimation(animation,child);break;case"source":this._parseSource(animation,child);break;case"sampler":this._parseSampler(animation,child);break;case"channel":this._parseChannel(animation,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseSampler=function(parent,el){var child,input,inputs,sampler,_i,_j,_len,_len2,_ref;sampler=new ColladaSampler;sampler.id=el.getAttribute("id");if(sampler.id!=null)this._addUrlTarget(sampler,parent.samplers,false);inputs=[];_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"input":inputs.push(this._parseInput(child));break;default:this._reportUnexpectedChild(el,child)}}}for(_j=0,_len2=inputs.length;_j<_len2;_j++){input=inputs[_j];switch(input.semantic){case"INPUT":sampler.input=input;break;case"OUTPUT":sampler.outputs.push(input);break;case"INTERPOLATION":sampler.interpolation=input;break;case"IN_TANGENT":sampler.inTangents.push(input);break;case"OUT_TANGENT":sampler.outTangents.push(input);break;default:this._log("Unknown sampler input semantic "+input.semantic,ColladaLoader2.messageError)}}};ColladaFile.prototype._parseChannel=function(parent,el){var channel,child,_i,_len,_ref;channel=new ColladaChannel;channel.source=new ColladaUrlLink(el.getAttribute("source"));channel.target=new ColladaSidLink(parent.id,el.getAttribute("target"));parent.channels.push(channel);channel.animation=parent;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1)this._reportUnexpectedChild(el,child)}};ColladaFile.prototype._parseLibLight=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"light":this._parseLight(child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLight=function(el){var child,light,_i,_len,_ref;light=new ColladaLight;light.id=el.getAttribute("id");light.name=el.getAttribute("name");if(light.id!=null)this._addUrlTarget(light,this.dae.libLights,true);_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"technique_common":this._parseLightTechniqueCommon(child,light);break;case"extra":this._reportUnhandledExtra(el,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLightTechniqueCommon=function(el,light){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"ambient":this._parseLightParams(child,"COMMON",light);break;case"directional":this._parseLightParams(child,"COMMON",light);break;case"point":this._parseLightParams(child,"COMMON",light);break;case"spot":this._parseLightParams(child,"COMMON",light);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLightParams=function(el,profile,light){var child,_i,_len,_ref;light.type=el.nodeName;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"color":this._parseLightColor(child,profile,light);break;case"constant_attenuation":this._parseLightParam(child,profile,light);break;case"linear_attenuation":this._parseLightParam(child,profile,light);break;case"quadratic_attenuation":this._parseLightParam(child,profile,light);break;case"falloff_angle":this._parseLightParam(child,profile,light);break;case"falloff_exponent":this._parseLightParam(child,profile,light);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseLightColor=function(el,profile,light){light.color=_strToFloats(el.textContent)};ColladaFile.prototype._parseLightParam=function(el,profile,light){var param;param=new ColladaLightParam;param.sid=el.getAttribute("sid");param.name=el.nodeName;light.params[param.name]=param;this._addSidTarget(param,light);param.value=parseFloat(el.textContent)};ColladaFile.prototype._parseLibCamera=function(el){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"camera":this._parseCamera(child);break;case"extra":this._reportUnhandledExtra(el,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseCamera=function(el){var camera,child,_i,_len,_ref;camera=new ColladaCamera;camera.id=el.getAttribute("id");if(camera.id!=null)this._addUrlTarget(camera,this.dae.libCameras,true);camera.name=el.getAttribute("name");_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"asset":this._reportUnhandledExtra(el,child);break;case"optics":this._parseCameraOptics(child,camera);break;case"imager":this._reportUnhandledExtra(el,child);break;case"extra":this._reportUnhandledExtra(el,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseCameraOptics=function(el,camera){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"technique_common":this._parseCameraTechniqueCommon(child,camera);break;case"technique":this._reportUnhandledExtra(el,child);break;case"extra":this._reportUnhandledExtra(el,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseCameraTechniqueCommon=function(el,camera){var child,_i,_len,_ref;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"orthographic":this._parseCameraParams(child,camera);break;case"perspective":this._parseCameraParams(child,camera);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseCameraParams=function(el,camera){var child,_i,_len,_ref;camera.type=el.nodeName;_ref=el.childNodes;for(_i=0,_len=_ref.length;_i<_len;_i++){child=_ref[_i];if(child.nodeType===1){switch(child.nodeName){case"xmag":this._parseCameraParam(child,camera);break;case"ymag":this._parseCameraParam(child,camera);break;case"xfov":this._parseCameraParam(child,camera);break;case"yfov":this._parseCameraParam(child,camera);break;case"aspect_ratio":this._parseCameraParam(child,camera);break;case"znear":this._parseCameraParam(child,camera);break;case"zfar":this._parseCameraParam(child,camera);break;case"extra":this._reportUnhandledExtra(el,child);break;default:this._reportUnexpectedChild(el,child)}}}};ColladaFile.prototype._parseCameraParam=function(el,camera){var param;param=new ColladaCameraParam;param.sid=el.getAttribute("sid");param.name=el.nodeName;camera.params[param.name]=param;this._addSidTarget(param,camera);param.value=parseFloat(el.textContent)};ColladaFile.prototype._linkAnimations=function(){var animation,target,_i,_j,_len,_len2,_ref,_ref2;_ref=this.dae.animationTargets;for(_i=0,_len=_ref.length;_i<_len;_i++){target=_ref[_i];target.initAnimationTarget()}_ref2=this.dae.libAnimations;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){animation=_ref2[_j];this._linkAnimationChannels(animation)}};ColladaFile.prototype._linkAnimationChannels=function(animation){var channel,child,inputSource,output,outputSource,sampler,target,threejsChannel,_i,_j,_len,_len2,_ref,_ref2,_ref3;_ref=animation.channels;for(_i=0,_len=_ref.length;_i<_len;_i++){channel=_ref[_i];target=this._getLinkTarget(channel.target,ColladaAnimationTarget);if(!(target!=null)){this._log("Animation channel has an invalid target '"+channel.target.url+"', animation ignored",ColladaLoader2.messageWarning);continue}sampler=this._getLinkTarget(channel.source,ColladaSampler);if(!(sampler!=null)){this._log("Animation channel has an invalid sampler '"+channel.source.url+"', animation ignored",ColladaLoader2.messageWarning);continue}inputSource=this._getLinkTarget((_ref2=sampler.input)!=null?_ref2.source:void 0);if(!(inputSource!=null)){this._log("Animation channel has no input data, animation ignored",ColladaLoader2.messageWarning);continue}if(sampler.outputs.length===0){this._log("Animation channel has no output, animation ignored",ColladaLoader2.messageWarning);continue}if(sampler.outputs.length>1){this._log("Animation channel has more than one output, using only the first output",ColladaLoader2.messageWarning)}output=sampler.outputs[0];outputSource=this._getLinkTarget(output!=null?output.source:void 0);if(!(outputSource!=null)){this._log("Animation channel has no output data, animation ignored",ColladaLoader2.messageWarning);continue}threejsChannel=new ThreejsAnimationChannel;threejsChannel.outputData=outputSource.data;threejsChannel.inputData=inputSource.data;threejsChannel.stride=outputSource.stride;threejsChannel.animation=animation;if(channel.target.dotSyntax){threejsChannel.semantic=channel.target.member;threejsChannel.count=1;switch(threejsChannel.semantic){case"X":threejsChannel.offset=0;break;case"Y":threejsChannel.offset=1;break;case"Z":threejsChannel.offset=2;break;case"W":threejsChannel.offset=3;break;case"R":threejsChannel.offset=0;break;case"G":threejsChannel.offset=1;break;case"B":threejsChannel.offset=2;break;case"U":threejsChannel.offset=0;break;case"V":threejsChannel.offset=1;break;case"S":threejsChannel.offset=0;break;case"T":threejsChannel.offset=1;break;case"P":threejsChannel.offset=2;break;case"Q":threejsChannel.offset=3;break;case"ANGLE":threejsChannel.offset=3;break;default:this._log("Unknown semantic for '"+targetLink.url+"', animation ignored",ColladaLoader2.messageWarning);continue}}else if(channel.target.arrSyntax){switch(targetLink.indices.length){case 1:threejsChannel.offset=targetLink.indices[0];break;case 2:threejsChannel.offset=targetLink.indices[0]*target.animTarget.dataRows+targetLink.indices[1];break;default:this._log("Invalid number of indices for '"+targetLink.url+"', animation ignored",ColladaLoader2.messageWarning);continue}threejsChannel.count=1}else{threejsChannel.offset=0;threejsChannel.count=target.animTarget.dataColumns*target.animTarget.dataRows}target.animTarget.channels.push(threejsChannel)}_ref3=animation.animations;for(_j=0,_len2=_ref3.length;_j<_len2;_j++){child=_ref3[_j];this._linkAnimationChannels(child)}};ColladaFile.prototype._createSceneGraph=function(){var daeChild,daeScene,threejsScene,_i,_len,_ref;daeScene=this._getLinkTarget(this.dae.scene,ColladaVisualScene);if(!(daeScene!=null))return;threejsScene=new THREE.Object3D;this.threejs.scene=threejsScene;_ref=daeScene.children;for(_i=0,_len=_ref.length;_i<_len;_i++){daeChild=_ref[_i];this._createSceneGraphNode(daeChild,threejsScene)}this.scene=threejsScene};ColladaFile.prototype._setNodeTransformation=function(daeNode,threejsNode){daeNode.getTransformMatrix(threejsNode.matrix);threejsNode.matrix.decompose(threejsNode.position,threejsNode.quaternion,threejsNode.scale);threejsNode.rotation.setFromQuaternion(threejsNode.quaternion)};ColladaFile.prototype._createSceneGraphNode=function(daeNode,threejsParent){var daeCamera,daeChild,daeController,daeGeometry,daeLight,threejsCamera,threejsChild,threejsChildren,threejsLight,threejsMesh,threejsNode,_i,_j,_k,_l,_len,_len2,_len3,_len4,_len5,_len6,_m,_n,_ref,_ref2,_ref3,_ref4,_ref5;threejsChildren=[];_ref=daeNode.geometries;for(_i=0,_len=_ref.length;_i<_len;_i++){daeGeometry=_ref[_i];threejsMesh=this._createStaticMesh(daeGeometry);if(threejsMesh!=null){threejsMesh.name=daeNode.name!=null?daeNode.name:"";threejsChildren.push(threejsMesh)}}_ref2=daeNode.controllers;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){daeController=_ref2[_j];threejsMesh=this._createAnimatedMesh(daeController);if(threejsMesh!=null){threejsMesh.name=daeNode.name!=null?daeNode.name:"";threejsChildren.push(threejsMesh)}}_ref3=daeNode.lights;for(_k=0,_len3=_ref3.length;_k<_len3;_k++){daeLight=_ref3[_k];threejsLight=this._createLight(daeLight);if(threejsLight!=null){threejsLight.name=daeNode.name!=null?daeNode.name:"";threejsChildren.push(threejsLight)}}_ref4=daeNode.cameras;for(_l=0,
_len4=_ref4.length;_l<_len4;_l++){daeCamera=_ref4[_l];threejsCamera=this._createCamera(daeCamera);if(threejsCamera!=null){threejsCamera.name=daeNode.name!=null?daeNode.name:"";threejsChildren.push(threejsCamera)}}if(threejsChildren.length>1){threejsNode=new THREE.Object3D;for(_m=0,_len5=threejsChildren.length;_m<_len5;_m++){threejsChild=threejsChildren[_m];if(threejsChild!=null)threejsNode.add(threejsChild)}threejsParent.add(threejsNode)}else if(threejsChildren.length===1){threejsNode=threejsChildren[0];threejsParent.add(threejsNode)}else if(threejsChildren.length===0){if(daeNode.type!=="JOINT"){this._log("Collada node "+daeNode.name+" did not produce any threejs nodes",ColladaLoader2.messageWarning)}threejsNode=new THREE.Object3D;threejsParent.add(threejsNode)}this._setNodeTransformation(daeNode,threejsNode);_ref5=daeNode.children;for(_n=0,_len6=_ref5.length;_n<_len6;_n++){daeChild=_ref5[_n];this._createSceneGraphNode(daeChild,threejsNode)}};ColladaFile.prototype._createLight=function(daeInstanceLight){var attConst,attLin,attQuad,color,colorHex,foAngle,foExp,light,_ref,_ref2,_ref3,_ref4,_ref5;light=this._getLinkTarget(daeInstanceLight.light,ColladaLight);if(!(light!=null)){this._log("Light instance has no light, light ignored",ColladaLoader2.messageWarning);return null}color=light.color;colorHex=color[0]*255<<16^color[1]*255<<8^color[2]*255<<0;attConst=(_ref=light.params["constant_attenuation"])!=null?_ref.value:void 0;attLin=(_ref2=light.params["linear_attenuation"])!=null?_ref2.value:void 0;attQuad=(_ref3=light.params["quadratic_attenuation"])!=null?_ref3.value:void 0;foAngle=(_ref4=light.params["falloff_angle"])!=null?_ref4.value:void 0;foExp=(_ref5=light.params["falloff_exponent"])!=null?_ref5.value:void 0;switch(light.type){case"ambient":light=new THREE.AmbientLight(colorHex);break;case"directional":light=new THREE.DirectionalLight(colorHex,1);break;case"point":light=new THREE.PointLight(colorHex,attConst,attLin);break;case"spot":light=new THREE.SpotLight(colorHex,attConst,attLin,foAngle,foExp);break;default:this._log("Unknown light type "+daeInstanceLight.type+", light ignored.",ColladaLoader2.messageError)}return light};ColladaFile.prototype._createCamera=function(daeInstanceCamera){var aspect,camera,x_fov,x_mag,y_fov,y_mag,z_max,z_min,_ref,_ref2,_ref3,_ref4,_ref5,_ref6,_ref7;camera=this._getLinkTarget(daeInstanceCamera.camera,ColladaCamera);if(!(camera!=null)){this._log("Camera instance has no camera, camera ignored",ColladaLoader2.messageWarning);return null}x_mag=(_ref=camera.params["xmag"])!=null?_ref.value:void 0;y_mag=(_ref2=camera.params["ymag"])!=null?_ref2.value:void 0;x_fov=(_ref3=camera.params["xfov"])!=null?_ref3.value:void 0;y_fov=(_ref4=camera.params["yfov"])!=null?_ref4.value:void 0;aspect=(_ref5=camera.params["aspect_ratio"])!=null?_ref5.value:void 0;z_min=(_ref6=camera.params["znear"])!=null?_ref6.value:void 0;z_max=(_ref7=camera.params["zfar"])!=null?_ref7.value:void 0;switch(camera.type){case"orthographic":if(x_mag!=null&&y_mag!=null){aspect=x_mag/y_mag}else if(y_mag!=null&&aspect!=null){x_mag=y_mag*aspect}else if(x_mag!=null&&aspect!=null){y_mag=x_mag/aspect}else if(x_mag!=null){aspect=1;y_mag=x_mag}else if(y_mag!=null){aspect=1;x_mag=y_mag}else{this._log("Not enough field of view parameters for an orthographic camera.",ColladaLoader2.messageError)}camera=new THREE.OrthographicCamera(-x_mag,+x_mag,-y_mag,+y_mag,z_min,z_max);break;case"perspective":if(x_fov!=null&&y_fov!=null){aspect=x_fov/y_fov}else if(y_fov!=null&&aspect!=null){x_fov=y_fov*aspect}else if(x_fov!=null&&aspect!=null){y_fov=x_fov/aspect}else if(x_fov!=null){aspect=1;y_fov=x_fov}else if(y_fov!=null){aspect=1;x_fov=y_fov}else{this._log("Not enough field of view parameters for a perspective camera.",ColladaLoader2.messageError)}camera=new THREE.PerspectiveCamera(y_fov,aspect,z_min,z_max);break;default:this._log("Unknown camera type "+daeInstanceCamera.type+", camera ignored.",ColladaLoader2.messageError)}return camera};ColladaFile.prototype._createStaticMesh=function(daeInstanceGeometry){var daeGeometry,mesh,threejsGeometry,threejsMaterial,_ref;daeGeometry=this._getLinkTarget(daeInstanceGeometry.geometry,ColladaGeometry);if(!(daeGeometry!=null)){this._log("Geometry instance has no geometry, mesh ignored",ColladaLoader2.messageWarning);return null}_ref=this._createGeometryAndMaterial(daeGeometry,daeInstanceGeometry.materials),threejsGeometry=_ref[0],threejsMaterial=_ref[1];mesh=new THREE.Mesh(threejsGeometry,threejsMaterial);return mesh};ColladaFile.prototype._createGeometryAndMaterial=function(daeGeometry,daeInstanceMaterials){var material,threejsGeometry,threejsMaterial,threejsMaterials,_i,_len,_ref;threejsMaterials=this._createMaterials(daeInstanceMaterials);threejsGeometry=this._createGeometry(daeGeometry,threejsMaterials);threejsMaterial=null;if(threejsMaterials.materials.length>1){threejsMaterial=new THREE.MeshFaceMaterial;_ref=threejsMaterials.materials;for(_i=0,_len=_ref.length;_i<_len;_i++){material=_ref[_i];threejsMaterial.materials.push(material)}}else{threejsMaterial=threejsMaterials.materials[0]}return[threejsGeometry,threejsMaterial]};ColladaFile.prototype._createAnimatedMesh=function(daeInstanceController,daeController){daeController=this._getLinkTarget(daeInstanceController.controller,ColladaController);if(daeController.skin!=null){return this._createSkinMesh(daeInstanceController,daeController)}if(daeController.morph!=null){return this._createMorphMesh(daeInstanceController,daeController)}this._log("Controller has neither a skin nor a morph, can not create a mesh",ColladaLoader2.messageError);return null};ColladaFile.prototype._createSkinMesh=function(daeInstanceController,daeController){var bone,bones,daeInvBindMatricesSource,daeJointsSource,daeSkin,daeSkinGeometry,i,jointNode,jointSid,mesh,parentBone,skeleton,skeletonLink,skeletonRootNodes,threejsGeometry,threejsMaterial,_i,_j,_k,_l,_len,_len2,_len3,_len4,_ref,_ref2,_ref3,_ref4,_ref5,_ref6,_ref7;daeSkin=daeController.skin;if(!(daeSkin!=null)||!(daeSkin instanceof ColladaSkin)){this._log("Controller for a skinned mesh has no skin, mesh ignored",ColladaLoader2.messageError);return null}daeSkinGeometry=this._getLinkTarget(daeSkin.source);if(!(daeSkinGeometry!=null)){this._log("Skin for a skinned mesh has no geometry, mesh ignored",ColladaLoader2.messageError);return null}if(!this._options["useAnimations"]){_ref=this._createGeometryAndMaterial(daeSkinGeometry,daeInstanceController.materials),threejsGeometry=_ref[0],threejsMaterial=_ref[1];return new THREE.Mesh(threejsGeometry,threejsMaterial)}skeletonRootNodes=[];_ref2=daeInstanceController.skeletons;for(_i=0,_len=_ref2.length;_i<_len;_i++){skeletonLink=_ref2[_i];skeleton=this._getLinkTarget(skeletonLink,ColladaVisualSceneNode);if(!(skeleton!=null)){this._log("Controller instance for a skinned mesh uses unknown skeleton "+skeleton+", skeleton ignored",ColladaLoader2.messageError);continue}skeletonRootNodes.push(skeleton)}if(skeletonRootNodes.length===0){this._log("Controller instance for a skinned mesh has no skeleton, mesh ignored",ColladaLoader2.messageError);return null}if(!(daeSkin.joints!=null)){this._log("Skin has no joints, mesh ignored",ColladaLoader2.messageError);return null}daeJointsSource=this._getLinkTarget((_ref3=daeSkin.joints.joints)!=null?_ref3.source:void 0,ColladaSource);if(!(daeJointsSource!=null)||!(daeJointsSource.data!=null)){this._log("Skin has no joints source, mesh ignored",ColladaLoader2.messageError);return null}daeInvBindMatricesSource=this._getLinkTarget((_ref4=daeSkin.joints.invBindMatrices)!=null?_ref4.source:void 0,ColladaSource);if(!(daeInvBindMatricesSource!=null)||!(daeInvBindMatricesSource.data!=null)){this._log("Skin has no inverse bind matrix source, mesh ignored",ColladaLoader2.messageError);return null}if(daeJointsSource.data.length*16!==daeInvBindMatricesSource.data.length){this._log("Skin has an inconsistent length of joint data sources, mesh ignored",ColladaLoader2.messageError);return null}bones=[];_ref5=daeJointsSource.data;for(_j=0,_len2=_ref5.length;_j<_len2;_j++){jointSid=_ref5[_j];jointNode=this._findJointNode(jointSid,skeletonRootNodes);if(!(jointNode!=null)){this._log("Joint "+jointSid+" not found for skin with skeletons "+skeletonRootNodes.map(function(node){return node.id}).join(", ")+", mesh ignored",ColladaLoader2.messageError);return null}bone=this._createBone(jointNode,jointSid,bones);_fillMatrix4RowMajor(daeInvBindMatricesSource.data,bone.index*16,bone.invBindMatrix)}if(this._options["verboseMessages"]){this._log("Skin contains "+bones.length+" bones",ColladaLoader2.messageInfo)}i=0;while(i<bones.length){bone=bones[i];i=i+1;for(_k=0,_len3=bones.length;_k<_len3;_k++){parentBone=bones[_k];if(bone.node.parent===parentBone.node){bone.parent=parentBone;break}}if(bone.node.parent!=null&&bone.node.parent instanceof ColladaVisualSceneNode&&!(bone.parent!=null)){bone.parent=this._createBone(bone.node.parent,"",bones)}}if(this._options["verboseMessages"]){this._log("Skeleton contains "+bones.length+" bones",ColladaLoader2.messageInfo)}if(!(daeSkin.vertexWeights!=null)){this._log("Skin has no vertex weight data, mesh ignored",ColladaLoader2.messageError);return null}if(daeSkin.vertexWeights.joints.source.url!==daeSkin.joints.joints.source.url){this._log("Skin uses different data sources for joints in <joints> and <vertex_weights>, this is not supported by this loader, mesh ignored",ColladaLoader2.messageError);return null}_ref6=this._createGeometryAndMaterial(daeSkinGeometry,daeInstanceController.materials),threejsGeometry=_ref6[0],threejsMaterial=_ref6[1];if(this._options["convertSkinsToMorphs"]){if(this._addSkinMorphTargets(threejsGeometry,daeSkin,bones,threejsMaterial)){return new THREE.MorphAnimMesh(threejsGeometry,threejsMaterial)}else{return new THREE.Mesh(threejsGeometry,threejsMaterial)}}else{if(this._addSkinBones(threejsGeometry,daeSkin,bones,threejsMaterial)){mesh=new THREE.SkinnedMesh(threejsGeometry,threejsMaterial);mesh.boneInverses=[];_ref7=threejsGeometry.bones;for(_l=0,_len4=_ref7.length;_l<_len4;_l++){bone=_ref7[_l];mesh.boneInverses.push(bone.inverse)}return mesh}else{return new THREE.Mesh(threejsGeometry,threejsMaterial)}}return null};ColladaFile.prototype._findJointNode=function(jointSid,skeletonRootNodes){var jointNode,skeleton,_i,_len;jointNode=null;for(_i=0,_len=skeletonRootNodes.length;_i<_len;_i++){skeleton=skeletonRootNodes[_i];jointNode=this._findSidTarget(skeleton,jointSid);if(jointNode!=null)break}if(jointNode instanceof ColladaVisualSceneNode){return jointNode}else{return null}};ColladaFile.prototype._createBone=function(boneNode,jointSid,bones){var bone,transform,_i,_len,_ref;bone=new ThreejsSkeletonBone;bone.sid=jointSid;bone.node=boneNode;_ref=boneNode.transformations;for(_i=0,_len=_ref.length;_i<_len;_i++){transform=_ref[_i];if(transform.animTarget.channels.length>0){bone.isAnimated=true;break}}bone.matrix=new THREE.Matrix4;boneNode.getTransformMatrix(bone.matrix);bone.index=bones.length;bones.push(bone);return bone};ColladaFile.prototype._addSkinMorphTargets=function(threejsGeometry,daeSkin,bones,threejsMaterial){var bindShapeMatrix,bone,boneIndex,boneWeight,boneWeightIndex,enableWarningInvalidWeight,enableWarningNoBones,i,material,sourceVertex,sourceVertices,srcVertex,tempVertex,timesteps,totalWeight,vertex,vertexCount,vertices,vindex,vwJoints,vwJointsSource,vwV,vwVcount,vwWeights,vwWeightsSource,w,weights,_i,_j,_len,_len2,_len3,_ref,_ref2,_ref3;timesteps=this._prepareAnimations(bones);if(!timesteps>0)return null;sourceVertices=threejsGeometry.vertices;vertexCount=sourceVertices.length;vwV=daeSkin.vertexWeights.v;vwVcount=daeSkin.vertexWeights.vcount;vwJointsSource=this._getLinkTarget(daeSkin.vertexWeights.joints.source);vwWeightsSource=this._getLinkTarget(daeSkin.vertexWeights.weights.source);vwJoints=vwJointsSource!=null?vwJointsSource.data:void 0;vwWeights=vwWeightsSource!=null?vwWeightsSource.data:void 0;if(!(vwWeights!=null)){this._log("Skin has no weights data, no morph targets added for mesh",ColladaLoader2.messageError);return null}bindShapeMatrix=new THREE.Matrix4;if(daeSkin.bindShapeMatrix!=null){bindShapeMatrix=_floatsToMatrix4RowMajor(daeSkin.bindShapeMatrix,0)}tempVertex=new THREE.Vector3;enableWarningNoBones=true;enableWarningInvalidWeight=true;for(i=0,_ref=timesteps-1;i<=_ref;i+=1){this._updateSkinMatrices(bones,bindShapeMatrix,i);vertices=[];for(_i=0,_len=sourceVertices.length;_i<_len;_i++){srcVertex=sourceVertices[_i];vertices.push(new THREE.Vector3)}vindex=0;for(i=0,_len2=vertices.length;i<_len2;i++){vertex=vertices[i];sourceVertex=sourceVertices[i];weights=vwVcount[i];totalWeight=0;for(w=0,_ref2=weights-1;w<=_ref2;w+=1){boneIndex=vwV[vindex];boneWeightIndex=vwV[vindex+1];vindex+=2;boneWeight=vwWeights[boneWeightIndex];totalWeight+=boneWeight;if(boneIndex>=0){bone=bones[boneIndex];tempVertex.copy(sourceVertex);tempVertex.applyMatrix4(bone.skinMatrix);tempVertex.multiplyScalar(boneWeight);vertex.add(tempVertex)}else{tempVertex.copy(sourceVertex);tempVertex.applyMatrix4(bindShapeMatrix);tempVertex.multiplyScalar(boneWeight);vertex.add(tempVertex)}}if(weights===0){vertex.copy(sourceVertex);if(enableWarningNoBones){this._log("Skinned vertex not influenced by any bone, some vertices will be unskinned",ColladaLoader2.messageWarning);enableWarningNoBones=false}}else if(!(.01<totalWeight&&totalWeight<1e6)){vertex.copy(sourceVertex);if(enableWarningInvalidWeight){this._log("Zero or infinite total weight for skinned vertex, some vertices will be unskinned",ColladaLoader2.messageWarning);enableWarningInvalidWeight=false}}else{vertex.multiplyScalar(1/totalWeight)}}if(vindex!==vwV.length){this._log("Skinning did not consume all weights",ColladaLoader2.messageError)}threejsGeometry.morphTargets.push({name:"target",vertices:vertices})}threejsGeometry.computeMorphNormals();threejsMaterial.morphTargets=true;threejsMaterial.morphNormals=true;if(threejsMaterial.materials!=null){_ref3=threejsMaterial.materials;for(_j=0,_len3=_ref3.length;_j<_len3;_j++){material=_ref3[_j];material.morphTargets=true;material.morphNormals=true}}return true};ColladaFile.prototype._prepareAnimations=function(bones){var bone,channel,channelTimesteps,hasAnimation,timesteps,transform,_i,_j,_k,_len,_len2,_len3,_ref,_ref2;timesteps=null;for(_i=0,_len=bones.length;_i<_len;_i++){bone=bones[_i];hasAnimation=false;_ref=bone.node.transformations;for(_j=0,_len2=_ref.length;_j<_len2;_j++){transform=_ref[_j];transform.resetAnimation();transform.selectAllAnimations();_ref2=transform.animTarget.activeChannels;for(_k=0,_len3=_ref2.length;_k<_len3;_k++){channel=_ref2[_k];hasAnimation=true;channelTimesteps=channel.inputData.length;if(timesteps!=null&&channelTimesteps!==timesteps){this._log("Inconsistent number of time steps, no morph targets added for mesh. Resample all animations to fix this.",ColladaLoader2.messageError);return null}timesteps=channelTimesteps}}if(this._options["verboseMessages"]&&!hasAnimation){this._log("Joint '"+bone.sid+"' has no animation channel",ColladaLoader2.messageWarning)}}return timesteps};ColladaFile.prototype._updateSkinMatrices=function(bones,bindShapeMatrix,keyframe){var bone,_i,_j,_len,_len2;for(_i=0,_len=bones.length;_i<_len;_i++){bone=bones[_i];bone.applyAnimation(keyframe)}for(_j=0,_len2=bones.length;_j<_len2;_j++){bone=bones[_j];bone.updateSkinMatrix(bindShapeMatrix)}return null};ColladaFile.prototype._addSkinBones=function(threejsGeometry,daeSkin,bones,threejsMaterial){var bindShapeMatrix,bone,boneIndex,boneWeight,boneWeightIndex,bonesPerVertex,enableWarningInvalidWeight,enableWarningTooManyBones,i,indices,key,keyframe,material,pos,rot,scl,sourceVertices,threejsAnimation,threejsBone,threejsBoneAnimation,threejsBones,threejsSkinIndices,threejsSkinWeights,timesteps,totalWeight,vertex,vertexCount,vindex,vwJoints,vwJointsSource,vwV,vwVcount,vwWeights,vwWeightsSource,w,weightCount,weights,_i,_j,_k,_len,_len2,_len3,_len4,_ref,_ref2,_ref3,_ref4,_ref5;timesteps=this._prepareAnimations(bones);if(!timesteps>0)return null;sourceVertices=threejsGeometry.vertices;vertexCount=sourceVertices.length;vwV=daeSkin.vertexWeights.v;vwVcount=daeSkin.vertexWeights.vcount;vwJointsSource=this._getLinkTarget(daeSkin.vertexWeights.joints.source);vwWeightsSource=this._getLinkTarget(daeSkin.vertexWeights.weights.source);vwJoints=vwJointsSource!=null?vwJointsSource.data:void 0;vwWeights=vwWeightsSource!=null?vwWeightsSource.data:void 0;if(!(vwWeights!=null)){this._log("Skin has no weights data, no skin added for mesh",ColladaLoader2.messageError);return null}bindShapeMatrix=new THREE.Matrix4;if(daeSkin.bindShapeMatrix!=null){bindShapeMatrix=_floatsToMatrix4RowMajor(daeSkin.bindShapeMatrix,0)}pos=new THREE.Vector3;rot=new THREE.Quaternion;scl=new THREE.Vector3;enableWarningTooManyBones=true;enableWarningInvalidWeight=true;threejsSkinIndices=[];threejsSkinWeights=[];vindex=0;bonesPerVertex=4;indices=[0,0,0,0];weights=[0,0,0,0];for(i=0,_len=sourceVertices.length;i<_len;i++){vertex=sourceVertices[i];weightCount=vwVcount[i];if(weightCount>bonesPerVertex){if(enableWarningTooManyBones){this._log("Too many bones influence a vertex, some influences will be discarded. Threejs supports only "+bonesPerVertex+" bones per vertex.",ColladaLoader2.messageWarning);enableWarningTooManyBones=false}weightCount=bonesPerVertex}totalWeight=0;for(w=0,_ref=weightCount-1;w<=_ref;w+=1){boneIndex=vwV[vindex];boneWeightIndex=vwV[vindex+1];vindex+=2;boneWeight=vwWeights[boneWeightIndex];totalWeight+=boneWeight;indices[w]=boneIndex;weights[w]=boneWeight}for(w=weights,_ref2=bonesPerVertex-1;w<=_ref2;w+=1){indices[w]=0;weights[w]=0}if(!(.01<totalWeight&&totalWeight<1e6)){if(enableWarningInvalidWeight){this._log("Zero or infinite total weight for skinned vertex, skin will be broken",ColladaLoader2.messageWarning);enableWarningInvalidWeight=false}}else{for(w=0,_ref3=bonesPerVertex-1;w<=_ref3;w+=1){weights[w]/=totalWeight}}threejsSkinIndices.push(new THREE.Vector4(indices[0],indices[1],indices[2],indices[3]));threejsSkinWeights.push(new THREE.Vector4(weights[0],weights[1],weights[2],weights[3]))}threejsGeometry.skinIndices=threejsSkinIndices;threejsGeometry.skinWeights=threejsSkinWeights;threejsBones=[];for(_i=0,_len2=bones.length;_i<_len2;_i++){bone=bones[_i];threejsBone={};if(bone.parent!=null){threejsBone.parent=bone.parent.index}else{threejsBone.parent=-1}threejsBone.name=bone.node.name;bone.matrix.decompose(pos,rot,scl);threejsBone.pos=[pos.x,pos.y,pos.z];threejsBone.scl=[scl.x,scl.y,scl.z];threejsBone.rotq=[rot.x,rot.y,rot.z,rot.w];threejsBone.rot=null;threejsBone.inverse=new THREE.Matrix4;threejsBone.inverse.multiplyMatrices(bone.invBindMatrix,bindShapeMatrix);threejsBones.push(threejsBone)}threejsGeometry.bones=threejsBones;threejsAnimation={};threejsAnimation.name="animation";threejsAnimation.hierarchy=[];for(_j=0,_len3=bones.length;_j<_len3;_j++){bone=bones[_j];threejsBoneAnimation={};threejsBoneAnimation.parent=bone.index;threejsBoneAnimation.keys=[];for(keyframe=0,_ref4=timesteps-1;keyframe<=_ref4;keyframe+=1){bone.applyAnimation(keyframe);bone.updateSkinMatrix(bindShapeMatrix);key={};key.time=keyframe;bone.matrix.decompose(pos,rot,scl);key.pos=[pos.x,pos.y,pos.z];key.scl=[scl.x,scl.y,scl.z];key.rot=[rot.x,rot.y,rot.z,rot.w];threejsBoneAnimation.keys.push(key)}threejsAnimation.hierarchy.push(threejsBoneAnimation)}threejsAnimation.fps=30;threejsAnimation.length=timesteps-1;threejsGeometry.animation=threejsAnimation;threejsMaterial.skinning=true;if(threejsMaterial.materials!=null){_ref5=threejsMaterial.materials;for(_k=0,_len4=_ref5.length;_k<_len4;_k++){material=_ref5[_k];material.skinning=true}}return true};ColladaFile.prototype._createMorphMesh=function(daeInstanceController,daeController){this._log("Morph animated meshes not supported, mesh ignored",ColladaLoader2.messageError);return null};ColladaFile.prototype._createGeometry=function(daeGeometry,materials){var materialIndex,threejsGeometry,triangles,_i,_len,_ref;threejsGeometry=new THREE.Geometry;_ref=daeGeometry.triangles;for(_i=0,_len=_ref.length;_i<_len;_i++){triangles=_ref[_i];materialIndex=materials.indices[triangles.material];if(!(materialIndex!=null)){this._log("Material symbol "+triangles.material+" has no bound material instance",ColladaLoader2.messageError);materialIndex=0}this._addTrianglesToGeometry(daeGeometry,triangles,materialIndex,threejsGeometry)}threejsGeometry.computeFaceNormals();threejsGeometry.computeCentroids();if(materials.needtangents)threejsGeometry.computeTangents();threejsGeometry.computeBoundingBox();return threejsGeometry};ColladaFile.prototype._addTrianglesToGeometry=function(daeGeometry,triangles,materialIndex,threejsGeometry){var baseOffset0,baseOffset1,baseOffset2,c,color,data,dataTriColor,dataTriNormal,dataTriTexcoord,dataVertColor,dataVertNormal,dataVertPos,dataVertTexcoord,face,faceVertexUvs,i,indices,input,inputTriColor,inputTriNormal,inputTriTexcoord,inputTriVertices,inputVertColor,inputVertNormal,inputVertPos,inputVertTexcoord,missingFaces,n0,n1,n2,normal,numExistingFaces,numExistingTexcoordSets,numNewFaces,numNewTexcoordSets,srcTriColor,srcTriNormal,srcTriTexcoord,srcTriVertices,srcVertColor,srcVertNormal,srcVertPos,srcVertTexcoord,t0,t1,t2,texcoord,triangleBaseOffset,triangleStride,v0,v1,v2,vcount,vertexStride,_i,_j,_k,_len,_len2,_len3,_len4,_len5,_len6,_len7,_ref,_ref2,_ref3,_ref4,_step,_unused,_this=this;inputTriVertices=null;inputTriNormal=null;inputTriColor=null;inputTriTexcoord=[];_ref=triangles.inputs;for(_i=0,_len=_ref.length;_i<_len;_i++){input=_ref[_i];switch(input.semantic){case"VERTEX":inputTriVertices=input;break;case"NORMAL":inputTriNormal=input;break;case"COLOR":inputTriColor=input;break;case"TEXCOORD":inputTriTexcoord.push(input);break;default:this._log("Unknown triangles input semantic "+input.semantic+" ignored",ColladaLoader2.messageWarning)}}srcTriVertices=this._getLinkTarget(inputTriVertices.source,ColladaVertices);if(!(srcTriVertices!=null)){this._log("Geometry "+daeGeometry.id+" has no vertices",ColladaLoader2.messageError);return}srcTriNormal=this._getLinkTarget(inputTriNormal!=null?inputTriNormal.source:void 0,ColladaSource);srcTriColor=this._getLinkTarget(inputTriColor!=null?inputTriColor.source:void 0,ColladaSource);srcTriTexcoord=inputTriTexcoord.map(function(x){return _this._getLinkTarget(x!=null?x.source:void 0,ColladaSource)});inputVertPos=null;inputVertNormal=null;inputVertColor=null;inputVertTexcoord=[];_ref2=srcTriVertices.inputs;for(_j=0,_len2=_ref2.length;_j<_len2;_j++){input=_ref2[_j];switch(input.semantic){case"POSITION":inputVertPos=input;break;case"NORMAL":inputVertNormal=input;break;case"COLOR":inputVertColor=input;break;case"TEXCOORD":inputVertTexcoord.push(input);break;default:this._log("Unknown vertices input semantic "+input.semantic+" ignored",ColladaLoader2.messageWarning)}}srcVertPos=this._getLinkTarget(inputVertPos.source,ColladaSource);if(!(srcVertPos!=null)){this._log("Geometry "+daeGeometry.id+" has no vertex positions",ColladaLoader2.messageError);return}srcVertNormal=this._getLinkTarget(inputVertNormal!=null?inputVertNormal.source:void 0,ColladaSource);srcVertColor=this._getLinkTarget(inputVertColor!=null?inputVertColor.source:void 0,ColladaSource);srcVertTexcoord=inputVertTexcoord.map(function(x){return _this._getLinkTarget(x!=null?x.source:void 0,ColladaSource)});dataVertPos=this._createVector3Array(srcVertPos);dataVertNormal=this._createVector3Array(srcVertNormal);dataTriNormal=this._createVector3Array(srcTriNormal);dataVertColor=this._createColorArray(srcVertColor);dataTriColor=this._createColorArray(srcTriColor);dataVertTexcoord=srcVertTexcoord.map(function(x){return _this._createUVArray(x)});dataTriTexcoord=srcTriTexcoord.map(function(x){return _this._createUVArray(x)});threejsGeometry.vertices=dataVertPos;numNewTexcoordSets=dataVertTexcoord.length+dataTriTexcoord.length;numExistingTexcoordSets=threejsGeometry.faceVertexUvs.length;numNewFaces=triangles.count;numExistingFaces=threejsGeometry.faces.count;_ref3=threejsGeometry.faceVertexUvs;for(i=0,_len3=_ref3.length;i<_len3;i++){faceVertexUvs=_ref3[i];if(i<numNewTexcoordSets){missingFaces=faceVertexUvs.length-threejsGeometry.faces.length;this._addEmptyUVs(faceVertexUvs,missingFaces)}else{missingFaces=faceVertexUvs.length-threejsGeometry.faces.length+numNewFaces;this._addEmptyUVs(faceVertexUvs,missingFaces)}}while(threejsGeometry.faceVertexUvs.length<numNewTexcoordSets){faceVertexUvs=[];this._addEmptyUVs(faceVertexUvs,numExistingFaces);threejsGeometry.faceVertexUvs.push(faceVertexUvs)}if(triangles.type!=="triangles"){vcount=triangles.vcount;for(_k=0,_len4=vcount.length;_k<_len4;_k++){c=vcount[_k];if(c!==3){this._log("Geometry "+daeGeometry.id+" has non-triangle polygons, geometry ignored",ColladaLoader2.messageError);return}}}indices=triangles.indices;triangleStride=indices.length/triangles.count;vertexStride=triangleStride/3;_ref4=triangles.indices;for(triangleBaseOffset=0,_len5=_ref4.length,_step=triangleStride;triangleBaseOffset<_len5;triangleBaseOffset+=_step){_unused=_ref4[triangleBaseOffset];baseOffset0=triangleBaseOffset+0*vertexStride;baseOffset1=triangleBaseOffset+1*vertexStride;baseOffset2=triangleBaseOffset+2*vertexStride;v0=indices[baseOffset0+inputTriVertices.offset];v1=indices[baseOffset1+inputTriVertices.offset];v2=indices[baseOffset2+inputTriVertices.offset];if(dataVertNormal!=null){normal=[dataVertNormal[v0],dataVertNormal[v1],dataVertNormal[v2]]}else if(dataTriNormal!=null){n0=indices[baseOffset0+inputTriNormal.offset];n1=indices[baseOffset1+inputTriNormal.offset];n2=indices[baseOffset2+inputTriNormal.offset];normal=[dataTriNormal[n0],dataTriNormal[n1],dataTriNormal[n2]]}else{normal=null}if(dataVertColor!=null){color=[dataVertColor[v0],dataVertColor[v1],dataVertColor[v2]]}else if(dataTriColor!=null){n0=indices[baseOffset0+inputTriColor.offset];n1=indices[baseOffset1+inputTriColor.offset];n2=indices[baseOffset2+inputTriColor.offset];color=[dataTriColor[n0],dataTriColor[n1],dataTriColor[n2]]}else{color=null}face=new THREE.Face3(v0,v1,v2,normal,color);if(materialIndex!=null)face.materialIndex=materialIndex;threejsGeometry.faces.push(face);for(i=0,_len6=dataVertTexcoord.length;i<_len6;i++){data=dataVertTexcoord[i];if(!(data!=null)){geometry.faceVertexUvs[i].push([new THREE.Vector2(0,0),new THREE.Vector2(0,0),new THREE.Vector2(0,0)])}else{texcoord=[data[v0],data[v1],data[v2]];geometry.faceVertexUvs[i].push(texcoord)}}for(i=0,_len7=dataTriTexcoord.length;i<_len7;i++){data=dataTriTexcoord[i];if(!(data!=null)){geometry.faceVertexUvs[i].push([new THREE.Vector2(0,0),new THREE.Vector2(0,0),new THREE.Vector2(0,0)])}else{t0=indices[baseOffset0+inputTriTexcoord[i].offset];t1=indices[baseOffset1+inputTriTexcoord[i].offset];t2=indices[baseOffset2+inputTriTexcoord[i].offset];texcoord=[data[t0],data[t1],data[t2]];threejsGeometry.faceVertexUvs[i].push(texcoord)}}}};ColladaFile.prototype._addEmptyUVs=function(faceVertexUvs,count){var i,_ref;for(i=0,_ref=count-1;i<=_ref;i+=1){faceVertexUvs.push(new THREE.Vector2(0,0))}};ColladaFile.prototype._createVector3Array=function(source){var data,i,srcData,_ref;if(!(source!=null))return null;if(source.stride!==3){this._log("Vector source data does not contain 3D vectors",ColladaLoader2.messageError);return null}data=[];srcData=source.data;for(i=0,_ref=srcData.length-1;i<=_ref;i+=3){data.push(new THREE.Vector3(srcData[i],srcData[i+1],srcData[i+2]))}return data};ColladaFile.prototype._createColorArray=function(source){var data,i,srcData,_ref,_ref2;if(!(source!=null))return null;if(source.stride<3){this._log("Color source data does not contain 3+D vectors",ColladaLoader2.messageError);return null}data=[];srcData=source.data;for(i=0,_ref=srcData.length-1,_ref2=source.stride;0<=_ref?i<=_ref:i>=_ref;i+=_ref2){data.push((new THREE.Color).setRGB(srcData[i],srcData[i+1],srcData[i+2]))}return data};ColladaFile.prototype._createUVArray=function(source){var data,i,srcData,_ref,_ref2;if(!(source!=null))return null;if(source.stride<2){this._log("UV source data does not contain 2+D vectors",ColladaLoader2.messageError);return null}data=[];srcData=source.data;for(i=0,_ref=srcData.length-1,_ref2=source.stride;0<=_ref?i<=_ref:i>=_ref;i+=_ref2){data.push(new THREE.Vector2(srcData[i],1-srcData[i+1]))}return data};ColladaFile.prototype._createMaterials=function(daeInstanceMaterials){var daeInstanceMaterial,numMaterials,result,symbol,threejsMaterial,_i,_len;result=new ThreejsMaterialMap;numMaterials=0;for(_i=0,_len=daeInstanceMaterials.length;_i<_len;_i++){daeInstanceMaterial=daeInstanceMaterials[_i];symbol=daeInstanceMaterial.symbol;if(!(symbol!=null)){this._log("Material instance has no symbol, material skipped.",ColladaLoader2.messageError);continue}if(result.indices[symbol]!=null){this._log("Geometry instance tried to map material symbol "+symbol+" multiple times",ColladaLoader2.messageError);continue}threejsMaterial=this._createMaterial(daeInstanceMaterial);if(threejsMaterial.bumpMap!=null||threejsMaterial.normalMap!=null){result.needtangents=true}this.threejs.materials.push(threejsMaterial);result.materials.push(threejsMaterial);result.indices[symbol]=numMaterials++}return result};ColladaFile.prototype._createMaterial=function(daeInstanceMaterial){var daeEffect,daeMaterial;daeMaterial=this._getLinkTarget(daeInstanceMaterial.material,ColladaMaterial);if(!(daeMaterial!=null))return this._createDefaultMaterial;daeEffect=this._getLinkTarget(daeMaterial.effect,ColladaEffect);if(!(daeEffect!=null))return this._createDefaultMaterial;return this._createBuiltInMaterial(daeEffect)};ColladaFile.prototype._createShaderMaterial=function(daeEffect){var materialNormalMap,shader,technique,textureDiffuse,textureLight,textureNormal,textureSpecular,uniforms,_ref,_ref2,_ref3;technique=daeEffect.technique;shader=THREE.ShaderUtils.lib["normal"];uniforms=THREE.UniformsUtils.clone(shader.uniforms);textureNormal=this._loadThreejsTexture(technique.bump);if(textureNormal!=null){uniforms["tNormal"].texture=textureNormal;uniforms["uNormalScale"].value=.85}textureDiffuse=this._loadThreejsTexture(technique.diffuse);if(textureDiffuse!=null){uniforms["tDiffuse"].texture=textureDiffuse;uniforms["enableDiffuse"].value=true}else{uniforms["enableDiffuse"].value=false}textureSpecular=this._loadThreejsTexture(technique.specular);if(textureSpecular!=null){uniforms["tSpecular"].texture=textureSpecular;uniforms["enableSpecular"].value=true}else{uniforms["enableSpecular"].value=false}textureLight=this._loadThreejsTexture(technique.emission);if(textureLight!=null){uniforms["tAO"].texture=textureLight;uniforms["enableAO"].value=true}else{uniforms["enableAO"].value=false}if(((_ref=technique.diffuse)!=null?_ref.color:void 0)!=null){uniforms["uDiffuseColor"].value.setHex(_colorToHex(technique.diffuse.color))}if(((_ref2=technique.specular)!=null?_ref2.color:void 0)!=null){uniforms["uSpecularColor"].value.setHex(_colorToHex(technique.specular.color))}if(((_ref3=technique.ambient)!=null?_ref3.color:void 0)!=null){uniforms["uAmbientColor"].value.setHex(_colorToHex(technique.ambient.color))}if(technique.shininess!=null){uniforms["uShininess"].value=technique.shininess}if(technique.transparency!=null){uniforms["uOpacity"].value=this._getOpacity(daeEffect)}materialNormalMap=new THREE.ShaderMaterial({fragmentShader:shader.fragmentShader,vertexShader:shader.vertexShader,uniforms:uniforms,lights:true});return materialNormalMap};ColladaFile.prototype._getOpacity=function(daeEffect){var opacityMode,technique,transparency,transparent,transparentA,_ref;technique=daeEffect.technique;transparent=technique.transparent;opacityMode=transparent!=null?transparent.opaque:void 0;if(opacityMode!=null&&opacityMode!=="A_ONE"){this._log("Opacity mode "+opacityMode+" not supported, transparency will be broken",ColladaLoader2.messageWarning)}if((transparent!=null?transparent.textureSampler:void 0)!=null){this._log("Separate transparency texture not supported, transparency will be broken",ColladaLoader2.messageWarning)}transparentA=(transparent!=null?(_ref=transparent.color)!=null?_ref[3]:void 0:void 0)||1;
transparency=technique.transparency||1;return transparentA*transparency};ColladaFile.prototype._hasTransparency=function(daeEffect){var technique,_ref,_ref2;technique=daeEffect.technique;return((_ref=technique.transparent)!=null?_ref.textureSampler:void 0)!=null||0>=(_ref2=technique.transparency)&&_ref2>=1};ColladaFile.prototype._createBuiltInMaterial=function(daeEffect){var hasTransparency,opacity,params,technique;technique=daeEffect.technique;params={};this._setThreejsMaterialParam(params,technique.diffuse,"diffuse","map",false);this._setThreejsMaterialParam(params,technique.emission,"emissive",null,false);this._setThreejsMaterialParam(params,technique.ambient,"ambient","lightMap",false);this._setThreejsMaterialParam(params,technique.specular,"specular","specularMap",false);this._setThreejsMaterialParam(params,technique.bump,null,"normalMap",false);if(params["bumpMap"])params["bumpScale"]=1;if(params["normalMap"])params["normalScale"]=new THREE.Vector2(1,1);if(params["map"]!=null)params["diffuse"]=16777215;if(params["specularMap"]!=null)params["specular"]=16777215;if(!(params["diffuse"]!=null))params["diffuse"]=16777215;if(technique.shininess!=null)params["shininess"]=technique.shininess;if(technique.reflectivity!=null){params["reflectivity"]=technique.reflectivity}hasTransparency=this._hasTransparency(daeEffect);if(hasTransparency){params["transparent"]=true;opacity=this._getOpacity(daeEffect);params["opacity"]=opacity;params["alphaTest"]=.001}if(technique.doubleSided)params["side"]=THREE.DoubleSide;params["shading"]=THREE.SmoothShading;params["perPixel"]=true;switch(technique.shading){case"blinn":case"phong":params["color"]=params["diffuse"];return new THREE.MeshPhongMaterial(params);case"lambert":params["color"]=params["diffuse"];return new THREE.MeshLambertMaterial(params);case"constant":params["color"]=params["emission"];return new THREE.MeshBasicMaterial(params);default:return this._createDefaultMaterial}};ColladaFile.prototype._createDefaultMaterial=function(){return new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading})};ColladaFile.prototype._setThreejsMaterialParam=function(params,colorOrTexture,nameColor,nameTexture,replace){var threejsTexture;if(!(colorOrTexture!=null))return;if(colorOrTexture.color!=null&&nameColor!=null){if(!replace&&params[nameColor]!=null)return;params[nameColor]=_colorToHex(colorOrTexture.color)}else if(colorOrTexture.textureSampler!=null&&nameTexture!=null){if(!replace&&params[nameTexture]!=null)return;threejsTexture=this._loadThreejsTexture(colorOrTexture);if(threejsTexture!=null)params[nameTexture]=threejsTexture}};ColladaFile.prototype._loadThreejsTexture=function(colorOrTexture){var imageURL,texture,textureImage,textureSampler,textureSurface;if(!(colorOrTexture.textureSampler!=null))return null;textureSampler=this._getLinkTarget(colorOrTexture.textureSampler,ColladaEffectSampler);if(!(textureSampler!=null))return null;textureImage=null;if(textureSampler.image!=null){textureImage=this._getLinkTarget(textureSampler.image,ColladaImage)}else if(textureSampler.surface!=null){textureSurface=this._getLinkTarget(textureSampler.surface,ColladaEffectSurface);textureImage=this._getLinkTarget(textureSurface.initFrom,ColladaImage)}if(!(textureImage!=null))return null;imageURL=this._baseUrl+textureImage.initFrom;texture=this._loader._loadTextureFromURL(imageURL);return texture};return ColladaFile}();ColladaLoader2=function(){ColladaLoader2.messageTrace=0;ColladaLoader2.messageInfo=1;ColladaLoader2.messageWarning=2;ColladaLoader2.messageError=3;ColladaLoader2.messageTypes=["TRACE","INFO","WARNING","ERROR"];function ColladaLoader2(){this.log=ColladaLoader2.logConsole;this._imageCache={};this.options={useAnimations:true,convertSkinsToMorphs:false,verboseMessages:false,localImageMode:false}}ColladaLoader2.logConsole=function(msg,type){console.log("ColladaLoader2 "+ColladaLoader2.messageTypes[type]+": "+msg)};ColladaLoader2.prototype.setLog=function(logCallback){this.log=logCallback||this.logConsole};ColladaLoader2.prototype.addChachedTextures=function(textures){var key,value;for(key in textures){value=textures[key];this._imageCache[key]=value}};ColladaLoader2.prototype.load=function(url,readyCallback,progressCallback){var length,req,_ref,_this=this;length=0;if((_ref=document.implementation)!=null?_ref.createDocument:void 0){req=new XMLHttpRequest;if(typeof req.overrideMimeType==="function"){req.overrideMimeType("text/xml")}req.onreadystatechange=function(){if(req.readyState===4){if(req.status===0||req.status===200){if(req.responseXML){return _this.parse(req.responseXML,readyCallback,url)}else{return _this.log("Empty or non-existing file "+url+".",ColladaLoader2.messageError)}}}else if(req.readyState===3){if(progressCallback){if(length===0)length=req.getResponseHeader("Content-Length");return progressCallback({total:length,loaded:req.responseText.length})}}};req.open("GET",url,true);req.send(null)}else{this.log("Don't know how to parse XML!",ColladaLoader2.messageError)}};ColladaLoader2.prototype.parse=function(doc,readyCallback,url){var file;file=new ColladaFile(this);file.setUrl(url);file._readyCallback=readyCallback;file._parseXml(doc);file._linkAnimations();file._createSceneGraph();if(file._readyCallback)file._readyCallback(file);return file};ColladaLoader2.prototype._loadTextureFromURL=function(imageURL){var texture;texture=this._imageCache[imageURL];if(texture!=null)return texture;if(this.options.localImageMode)texture=this._loadImageLocal(imageURL);if(!(texture!=null))texture=this._loadImageSimple(imageURL);if(texture!=null){this._imageCache[imageURL]=texture}else{this.log("Texture "+imageURL+" could not be loaded, texture will be ignored.",ColladaLoader2.messageError)}return texture};ColladaLoader2.prototype._loadImageThreejs=function(imageURL){var texture;texture=THREE.ImageUtils.loadTexture(imageURL);texture.flipY=false;return texture};ColladaLoader2.prototype._loadImageSimple=function(imageURL){var image,texture;image=new Image;texture=new THREE.Texture(image);texture.flipY=false;texture.wrapS=THREE.RepeatWrapping;texture.wrapT=THREE.RepeatWrapping;image.onload=function(){return texture.needsUpdate=true};image.crossOrigin="anonymous";image.src=imageURL;return texture};ColladaLoader2.prototype._loadImageLocal=function(imageURL){var cachedURLBase,imageURLBase,key,texture,value,_ref,_ref2;imageURLBase=this._removeSameDirectoryPath(imageURL);_ref=this._imageCache;for(key in _ref){value=_ref[key];cachedURLBase=this._removeSameDirectoryPath(key);if(imageURLBase.indexOf(cachedURLBase)>=0){texture=value;break}}imageURLBase=this._removeSameDirectoryPath(this._removeFileExtension(imageURL));if(!(texture!=null)){_ref2=this._imageCache;for(key in _ref2){value=_ref2[key];cachedURLBase=this._removeSameDirectoryPath(this._removeFileExtension(key));if(imageURLBase.indexOf(cachedURLBase)>=0){texture=value;break}}}return texture};ColladaLoader2.prototype._removeFileExtension=function(filePath){return filePath.substr(0,filePath.lastIndexOf("."))||filePath};ColladaLoader2.prototype._removeSameDirectoryPath=function(filePath){return filePath.replace(/^.\//,"")};return ColladaLoader2}();_strToStrings=function(str){var trimmed;if(str.length>0){trimmed=str.trim();return trimmed.split(/\s+/)}else{return[]}};_strToFloats=function(str){var data,i,string,strings,_len;strings=_strToStrings(str);data=new Float32Array(strings.length);for(i=0,_len=strings.length;i<_len;i++){string=strings[i];data[i]=parseFloat(string)}return data};_strToInts=function(str){var data,i,string,strings,_len;strings=_strToStrings(str);data=new Int32Array(strings.length);for(i=0,_len=strings.length;i<_len;i++){string=strings[i];data[i]=parseInt(string,10)}return data};_strToBools=function(str){var data,i,string,strings,_len,_ref;strings=_strToStrings(str);data=new Uint8Array(strings.length);for(i=0,_len=strings.length;i<_len;i++){string=strings[i];data[i]=(_ref=string==="true"||string==="1")!=null?_ref:{1:0}}return data};_strToColor=function(str){var rgba;rgba=_strToFloats(str);if(rgba.length===4){return rgba}else{return null}};_colorToHex=function(rgba){if(rgba!=null){return Math.floor(rgba[0]*255)<<16^Math.floor(rgba[1]*255)<<8^Math.floor(rgba[2]*255)}else{return null}};_floatsToMatrix4ColumnMajor=function(data,offset){return new THREE.Matrix4(data[0+offset],data[4+offset],data[8+offset],data[12+offset],data[1+offset],data[5+offset],data[9+offset],data[13+offset],data[2+offset],data[6+offset],data[10+offset],data[14+offset],data[3+offset],data[7+offset],data[11+offset],data[15+offset])};_floatsToMatrix4RowMajor=function(data,offset){return new THREE.Matrix4(data[0+offset],data[1+offset],data[2+offset],data[3+offset],data[4+offset],data[5+offset],data[6+offset],data[7+offset],data[8+offset],data[9+offset],data[10+offset],data[11+offset],data[12+offset],data[13+offset],data[14+offset],data[15+offset])};_fillMatrix4ColumnMajor=function(data,offset,matrix){return matrix.set(data[0+offset],data[4+offset],data[8+offset],data[12+offset],data[1+offset],data[5+offset],data[9+offset],data[13+offset],data[2+offset],data[6+offset],data[10+offset],data[14+offset],data[3+offset],data[7+offset],data[11+offset],data[15+offset])};_fillMatrix4RowMajor=function(data,offset,matrix){return matrix.set(data[0+offset],data[1+offset],data[2+offset],data[3+offset],data[4+offset],data[5+offset],data[6+offset],data[7+offset],data[8+offset],data[9+offset],data[10+offset],data[11+offset],data[12+offset],data[13+offset],data[14+offset],data[15+offset])};_checkMatrix4=function(matrix){var col1len,col2len,col3len,me;me=matrix.elements;if(me[3]!==0||me[7]!==0||me[11]!==0||me[15]!==1){throw new Error("Last row isnt [0,0,0,1]")}col1len=Math.sqrt(me[0]*me[0]+me[1]*me[1]+me[2]*me[2]);col2len=Math.sqrt(me[4]*me[4]+me[5]*me[5]+me[6]*me[6]);col3len=Math.sqrt(me[8]*me[8]+me[9]*me[9]+me[10]*me[10]);if(col1len<.9||col1len>1.1){throw new Error("First column has significant scaling")}if(col2len<.9||col2len>1.1){throw new Error("Second column has significant scaling")}if(col3len<.9||col3len>1.1){throw new Error("Third column has significant scaling")}};_floatsToVec3=function(data){return new THREE.Vector3(data[0],data[1],data[2])};TO_RADIANS=Math.PI/180;ColladaLoader2.prototype["setLog"]=ColladaLoader2.prototype.setLog;ColladaLoader2.prototype["addChachedTextures"]=ColladaLoader2.prototype.addChachedTextures;ColladaLoader2.prototype["load"]=ColladaLoader2.prototype.load;ColladaLoader2.prototype["parse"]=ColladaLoader2.prototype.parse;if(typeof module!=="undefined"&&module!==null){module["exports"]=ColladaLoader2}else if(typeof window!=="undefined"&&window!==null){window["ColladaLoader2"]=ColladaLoader2}}).call(this);(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";function ToObject(val){if(val==null){throw new TypeError("Object.assign cannot be called with null or undefined")}return Object(val)}module.exports=Object.assign||function(target,source){var from;var keys;var to=ToObject(target);for(var s=1;s<arguments.length;s++){from=arguments[s];keys=Object.keys(Object(from));for(var i=0;i<keys.length;i++){to[keys[i]]=from[keys[i]]}}return to}},{}],2:[function(require,module,exports){exports.XMLSerializer=XMLSerializer;exports.DOMParser=DOMParser;exports.implementation=document.implementation},{}],3:[function(require,module,exports){var ROSLIB=this.ROSLIB||{REVISION:"0.16.0"};var assign=require("object-assign");assign(ROSLIB,require("./core"));assign(ROSLIB,require("./actionlib"));assign(ROSLIB,require("./math"));assign(ROSLIB,require("./tf"));assign(ROSLIB,require("./urdf"));module.exports=ROSLIB},{"./actionlib":8,"./core":17,"./math":22,"./tf":25,"./urdf":37,"object-assign":1}],4:[function(require,module,exports){(function(global){global.ROSLIB=require("./RosLib")}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./RosLib":3}],5:[function(require,module,exports){var Topic=require("../core/Topic");var Message=require("../core/Message");var EventEmitter2=require("./../util/shim/EventEmitter2.js").EventEmitter2;function ActionClient(options){var that=this;options=options||{};this.ros=options.ros;this.serverName=options.serverName;this.actionName=options.actionName;this.timeout=options.timeout;this.goals={};var receivedStatus=false;var feedbackListener=new Topic({ros:this.ros,name:this.serverName+"/feedback",messageType:this.actionName+"Feedback"});var statusListener=new Topic({ros:this.ros,name:this.serverName+"/status",messageType:"actionlib_msgs/GoalStatusArray"});var resultListener=new Topic({ros:this.ros,name:this.serverName+"/result",messageType:this.actionName+"Result"});this.goalTopic=new Topic({ros:this.ros,name:this.serverName+"/goal",messageType:this.actionName+"Goal"});this.cancelTopic=new Topic({ros:this.ros,name:this.serverName+"/cancel",messageType:"actionlib_msgs/GoalID"});this.goalTopic.advertise();this.cancelTopic.advertise();statusListener.subscribe(function(statusMessage){receivedStatus=true;statusMessage.status_list.forEach(function(status){var goal=that.goals[status.goal_id.id];if(goal){goal.emit("status",status)}})});feedbackListener.subscribe(function(feedbackMessage){var goal=that.goals[feedbackMessage.status.goal_id.id];if(goal){goal.emit("status",feedbackMessage.status);goal.emit("feedback",feedbackMessage.feedback)}});resultListener.subscribe(function(resultMessage){var goal=that.goals[resultMessage.status.goal_id.id];if(goal){goal.emit("status",resultMessage.status);goal.emit("result",resultMessage.result)}});if(this.timeout){setTimeout(function(){if(!receivedStatus){that.emit("timeout")}},this.timeout)}}ActionClient.prototype.__proto__=EventEmitter2.prototype;ActionClient.prototype.cancel=function(){var cancelMessage=new Message;this.cancelTopic.publish(cancelMessage)};module.exports=ActionClient},{"../core/Message":9,"../core/Topic":16,"./../util/shim/EventEmitter2.js":38}],6:[function(require,module,exports){var Message=require("../core/Message");var EventEmitter2=require("./../util/shim/EventEmitter2.js").EventEmitter2;function Goal(options){var that=this;this.actionClient=options.actionClient;this.goalMessage=options.goalMessage;this.isFinished=false;var date=new Date;this.goalID="goal_"+Math.random()+"_"+date.getTime();this.goalMessage=new Message({goal_id:{stamp:{secs:0,nsecs:0},id:this.goalID},goal:this.goalMessage});this.on("status",function(status){that.status=status});this.on("result",function(result){that.isFinished=true;that.result=result});this.on("feedback",function(feedback){that.feedback=feedback});this.actionClient.goals[this.goalID]=this}Goal.prototype.__proto__=EventEmitter2.prototype;Goal.prototype.send=function(timeout){var that=this;that.actionClient.goalTopic.publish(that.goalMessage);if(timeout){setTimeout(function(){if(!that.isFinished){that.emit("timeout")}},timeout)}};Goal.prototype.cancel=function(){var cancelMessage=new Message({id:this.goalID});this.actionClient.cancelTopic.publish(cancelMessage)};module.exports=Goal},{"../core/Message":9,"./../util/shim/EventEmitter2.js":38}],7:[function(require,module,exports){var Topic=require("../core/Topic");var Message=require("../core/Message");var EventEmitter2=require("./../util/shim/EventEmitter2.js").EventEmitter2;function SimpleActionServer(options){var that=this;options=options||{};this.ros=options.ros;this.serverName=options.serverName;this.actionName=options.actionName;this.feedbackPublisher=new Topic({ros:this.ros,name:this.serverName+"/feedback",messageType:this.actionName+"Feedback"});this.feedbackPublisher.advertise();var statusPublisher=new Topic({ros:this.ros,name:this.serverName+"/status",messageType:"actionlib_msgs/GoalStatusArray"});statusPublisher.advertise();this.resultPublisher=new Topic({ros:this.ros,name:this.serverName+"/result",messageType:this.actionName+"Result"});this.resultPublisher.advertise();var goalListener=new Topic({ros:this.ros,name:this.serverName+"/goal",messageType:this.actionName+"Goal"});var cancelListener=new Topic({ros:this.ros,name:this.serverName+"/cancel",messageType:"actionlib_msgs/GoalID"});this.statusMessage=new Message({header:{stamp:{secs:0,nsecs:100},frame_id:""},status_list:[]});this.currentGoal=null;this.nextGoal=null;goalListener.subscribe(function(goalMessage){if(that.currentGoal){that.nextGoal=goalMessage;that.emit("cancel")}else{that.statusMessage.status_list=[{goal_id:goalMessage.goal_id,status:1}];that.currentGoal=goalMessage;that.emit("goal",goalMessage.goal)}});var isEarlier=function(t1,t2){if(t1.secs>t2.secs){return false}else if(t1.secs<t2.secs){return true}else if(t1.nsecs<t2.nsecs){return true}else{return false}};cancelListener.subscribe(function(cancelMessage){if(cancelMessage.stamp.secs===0&&cancelMessage.stamp.secs===0&&cancelMessage.id===""){that.nextGoal=null;if(that.currentGoal){that.emit("cancel")}}else{if(that.currentGoal&&cancelMessage.id===that.currentGoal.goal_id.id){that.emit("cancel")}else if(that.nextGoal&&cancelMessage.id===that.nextGoal.goal_id.id){that.nextGoal=null}if(that.nextGoal&&isEarlier(that.nextGoal.goal_id.stamp,cancelMessage.stamp)){that.nextGoal=null}if(that.currentGoal&&isEarlier(that.currentGoal.goal_id.stamp,cancelMessage.stamp)){that.emit("cancel")}}});var statusInterval=setInterval(function(){var currentTime=new Date;var secs=Math.floor(currentTime.getTime()/1e3);var nsecs=Math.round(1e9*(currentTime.getTime()/1e3-secs));that.statusMessage.header.stamp.secs=secs;that.statusMessage.header.stamp.nsecs=nsecs;statusPublisher.publish(that.statusMessage)},500)}SimpleActionServer.prototype.__proto__=EventEmitter2.prototype;SimpleActionServer.prototype.setSucceeded=function(result2){var resultMessage=new Message({status:{goal_id:this.currentGoal.goal_id,status:3},result:result2});this.resultPublisher.publish(resultMessage);this.statusMessage.status_list=[];if(this.nextGoal){this.currentGoal=this.nextGoal;this.nextGoal=null;this.emit("goal",this.currentGoal.goal)}else{this.currentGoal=null}};SimpleActionServer.prototype.sendFeedback=function(feedback2){var feedbackMessage=new Message({status:{goal_id:this.currentGoal.goal_id,status:1},feedback:feedback2});this.feedbackPublisher.publish(feedbackMessage)};SimpleActionServer.prototype.setPreempted=function(){this.statusMessage.status_list=[];var resultMessage=new Message({status:{goal_id:this.currentGoal.goal_id,status:2}});this.resultPublisher.publish(resultMessage);if(this.nextGoal){this.currentGoal=this.nextGoal;this.nextGoal=null;this.emit("goal",this.currentGoal.goal)}else{this.currentGoal=null}};module.exports=SimpleActionServer},{"../core/Message":9,"../core/Topic":16,"./../util/shim/EventEmitter2.js":38}],8:[function(require,module,exports){var Ros=require("../core/Ros");var mixin=require("../mixin");var action=module.exports={ActionClient:require("./ActionClient"),Goal:require("./Goal"),SimpleActionServer:require("./SimpleActionServer")};mixin(Ros,["ActionClient","SimpleActionServer"],action)},{"../core/Ros":11,"../mixin":23,"./ActionClient":5,"./Goal":6,"./SimpleActionServer":7}],9:[function(require,module,exports){var assign=require("object-assign");function Message(values){assign(this,values)}module.exports=Message},{"object-assign":1}],10:[function(require,module,exports){var Service=require("./Service");var ServiceRequest=require("./ServiceRequest");function Param(options){options=options||{};this.ros=options.ros;this.name=options.name}Param.prototype.get=function(callback){var paramClient=new Service({ros:this.ros,name:"/rosapi/get_param",serviceType:"rosapi/GetParam"});var request=new ServiceRequest({name:this.name});paramClient.callService(request,function(result){var value=JSON.parse(result.value);callback(value)})};Param.prototype.set=function(value,callback){var paramClient=new Service({ros:this.ros,name:"/rosapi/set_param",serviceType:"rosapi/SetParam"});var request=new ServiceRequest({name:this.name,value:JSON.stringify(value)});paramClient.callService(request,callback)};Param.prototype.delete=function(callback){var paramClient=new Service({ros:this.ros,name:"/rosapi/delete_param",serviceType:"rosapi/DeleteParam"});var request=new ServiceRequest({name:this.name});paramClient.callService(request,callback)};module.exports=Param},{"./Service":12,"./ServiceRequest":13}],11:[function(require,module,exports){var WebSocket=require("./../util/shim/WebSocket.js");var socketAdapter=require("./SocketAdapter.js");var Service=require("./Service");var ServiceRequest=require("./ServiceRequest");var assign=require("object-assign");var EventEmitter2=require("./../util/shim/EventEmitter2.js").EventEmitter2;function Ros(options){options=options||{};this.socket=null;this.idCounter=0;this.isConnected=false;if(typeof options.groovyCompatibility==="undefined"){this.groovyCompatibility=true}else{this.groovyCompatibility=options.groovyCompatibility}this.setMaxListeners(0);if(options.url){this.connect(options.url)}}Ros.prototype.__proto__=EventEmitter2.prototype;Ros.prototype.connect=function(url){this.socket=assign(new WebSocket(url),socketAdapter(this))};Ros.prototype.close=function(){if(this.socket){this.socket.close()}};Ros.prototype.authenticate=function(mac,client,dest,rand,t,level,end){var auth={op:"auth",mac:mac,client:client,dest:dest,rand:rand,t:t,level:level,end:end};this.callOnConnection(auth)};Ros.prototype.callOnConnection=function(message){var that=this;var messageJson=JSON.stringify(message);if(!this.isConnected){that.once("connection",function(){that.socket.send(messageJson)})}else{that.socket.send(messageJson)}};Ros.prototype.getTopics=function(callback,failedCallback){var topicsClient=new Service({ros:this,name:"/rosapi/topics",serviceType:"rosapi/Topics"});var request=new ServiceRequest;if(typeof failedCallback==="function"){topicsClient.callService(request,function(result){callback(result.topics)},function(message){failedCallback(message)})}else{topicsClient.callService(request,function(result){callback(result.topics)})}};Ros.prototype.getTopicsForType=function(topicType,callback,failedCallback){var topicsForTypeClient=new Service({ros:this,name:"/rosapi/topics_for_type",serviceType:"rosapi/TopicsForType"});var request=new ServiceRequest({type:topicType});if(typeof failedCallback==="function"){topicsForTypeClient.callService(request,function(result){callback(result.topics)},function(message){failedCallback(message)})}else{topicsForTypeClient.callService(request,function(result){callback(result.topics)})}};Ros.prototype.getServices=function(callback,failedCallback){var servicesClient=new Service({ros:this,name:"/rosapi/services",serviceType:"rosapi/Services"});var request=new ServiceRequest;if(typeof failedCallback==="function"){servicesClient.callService(request,function(result){callback(result.services)},function(message){failedCallback(message)})}else{servicesClient.callService(request,function(result){callback(result.services)})}};Ros.prototype.getServicesForType=function(serviceType,callback,failedCallback){var servicesForTypeClient=new Service({ros:this,name:"/rosapi/services_for_type",serviceType:"rosapi/ServicesForType"});var request=new ServiceRequest({type:serviceType});if(typeof failedCallback==="function"){servicesForTypeClient.callService(request,function(result){callback(result.services)},function(message){failedCallback(message)})}else{servicesForTypeClient.callService(request,function(result){callback(result.services)})}};Ros.prototype.getNodes=function(callback,failedCallback){var nodesClient=new Service({ros:this,name:"/rosapi/nodes",serviceType:"rosapi/Nodes"});var request=new ServiceRequest;if(typeof failedCallback==="function"){nodesClient.callService(request,function(result){callback(result.nodes)},function(message){failedCallback(message)})}else{nodesClient.callService(request,function(result){callback(result.nodes)})}};Ros.prototype.getParams=function(callback,failedCallback){var paramsClient=new Service({ros:this,name:"/rosapi/get_param_names",serviceType:"rosapi/GetParamNames"});var request=new ServiceRequest;if(typeof failedCallback==="function"){paramsClient.callService(request,function(result){callback(result.names)},function(message){failedCallback(message)})}else{paramsClient.callService(request,function(result){callback(result.names)})}};Ros.prototype.getTopicType=function(topic,callback,failedCallback){var topicTypeClient=new Service({ros:this,name:"/rosapi/topic_type",serviceType:"rosapi/TopicType"});var request=new ServiceRequest({topic:topic});if(typeof failedCallback==="function"){topicTypeClient.callService(request,function(result){callback(result.type)},function(message){failedCallback(message)})}else{topicTypeClient.callService(request,function(result){callback(result.type)})}};Ros.prototype.getMessageDetails=function(message,callback,failedCallback){var messageDetailClient=new Service({ros:this,name:"/rosapi/message_details",serviceType:"rosapi/MessageDetails"});var request=new ServiceRequest({type:message});if(typeof failedCallback==="function"){messageDetailClient.callService(request,function(result){callback(result.typedefs)},function(message){failedCallback(message)})}else{messageDetailClient.callService(request,function(result){callback(result.typedefs)})}};Ros.prototype.decodeTypeDefs=function(defs){var that=this;var decodeTypeDefsRec=function(theType,hints){var typeDefDict={};for(var i=0;i<theType.fieldnames.length;i++){var arrayLen=theType.fieldarraylen[i];var fieldName=theType.fieldnames[i];var fieldType=theType.fieldtypes[i];if(fieldType.indexOf("/")===-1){if(arrayLen===-1){typeDefDict[fieldName]=fieldType}else{typeDefDict[fieldName]=[fieldType]}}else{var sub=false;for(var j=0;j<hints.length;j++){if(hints[j].type.toString()===fieldType.toString()){sub=hints[j];break}}if(sub){var subResult=decodeTypeDefsRec(sub,hints);if(arrayLen===-1){typeDefDict[fieldName]=subResult}else{typeDefDict[fieldName]=[subResult]}}else{that.emit("error","Cannot find "+fieldType+" in decodeTypeDefs")}}}return typeDefDict};return decodeTypeDefsRec(defs[0],defs)};module.exports=Ros},{"./../util/shim/EventEmitter2.js":38,"./../util/shim/WebSocket.js":39,"./Service":12,"./ServiceRequest":13,"./SocketAdapter.js":15,"object-assign":1}],12:[function(require,module,exports){var ServiceResponse=require("./ServiceResponse");function Service(options){options=options||{};this.ros=options.ros;this.name=options.name;this.serviceType=options.serviceType}Service.prototype.callService=function(request,callback,failedCallback){var serviceCallId="call_service:"+this.name+":"+ ++this.ros.idCounter;if(callback||failedCallback){this.ros.once(serviceCallId,function(message){if(message.result!==undefined&&message.result===false){if(typeof failedCallback==="function"){failedCallback(message.values)}}else if(typeof callback==="function"){callback(new ServiceResponse(message.values))}})}var call={op:"call_service",id:serviceCallId,service:this.name,args:request};this.ros.callOnConnection(call)};module.exports=Service},{"./ServiceResponse":14}],13:[function(require,module,exports){var assign=require("object-assign");function ServiceRequest(values){assign(this,values)}module.exports=ServiceRequest},{"object-assign":1}],14:[function(require,module,exports){var assign=require("object-assign");function ServiceResponse(values){assign(this,values)}module.exports=ServiceResponse},{"object-assign":1}],15:[function(require,module,exports){(function(global){"use strict";var Canvas=require("./../util/shim/canvas.js");var Image=Canvas.Image||global.Image;var WebSocket=require("./../util/shim/WebSocket.js");var BSON=null;if(typeof bson!=="undefined"){BSON=bson().BSON}function decompressPng(data,callback){var image=new Image;image.onload=function(){var canvas=new Canvas;var context=canvas.getContext("2d");canvas.width=image.width;canvas.height=image.height;context.imageSmoothingEnabled=false;context.webkitImageSmoothingEnabled=false;context.mozImageSmoothingEnabled=false;context.drawImage(image,0,0);var imageData=context.getImageData(0,0,image.width,image.height).data;var jsonData="";for(var i=0;i<imageData.length;i+=4){jsonData+=String.fromCharCode(imageData[i],imageData[i+1],imageData[i+2])}callback(JSON.parse(jsonData))};image.src="data:image/png;base64,"+data.data}function SocketAdapter(client){function handleMessage(message){if(message.op==="publish"){client.emit(message.topic,message.msg)}else if(message.op==="service_response"){client.emit(message.id,message)}}return{onopen:function onOpen(event){client.isConnected=true;client.emit("connection",event)},onclose:function onClose(event){client.isConnected=false;client.emit("close",event)},onerror:function onError(event){client.emit("error",event)},onmessage:function onMessage(message){if(typeof Blob!=="undefined"&&message.data instanceof Blob){if(!BSON){throw"Cannot process BSON encoded message without BSON header."}var reader=new FileReader;reader.onload=function(){var uint8Array=new Uint8Array(this.result);var msg=BSON.deserialize(uint8Array);if(msg.op==="png"){decompressPng(msg,handleMessage)}else{handleMessage(msg)}};reader.readAsArrayBuffer(message.data)}else{var data=JSON.parse(typeof message==="string"?message:message.data);if(data.op==="png"){decompressPng(data,handleMessage)}else{handleMessage(data)}}}}}module.exports=SocketAdapter}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./../util/shim/WebSocket.js":39,"./../util/shim/canvas.js":40}],16:[function(require,module,exports){var EventEmitter2=require("./../util/shim/EventEmitter2.js").EventEmitter2;var Message=require("./Message");function Topic(options){options=options||{};this.ros=options.ros;this.name=options.name;this.messageType=options.messageType;this.isAdvertised=false;this.compression=options.compression||"none";this.throttle_rate=options.throttle_rate||0;this.latch=options.latch||false;this.queue_size=options.queue_size||100;this.queue_length=options.queue_length||0;if(this.compression&&this.compression!=="png"&&this.compression!=="none"){this.emit("warning",this.compression+" compression is not supported. No compression will be used.")}if(this.throttle_rate<0){this.emit("warning",this.throttle_rate+" is not allowed. Set to 0");this.throttle_rate=0}var that=this;this._messageCallback=function(data){that.emit("message",new Message(data))}}Topic.prototype.__proto__=EventEmitter2.prototype;Topic.prototype.subscribe=function(callback){if(typeof callback==="function"){this.on("message",callback)}if(this.subscribeId){return}this.ros.on(this.name,this._messageCallback);this.subscribeId="subscribe:"+this.name+":"+ ++this.ros.idCounter;this.ros.callOnConnection({op:"subscribe",id:this.subscribeId,type:this.messageType,topic:this.name,compression:this.compression,throttle_rate:this.throttle_rate,queue_length:this.queue_length})};Topic.prototype.unsubscribe=function(callback){if(callback){this.off("message",callback);if(this.listeners("message").length){return}}if(!this.subscribeId){return}this.ros.off(this.name,this._messageCallback);this.emit("unsubscribe");this.ros.callOnConnection({op:"unsubscribe",id:this.subscribeId,topic:this.name});this.subscribeId=null};Topic.prototype.advertise=function(){if(this.isAdvertised){return}this.advertiseId="advertise:"+this.name+":"+ ++this.ros.idCounter;this.ros.callOnConnection({op:"advertise",id:this.advertiseId,type:this.messageType,topic:this.name,latch:this.latch,queue_size:this.queue_size});this.isAdvertised=true};Topic.prototype.unadvertise=function(){if(!this.isAdvertised){return}this.emit("unadvertise");this.ros.callOnConnection({op:"unadvertise",id:this.advertiseId,
topic:this.name});this.isAdvertised=false};Topic.prototype.publish=function(message){if(!this.isAdvertised){this.advertise()}this.ros.idCounter++;var call={op:"publish",id:"publish:"+this.name+":"+this.ros.idCounter,topic:this.name,msg:message,latch:this.latch};this.ros.callOnConnection(call)};module.exports=Topic},{"./../util/shim/EventEmitter2.js":38,"./Message":9}],17:[function(require,module,exports){var mixin=require("../mixin");var core=module.exports={Ros:require("./Ros"),Topic:require("./Topic"),Message:require("./Message"),Param:require("./Param"),Service:require("./Service"),ServiceRequest:require("./ServiceRequest"),ServiceResponse:require("./ServiceResponse")};mixin(core.Ros,["Param","Service","Topic"],core)},{"../mixin":23,"./Message":9,"./Param":10,"./Ros":11,"./Service":12,"./ServiceRequest":13,"./ServiceResponse":14,"./Topic":16}],18:[function(require,module,exports){var Vector3=require("./Vector3");var Quaternion=require("./Quaternion");function Pose(options){options=options||{};this.position=new Vector3(options.position);this.orientation=new Quaternion(options.orientation)}Pose.prototype.applyTransform=function(tf){this.position.multiplyQuaternion(tf.rotation);this.position.add(tf.translation);var tmp=tf.rotation.clone();tmp.multiply(this.orientation);this.orientation=tmp};Pose.prototype.clone=function(){return new Pose(this)};module.exports=Pose},{"./Quaternion":19,"./Vector3":21}],19:[function(require,module,exports){function Quaternion(options){options=options||{};this.x=options.x||0;this.y=options.y||0;this.z=options.z||0;this.w=typeof options.w==="number"?options.w:1}Quaternion.prototype.conjugate=function(){this.x*=-1;this.y*=-1;this.z*=-1};Quaternion.prototype.norm=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)};Quaternion.prototype.normalize=function(){var l=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);if(l===0){this.x=0;this.y=0;this.z=0;this.w=1}else{l=1/l;this.x=this.x*l;this.y=this.y*l;this.z=this.z*l;this.w=this.w*l}};Quaternion.prototype.invert=function(){this.conjugate();this.normalize()};Quaternion.prototype.multiply=function(q){var newX=this.x*q.w+this.y*q.z-this.z*q.y+this.w*q.x;var newY=-this.x*q.z+this.y*q.w+this.z*q.x+this.w*q.y;var newZ=this.x*q.y-this.y*q.x+this.z*q.w+this.w*q.z;var newW=-this.x*q.x-this.y*q.y-this.z*q.z+this.w*q.w;this.x=newX;this.y=newY;this.z=newZ;this.w=newW};Quaternion.prototype.clone=function(){return new Quaternion(this)};module.exports=Quaternion},{}],20:[function(require,module,exports){var Vector3=require("./Vector3");var Quaternion=require("./Quaternion");function Transform(options){options=options||{};this.translation=new Vector3(options.translation);this.rotation=new Quaternion(options.rotation)}Transform.prototype.clone=function(){return new Transform(this)};module.exports=Transform},{"./Quaternion":19,"./Vector3":21}],21:[function(require,module,exports){function Vector3(options){options=options||{};this.x=options.x||0;this.y=options.y||0;this.z=options.z||0}Vector3.prototype.add=function(v){this.x+=v.x;this.y+=v.y;this.z+=v.z};Vector3.prototype.subtract=function(v){this.x-=v.x;this.y-=v.y;this.z-=v.z};Vector3.prototype.multiplyQuaternion=function(q){var ix=q.w*this.x+q.y*this.z-q.z*this.y;var iy=q.w*this.y+q.z*this.x-q.x*this.z;var iz=q.w*this.z+q.x*this.y-q.y*this.x;var iw=-q.x*this.x-q.y*this.y-q.z*this.z;this.x=ix*q.w+iw*-q.x+iy*-q.z-iz*-q.y;this.y=iy*q.w+iw*-q.y+iz*-q.x-ix*-q.z;this.z=iz*q.w+iw*-q.z+ix*-q.y-iy*-q.x};Vector3.prototype.clone=function(){return new Vector3(this)};module.exports=Vector3},{}],22:[function(require,module,exports){module.exports={Pose:require("./Pose"),Quaternion:require("./Quaternion"),Transform:require("./Transform"),Vector3:require("./Vector3")}},{"./Pose":18,"./Quaternion":19,"./Transform":20,"./Vector3":21}],23:[function(require,module,exports){module.exports=function(Ros,classes,features){classes.forEach(function(className){var Class=features[className];Ros.prototype[className]=function(options){options.ros=this;return new Class(options)}})}},{}],24:[function(require,module,exports){var ActionClient=require("../actionlib/ActionClient");var Goal=require("../actionlib/Goal");var Service=require("../core/Service.js");var ServiceRequest=require("../core/ServiceRequest.js");var Transform=require("../math/Transform");function TFClient(options){options=options||{};this.ros=options.ros;this.fixedFrame=options.fixedFrame||"/base_link";this.angularThres=options.angularThres||2;this.transThres=options.transThres||.01;this.rate=options.rate||10;this.updateDelay=options.updateDelay||50;var seconds=options.topicTimeout||2;var secs=Math.floor(seconds);var nsecs=Math.floor((seconds-secs)*1e9);this.topicTimeout={secs:secs,nsecs:nsecs};this.currentGoal=false;this.currentTopic=false;this.frameInfos={};this.republisherUpdateRequested=false;this.actionClient=this.ros.ActionClient({serverName:"/tf2_web_republisher",actionName:"tf2_web_republisher/TFSubscriptionAction"});this.serviceClient=this.ros.Service({name:"/republish_tfs",serviceType:"tf2_web_republisher/RepublishTFs"})}TFClient.prototype.processTFArray=function(tf){var that=this;tf.transforms.forEach(function(transform){var frameID=transform.child_frame_id;if(frameID[0]==="/"){frameID=frameID.substring(1)}var info=this.frameInfos[frameID];if(info){info.transform=new Transform({translation:transform.transform.translation,rotation:transform.transform.rotation});info.cbs.forEach(function(cb){cb(info.transform)})}},this)};TFClient.prototype.updateGoal=function(){var goalMessage={source_frames:Object.keys(this.frameInfos),target_frame:this.fixedFrame,angular_thres:this.angularThres,trans_thres:this.transThres,rate:this.rate};if(this.ros.groovyCompatibility){if(this.currentGoal){this.currentGoal.cancel()}this.currentGoal=new Goal({actionClient:this.actionClient,goalMessage:goalMessage});this.currentGoal.on("feedback",this.processTFArray.bind(this));this.currentGoal.send()}else{goalMessage.timeout=this.topicTimeout;var request=new ServiceRequest(goalMessage);this.serviceClient.callService(request,this.processResponse.bind(this))}this.republisherUpdateRequested=false};TFClient.prototype.processResponse=function(response){if(this.currentTopic){this.currentTopic.unsubscribe()}this.currentTopic=this.ros.Topic({name:response.topic_name,messageType:"tf2_web_republisher/TFArray"});this.currentTopic.subscribe(this.processTFArray.bind(this))};TFClient.prototype.subscribe=function(frameID,callback){if(frameID[0]==="/"){frameID=frameID.substring(1)}if(!this.frameInfos[frameID]){this.frameInfos[frameID]={cbs:[]};if(!this.republisherUpdateRequested){setTimeout(this.updateGoal.bind(this),this.updateDelay);this.republisherUpdateRequested=true}}else if(this.frameInfos[frameID].transform){callback(this.frameInfos[frameID].transform)}this.frameInfos[frameID].cbs.push(callback)};TFClient.prototype.unsubscribe=function(frameID,callback){if(frameID[0]==="/"){frameID=frameID.substring(1)}var info=this.frameInfos[frameID];for(var cbs=info&&info.cbs||[],idx=cbs.length;idx--;){if(cbs[idx]===callback){cbs.splice(idx,1)}}if(!callback||cbs.length===0){delete this.frameInfos[frameID]}};module.exports=TFClient},{"../actionlib/ActionClient":5,"../actionlib/Goal":6,"../core/Service.js":12,"../core/ServiceRequest.js":13,"../math/Transform":20}],25:[function(require,module,exports){var Ros=require("../core/Ros");var mixin=require("../mixin");var tf=module.exports={TFClient:require("./TFClient")};mixin(Ros,["TFClient"],tf)},{"../core/Ros":11,"../mixin":23,"./TFClient":24}],26:[function(require,module,exports){var Vector3=require("../math/Vector3");var UrdfTypes=require("./UrdfTypes");function UrdfBox(options){this.dimension=null;this.type=UrdfTypes.URDF_BOX;var xyz=options.xml.getAttribute("size").split(" ");this.dimension=new Vector3({x:parseFloat(xyz[0]),y:parseFloat(xyz[1]),z:parseFloat(xyz[2])})}module.exports=UrdfBox},{"../math/Vector3":21,"./UrdfTypes":35}],27:[function(require,module,exports){function UrdfColor(options){var rgba=options.xml.getAttribute("rgba").split(" ");this.r=parseFloat(rgba[0]);this.g=parseFloat(rgba[1]);this.b=parseFloat(rgba[2]);this.a=parseFloat(rgba[3])}module.exports=UrdfColor},{}],28:[function(require,module,exports){var UrdfTypes=require("./UrdfTypes");function UrdfCylinder(options){this.type=UrdfTypes.URDF_CYLINDER;this.length=parseFloat(options.xml.getAttribute("length"));this.radius=parseFloat(options.xml.getAttribute("radius"))}module.exports=UrdfCylinder},{"./UrdfTypes":35}],29:[function(require,module,exports){function UrdfJoint(options){this.name=options.xml.getAttribute("name");this.type=options.xml.getAttribute("type");var limits=options.xml.getElementsByTagName("limit");if(limits.length>0){this.minval=parseFloat(limits[0].getAttribute("lower"));this.maxval=parseFloat(limits[0].getAttribute("upper"))}}module.exports=UrdfJoint},{}],30:[function(require,module,exports){var UrdfVisual=require("./UrdfVisual");function UrdfLink(options){this.name=options.xml.getAttribute("name");this.visuals=[];var visuals=options.xml.getElementsByTagName("visual");for(var i=0;i<visuals.length;i++){this.visuals.push(new UrdfVisual({xml:visuals[i]}))}}module.exports=UrdfLink},{"./UrdfVisual":36}],31:[function(require,module,exports){var UrdfColor=require("./UrdfColor");function UrdfMaterial(options){this.textureFilename=null;this.color=null;this.name=options.xml.getAttribute("name");var textures=options.xml.getElementsByTagName("texture");if(textures.length>0){this.textureFilename=textures[0].getAttribute("filename")}var colors=options.xml.getElementsByTagName("color");if(colors.length>0){this.color=new UrdfColor({xml:colors[0]})}}UrdfMaterial.prototype.isLink=function(){return this.color===null&&this.textureFilename===null};var assign=require("object-assign");UrdfMaterial.prototype.assign=function(obj){return assign(this,obj)};module.exports=UrdfMaterial},{"./UrdfColor":27,"object-assign":1}],32:[function(require,module,exports){var Vector3=require("../math/Vector3");var UrdfTypes=require("./UrdfTypes");function UrdfMesh(options){this.scale=null;this.type=UrdfTypes.URDF_MESH;this.filename=options.xml.getAttribute("filename");var scale=options.xml.getAttribute("scale");if(scale){var xyz=scale.split(" ");this.scale=new Vector3({x:parseFloat(xyz[0]),y:parseFloat(xyz[1]),z:parseFloat(xyz[2])})}}module.exports=UrdfMesh},{"../math/Vector3":21,"./UrdfTypes":35}],33:[function(require,module,exports){var UrdfMaterial=require("./UrdfMaterial");var UrdfLink=require("./UrdfLink");var UrdfJoint=require("./UrdfJoint");var DOMParser=require("xmlshim").DOMParser;var XPATH_FIRST_ORDERED_NODE_TYPE=9;function UrdfModel(options){options=options||{};var xmlDoc=options.xml;var string=options.string;this.materials={};this.links={};this.joints={};if(string){var parser=new DOMParser;xmlDoc=parser.parseFromString(string,"text/xml")}var robotXml=xmlDoc.evaluate("//robot",xmlDoc,null,XPATH_FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;this.name=robotXml.getAttribute("name");for(var nodes=robotXml.childNodes,i=0;i<nodes.length;i++){var node=nodes[i];if(node.tagName==="material"){var material=new UrdfMaterial({xml:node});if(this.materials[material.name]!==void 0){if(this.materials[material.name].isLink()){this.materials[material.name].assign(material)}else{console.warn("Material "+material.name+"is not unique.")}}else{this.materials[material.name]=material}}else if(node.tagName==="link"){var link=new UrdfLink({xml:node});if(this.links[link.name]!==void 0){console.warn("Link "+link.name+" is not unique.")}else{for(var j=0;j<link.visuals.length;j++){var mat=link.visuals[j].material;if(mat!==null){if(this.materials[mat.name]!==void 0){link.visuals[j].material=this.materials[mat.name]}else{this.materials[mat.name]=mat}}}this.links[link.name]=link}}else if(node.tagName==="joint"){var joint=new UrdfJoint({xml:node});this.joints[joint.name]=joint}}}module.exports=UrdfModel},{"./UrdfJoint":29,"./UrdfLink":30,"./UrdfMaterial":31,xmlshim:2}],34:[function(require,module,exports){var UrdfTypes=require("./UrdfTypes");function UrdfSphere(options){this.type=UrdfTypes.URDF_SPHERE;this.radius=parseFloat(options.xml.getAttribute("radius"))}module.exports=UrdfSphere},{"./UrdfTypes":35}],35:[function(require,module,exports){module.exports={URDF_SPHERE:0,URDF_BOX:1,URDF_CYLINDER:2,URDF_MESH:3}},{}],36:[function(require,module,exports){var Pose=require("../math/Pose");var Vector3=require("../math/Vector3");var Quaternion=require("../math/Quaternion");var UrdfCylinder=require("./UrdfCylinder");var UrdfBox=require("./UrdfBox");var UrdfMaterial=require("./UrdfMaterial");var UrdfMesh=require("./UrdfMesh");var UrdfSphere=require("./UrdfSphere");function UrdfVisual(options){var xml=options.xml;this.origin=null;this.geometry=null;this.material=null;var origins=xml.getElementsByTagName("origin");if(origins.length===0){this.origin=new Pose}else{var xyz=origins[0].getAttribute("xyz");var position=new Vector3;if(xyz){xyz=xyz.split(" ");position=new Vector3({x:parseFloat(xyz[0]),y:parseFloat(xyz[1]),z:parseFloat(xyz[2])})}var rpy=origins[0].getAttribute("rpy");var orientation=new Quaternion;if(rpy){rpy=rpy.split(" ");var roll=parseFloat(rpy[0]);var pitch=parseFloat(rpy[1]);var yaw=parseFloat(rpy[2]);var phi=roll/2;var the=pitch/2;var psi=yaw/2;var x=Math.sin(phi)*Math.cos(the)*Math.cos(psi)-Math.cos(phi)*Math.sin(the)*Math.sin(psi);var y=Math.cos(phi)*Math.sin(the)*Math.cos(psi)+Math.sin(phi)*Math.cos(the)*Math.sin(psi);var z=Math.cos(phi)*Math.cos(the)*Math.sin(psi)-Math.sin(phi)*Math.sin(the)*Math.cos(psi);var w=Math.cos(phi)*Math.cos(the)*Math.cos(psi)+Math.sin(phi)*Math.sin(the)*Math.sin(psi);orientation=new Quaternion({x:x,y:y,z:z,w:w});orientation.normalize()}this.origin=new Pose({position:position,orientation:orientation})}var geoms=xml.getElementsByTagName("geometry");if(geoms.length>0){var geom=geoms[0];var shape=null;for(var i=0;i<geom.childNodes.length;i++){var node=geom.childNodes[i];if(node.nodeType===1){shape=node;break}}var type=shape.nodeName;if(type==="sphere"){this.geometry=new UrdfSphere({xml:shape})}else if(type==="box"){this.geometry=new UrdfBox({xml:shape})}else if(type==="cylinder"){this.geometry=new UrdfCylinder({xml:shape})}else if(type==="mesh"){this.geometry=new UrdfMesh({xml:shape})}else{console.warn("Unknown geometry type "+type)}}var materials=xml.getElementsByTagName("material");if(materials.length>0){this.material=new UrdfMaterial({xml:materials[0]})}}module.exports=UrdfVisual},{"../math/Pose":18,"../math/Quaternion":19,"../math/Vector3":21,"./UrdfBox":26,"./UrdfCylinder":28,"./UrdfMaterial":31,"./UrdfMesh":32,"./UrdfSphere":34}],37:[function(require,module,exports){module.exports=require("object-assign")({UrdfBox:require("./UrdfBox"),UrdfColor:require("./UrdfColor"),UrdfCylinder:require("./UrdfCylinder"),UrdfLink:require("./UrdfLink"),UrdfMaterial:require("./UrdfMaterial"),UrdfMesh:require("./UrdfMesh"),UrdfModel:require("./UrdfModel"),UrdfSphere:require("./UrdfSphere"),UrdfVisual:require("./UrdfVisual")},require("./UrdfTypes"))},{"./UrdfBox":26,"./UrdfColor":27,"./UrdfCylinder":28,"./UrdfLink":30,"./UrdfMaterial":31,"./UrdfMesh":32,"./UrdfModel":33,"./UrdfSphere":34,"./UrdfTypes":35,"./UrdfVisual":36,"object-assign":1}],38:[function(require,module,exports){(function(global){module.exports={EventEmitter2:global.EventEmitter2}}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],39:[function(require,module,exports){(function(global){module.exports=global.WebSocket}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],40:[function(require,module,exports){module.exports=function Canvas(){return document.createElement("canvas")}},{}]},{},[4]);var ROS3D=ROS3D||{REVISION:"0.16.0"};ROS3D.MARKER_ARROW=0;ROS3D.MARKER_CUBE=1;ROS3D.MARKER_SPHERE=2;ROS3D.MARKER_CYLINDER=3;ROS3D.MARKER_LINE_STRIP=4;ROS3D.MARKER_LINE_LIST=5;ROS3D.MARKER_CUBE_LIST=6;ROS3D.MARKER_SPHERE_LIST=7;ROS3D.MARKER_POINTS=8;ROS3D.MARKER_TEXT_VIEW_FACING=9;ROS3D.MARKER_MESH_RESOURCE=10;ROS3D.MARKER_TRIANGLE_LIST=11;ROS3D.INTERACTIVE_MARKER_KEEP_ALIVE=0;ROS3D.INTERACTIVE_MARKER_POSE_UPDATE=1;ROS3D.INTERACTIVE_MARKER_MENU_SELECT=2;ROS3D.INTERACTIVE_MARKER_BUTTON_CLICK=3;ROS3D.INTERACTIVE_MARKER_MOUSE_DOWN=4;ROS3D.INTERACTIVE_MARKER_MOUSE_UP=5;ROS3D.INTERACTIVE_MARKER_NONE=0;ROS3D.INTERACTIVE_MARKER_MENU=1;ROS3D.INTERACTIVE_MARKER_BUTTON=2;ROS3D.INTERACTIVE_MARKER_MOVE_AXIS=3;ROS3D.INTERACTIVE_MARKER_MOVE_PLANE=4;ROS3D.INTERACTIVE_MARKER_ROTATE_AXIS=5;ROS3D.INTERACTIVE_MARKER_MOVE_ROTATE=6;ROS3D.INTERACTIVE_MARKER_INHERIT=0;ROS3D.INTERACTIVE_MARKER_FIXED=1;ROS3D.INTERACTIVE_MARKER_VIEW_FACING=2;ROS3D.COLLADA_LOADER=1;ROS3D.COLLADA_LOADER_2=2;ROS3D.makeColorMaterial=function(r,g,b,a){var color=new THREE.Color;color.setRGB(r,g,b);if(a<=.99){return new THREE.MeshBasicMaterial({color:color.getHex(),opacity:a+.1,transparent:true,depthWrite:true,blendSrc:THREE.SrcAlphaFactor,blendDst:THREE.OneMinusSrcAlphaFactor,blendEquation:THREE.ReverseSubtractEquation,blending:THREE.NormalBlending})}else{return new THREE.MeshPhongMaterial({color:color.getHex(),opacity:a,blending:THREE.NormalBlending})}};ROS3D.intersectPlane=function(mouseRay,planeOrigin,planeNormal){var vector=new THREE.Vector3;var intersectPoint=new THREE.Vector3;vector.subVectors(planeOrigin,mouseRay.origin);var dot=mouseRay.direction.dot(planeNormal);if(Math.abs(dot)<mouseRay.precision){return undefined}var scalar=planeNormal.dot(vector)/dot;intersectPoint.addVectors(mouseRay.origin,mouseRay.direction.clone().multiplyScalar(scalar));return intersectPoint};ROS3D.findClosestPoint=function(targetRay,mouseRay){var v13=new THREE.Vector3;v13.subVectors(targetRay.origin,mouseRay.origin);var v43=mouseRay.direction.clone();var v21=targetRay.direction.clone();var d1343=v13.dot(v43);var d4321=v43.dot(v21);var d1321=v13.dot(v21);var d4343=v43.dot(v43);var d2121=v21.dot(v21);var denom=d2121*d4343-d4321*d4321;if(Math.abs(denom)<=1e-4){return undefined}var numer=d1343*d4321-d1321*d4343;var mua=numer/denom;return mua};ROS3D.closestAxisPoint=function(axisRay,camera,mousePos){var projector=new THREE.Projector;var o=axisRay.origin.clone();projector.projectVector(o,camera);var o2=axisRay.direction.clone().add(axisRay.origin);projector.projectVector(o2,camera);var d=o2.clone().sub(o);var tmp=new THREE.Vector2;var t=tmp.subVectors(mousePos,o).dot(d)/d.dot(d);var mp=new THREE.Vector2;mp.addVectors(o,d.clone().multiplyScalar(t));var vector=new THREE.Vector3(mp.x,mp.y,.5);projector.unprojectVector(vector,camera);var mpRay=new THREE.Ray(camera.position,vector.sub(camera.position).normalize());return ROS3D.findClosestPoint(axisRay,mpRay)};ROS3D.DepthCloud=function(options){options=options||{};THREE.Object3D.call(this);this.url=options.url;this.f=options.f||526;this.pointSize=options.pointSize||3;this.width=options.width||1024;this.height=options.height||1024;this.whiteness=options.whiteness||0;this.varianceThreshold=options.varianceThreshold||16667e-9;var metaLoaded=false;this.video=document.createElement("video");this.video.addEventListener("loadedmetadata",this.metaLoaded.bind(this),false);this.video.loop=true;this.video.src=this.url;this.video.crossOrigin="Anonymous";this.video.setAttribute("crossorigin","Anonymous");this.vertex_shader=["uniform sampler2D map;","","uniform float width;","uniform float height;","uniform float nearClipping, farClipping;","","uniform float pointSize;","uniform float zOffset;","","uniform float focallength;","","varying vec2 vUvP;","varying vec2 colorP;","","varying float depthVariance;","varying float maskVal;","","float sampleDepth(vec2 pos)","  {","    float depth;","    ","    vec2 vUv = vec2( pos.x / (width*2.0), pos.y / (height*2.0)+0.5 );","    vec2 vUv2 = vec2( pos.x / (width*2.0)+0.5, pos.y / (height*2.0)+0.5 );","    ","    vec4 depthColor = texture2D( map, vUv );","    ","    depth = ( depthColor.r + depthColor.g + depthColor.b ) / 3.0 ;","    ","    if (depth>0.99)","    {","      vec4 depthColor2 = texture2D( map, vUv2 );","      float depth2 = ( depthColor2.r + depthColor2.g + depthColor2.b ) / 3.0 ;","      depth = 0.99+depth2;","    }","    ","    return depth;","  }","","float median(float a, float b, float c)","  {","    float r=a;","    ","    if ( (a<b) && (b<c) )","    {","      r = b;","    }","    if ( (a<c) && (c<b) )","    {","      r = c;","    }","    return r;","  }","","float variance(float d1, float d2, float d3, float d4, float d5, float d6, float d7, float d8, float d9)","  {","    float mean = (d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9) / 9.0;","    float t1 = (d1-mean);","    float t2 = (d2-mean);","    float t3 = (d3-mean);","    float t4 = (d4-mean);","    float t5 = (d5-mean);","    float t6 = (d6-mean);","    float t7 = (d7-mean);","    float t8 = (d8-mean);","    float t9 = (d9-mean);","    float v = (t1*t1+t2*t2+t3*t3+t4*t4+t5*t5+t6*t6+t7*t7+t8*t8+t9*t9)/9.0;","    return v;","  }","","vec2 decodeDepth(vec2 pos)","  {","    vec2 ret;","    ","    ","    float depth1 = sampleDepth(vec2(position.x-1.0, position.y-1.0));","    float depth2 = sampleDepth(vec2(position.x, position.y-1.0));","    float depth3 = sampleDepth(vec2(position.x+1.0, position.y-1.0));","    float depth4 = sampleDepth(vec2(position.x-1.0, position.y));","    float depth5 = sampleDepth(vec2(position.x, position.y));","    float depth6 = sampleDepth(vec2(position.x+1.0, position.y));","    float depth7 = sampleDepth(vec2(position.x-1.0, position.y+1.0));","    float depth8 = sampleDepth(vec2(position.x, position.y+1.0));","    float depth9 = sampleDepth(vec2(position.x+1.0, position.y+1.0));","    ","    float median1 = median(depth1, depth2, depth3);","    float median2 = median(depth4, depth5, depth6);","    float median3 = median(depth7, depth8, depth9);","    ","    ret.x = median(median1, median2, median3);","    ret.y = variance(depth1, depth2, depth3, depth4, depth5, depth6, depth7, depth8, depth9);","    ","    return ret;","    ","  }","","","void main() {","  ","  vUvP = vec2( position.x / (width*2.0), position.y / (height*2.0)+0.5 );","  colorP = vec2( position.x / (width*2.0)+0.5 , position.y / (height*2.0)  );","  ","  vec4 pos = vec4(0.0,0.0,0.0,0.0);","  depthVariance = 0.0;","  ","  if ( (vUvP.x<0.0)|| (vUvP.x>0.5) || (vUvP.y<0.5) || (vUvP.y>0.0))","  {","    vec2 smp = decodeDepth(vec2(position.x, position.y));","    float depth = smp.x;","    depthVariance = smp.y;","    ","    float z = -depth;","    ","    pos = vec4(","      ( position.x / width - 0.5 ) * z * (1000.0/focallength) * -1.0,","      ( position.y / height - 0.5 ) * z * (1000.0/focallength),","      (- z + zOffset / 1000.0) * 2.0,","      1.0);","    ","    vec2 maskP = vec2( position.x / (width*2.0), position.y / (height*2.0)  );","    vec4 maskColor = texture2D( map, maskP );","    maskVal = ( maskColor.r + maskColor.g + maskColor.b ) / 3.0 ;","  }","  ","  gl_PointSize = pointSize;","  gl_Position = projectionMatrix * modelViewMatrix * pos;","  ","}"].join("\n");this.fragment_shader=["uniform sampler2D map;","uniform float varianceThreshold;","uniform float whiteness;","","varying vec2 vUvP;","varying vec2 colorP;","","varying float depthVariance;","varying float maskVal;","","","void main() {","  ","  vec4 color;","  ","  if ( (depthVariance>varianceThreshold) || (maskVal>0.5) ||(vUvP.x<0.0)|| (vUvP.x>0.5) || (vUvP.y<0.5) || (vUvP.y>1.0))","  {  ","    discard;","  }","  else ","  {","    color = texture2D( map, colorP );","    ","    float fader = whiteness /100.0;","    ","    color.r = color.r * (1.0-fader)+ fader;","    ","    color.g = color.g * (1.0-fader)+ fader;","    ","    color.b = color.b * (1.0-fader)+ fader;","    ","    color.a = 1.0;//smoothstep( 20000.0, -20000.0, gl_FragCoord.z / gl_FragCoord.w );","  }","  ","  gl_FragColor = vec4( color.r, color.g, color.b, color.a );","  ","}"].join("\n")};ROS3D.DepthCloud.prototype.__proto__=THREE.Object3D.prototype;ROS3D.DepthCloud.prototype.metaLoaded=function(){this.metaLoaded=true;this.initStreamer()};ROS3D.DepthCloud.prototype.initStreamer=function(){if(this.metaLoaded){this.texture=new THREE.Texture(this.video);this.geometry=new THREE.Geometry;for(var i=0,l=this.width*this.height;i<l;i++){var vertex=new THREE.Vector3;vertex.x=i%this.width;vertex.y=Math.floor(i/this.width);this.geometry.vertices.push(vertex)}this.material=new THREE.ShaderMaterial({uniforms:{map:{type:"t",value:this.texture},width:{type:"f",value:this.width},height:{type:"f",value:this.height},focallength:{type:"f",value:this.f},pointSize:{type:"f",value:this.pointSize},zOffset:{type:"f",value:0},whiteness:{type:"f",value:this.whiteness},varianceThreshold:{type:"f",value:this.varianceThreshold}},vertexShader:this.vertex_shader,fragmentShader:this.fragment_shader});this.mesh=new THREE.ParticleSystem(this.geometry,this.material);this.mesh.position.x=0;this.mesh.position.y=0;this.add(this.mesh);var that=this;setInterval(function(){if(that.video.readyState===that.video.HAVE_ENOUGH_DATA){that.texture.needsUpdate=true}},1e3/30)}};ROS3D.DepthCloud.prototype.startStream=function(){this.video.play()};ROS3D.DepthCloud.prototype.stopStream=function(){this.video.pause()};ROS3D.InteractiveMarker=function(options){THREE.Object3D.call(this);THREE.EventDispatcher.call(this);var that=this;options=options||{};var handle=options.handle;this.name=handle.name;var camera=options.camera;var path=options.path||"/";var loader=options.loader||ROS3D.COLLADA_LOADER_2;this.dragging=false;this.onServerSetPose({pose:handle.pose});this.dragStart={position:new THREE.Vector3,orientation:new THREE.Quaternion,positionWorld:new THREE.Vector3,orientationWorld:new THREE.Quaternion,event3d:{}};handle.controls.forEach(function(controlMessage){that.add(new ROS3D.InteractiveMarkerControl({parent:that,handle:handle,message:controlMessage,camera:camera,path:path,loader:loader}))});if(handle.menuEntries.length>0){this.menu=new ROS3D.InteractiveMarkerMenu({menuEntries:handle.menuEntries,menuFontSize:handle.menuFontSize});this.menu.addEventListener("menu-select",function(event){that.dispatchEvent(event)})}};ROS3D.InteractiveMarker.prototype.__proto__=THREE.Object3D.prototype;ROS3D.InteractiveMarker.prototype.showMenu=function(control,event){if(this.menu){this.menu.show(control,event)}};ROS3D.InteractiveMarker.prototype.moveAxis=function(control,origAxis,event3d){if(this.dragging){var currentControlOri=control.currentControlOri;var axis=origAxis.clone().applyQuaternion(currentControlOri);var originWorld=this.dragStart.event3d.intersection.point;var axisWorld=axis.clone().applyQuaternion(this.dragStart.orientationWorld.clone());var axisRay=new THREE.Ray(originWorld,axisWorld);var t=ROS3D.closestAxisPoint(axisRay,event3d.camera,event3d.mousePos);var p=new THREE.Vector3;p.addVectors(this.dragStart.position,axis.clone().applyQuaternion(this.dragStart.orientation).multiplyScalar(t));this.setPosition(control,p);event3d.stopPropagation()}};ROS3D.InteractiveMarker.prototype.movePlane=function(control,origNormal,event3d){if(this.dragging){var currentControlOri=control.currentControlOri;var normal=origNormal.clone().applyQuaternion(currentControlOri);var originWorld=this.dragStart.event3d.intersection.point;var normalWorld=normal.clone().applyQuaternion(this.dragStart.orientationWorld);var intersection=ROS3D.intersectPlane(event3d.mouseRay,originWorld,normalWorld);var p=new THREE.Vector3;p.subVectors(intersection,originWorld);p.add(this.dragStart.positionWorld);this.setPosition(control,p);event3d.stopPropagation()}};ROS3D.InteractiveMarker.prototype.rotateAxis=function(control,origOrientation,event3d){if(this.dragging){control.updateMatrixWorld();var currentControlOri=control.currentControlOri;var orientation=currentControlOri.clone().multiply(origOrientation.clone());var normal=new THREE.Vector3(1,0,0).applyQuaternion(orientation);var originWorld=this.dragStart.event3d.intersection.point;var normalWorld=normal.applyQuaternion(this.dragStart.orientationWorld);var intersection=ROS3D.intersectPlane(event3d.mouseRay,originWorld,normalWorld);var normalRay=new THREE.Ray(this.dragStart.positionWorld,normalWorld);var rotOrigin=ROS3D.intersectPlane(normalRay,originWorld,normalWorld);var orientationWorld=this.dragStart.orientationWorld.clone().multiply(orientation);var orientationWorldInv=orientationWorld.clone().inverse();intersection.sub(rotOrigin);intersection.applyQuaternion(orientationWorldInv);var origIntersection=this.dragStart.event3d.intersection.point.clone();origIntersection.sub(rotOrigin);origIntersection.applyQuaternion(orientationWorldInv);var a1=Math.atan2(intersection.y,intersection.z);var a2=Math.atan2(origIntersection.y,origIntersection.z);var a=a2-a1;var rot=new THREE.Quaternion;rot.setFromAxisAngle(normal,a);this.setOrientation(control,rot.multiply(this.dragStart.orientationWorld));event3d.stopPropagation()}};ROS3D.InteractiveMarker.prototype.feedbackEvent=function(type,control){this.dispatchEvent({type:type,position:this.position.clone(),orientation:this.quaternion.clone(),controlName:control.name})};ROS3D.InteractiveMarker.prototype.startDrag=function(control,event3d){if(event3d.domEvent.button===0){event3d.stopPropagation();this.dragging=true;this.updateMatrixWorld(true);var scale=new THREE.Vector3;this.matrixWorld.decompose(this.dragStart.positionWorld,this.dragStart.orientationWorld,scale);this.dragStart.position=this.position.clone();this.dragStart.orientation=this.quaternion.clone();this.dragStart.event3d=event3d;this.feedbackEvent("user-mousedown",control)}};ROS3D.InteractiveMarker.prototype.stopDrag=function(control,event3d){if(event3d.domEvent.button===0){event3d.stopPropagation();this.dragging=false;this.dragStart.event3d={};this.onServerSetPose(this.bufferedPoseEvent);this.bufferedPoseEvent=undefined;this.feedbackEvent("user-mouseup",control)}};ROS3D.InteractiveMarker.prototype.buttonClick=function(control,event3d){event3d.stopPropagation();this.feedbackEvent("user-button-click",control)};ROS3D.InteractiveMarker.prototype.setPosition=function(control,position){this.position=position;this.feedbackEvent("user-pose-change",control)};ROS3D.InteractiveMarker.prototype.setOrientation=function(control,orientation){orientation.normalize();this.quaternion=orientation;this.feedbackEvent("user-pose-change",control)};ROS3D.InteractiveMarker.prototype.onServerSetPose=function(event){if(event!==undefined){if(this.dragging){this.bufferedPoseEvent=event}else{var pose=event.pose;this.position.x=pose.position.x;this.position.y=pose.position.y;this.position.z=pose.position.z;this.quaternion=new THREE.Quaternion(pose.orientation.x,pose.orientation.y,pose.orientation.z,pose.orientation.w);this.updateMatrixWorld(true)}}};ROS3D.InteractiveMarker.prototype.dispose=function(){var that=this;this.children.forEach(function(intMarkerControl){intMarkerControl.children.forEach(function(marker){marker.dispose();intMarkerControl.remove(marker)});that.remove(intMarkerControl)})};THREE.EventDispatcher.prototype.apply(ROS3D.InteractiveMarker.prototype);ROS3D.InteractiveMarkerClient=function(options){var that=this;options=options||{};this.ros=options.ros;this.tfClient=options.tfClient;this.topic=options.topic;this.path=options.path||"/";this.camera=options.camera;this.rootObject=options.rootObject||new THREE.Object3D;this.loader=options.loader||ROS3D.COLLADA_LOADER_2;this.menuFontSize=options.menuFontSize||"0.8em";this.interactiveMarkers={};this.updateTopic=null;this.feedbackTopic=null;if(this.topic){this.subscribe(this.topic)}};ROS3D.InteractiveMarkerClient.prototype.subscribe=function(topic){this.unsubscribe();this.updateTopic=new ROSLIB.Topic({ros:this.ros,name:topic+"/tunneled/update",messageType:"visualization_msgs/InteractiveMarkerUpdate",compression:"png"});this.updateTopic.subscribe(this.processUpdate.bind(this));this.feedbackTopic=new ROSLIB.Topic({ros:this.ros,name:topic+"/feedback",messageType:"visualization_msgs/InteractiveMarkerFeedback",
compression:"png"});this.feedbackTopic.advertise();this.initService=new ROSLIB.Service({ros:this.ros,name:topic+"/tunneled/get_init",serviceType:"demo_interactive_markers/GetInit"});var request=new ROSLIB.ServiceRequest({});this.initService.callService(request,this.processInit.bind(this))};ROS3D.InteractiveMarkerClient.prototype.unsubscribe=function(){if(this.updateTopic){this.updateTopic.unsubscribe()}if(this.feedbackTopic){this.feedbackTopic.unadvertise()}for(var intMarkerName in this.interactiveMarkers){this.eraseIntMarker(intMarkerName)}this.interactiveMarkers={}};ROS3D.InteractiveMarkerClient.prototype.processInit=function(initMessage){var message=initMessage.msg;message.erases=[];for(var intMarkerName in this.interactiveMarkers){message.erases.push(intMarkerName)}message.poses=[];this.processUpdate(message)};ROS3D.InteractiveMarkerClient.prototype.processUpdate=function(message){var that=this;message.erases.forEach(function(name){that.eraseIntMarker(name)});message.poses.forEach(function(poseMessage){var marker=that.interactiveMarkers[poseMessage.name];if(marker){marker.setPoseFromServer(poseMessage.pose)}});message.markers.forEach(function(msg){var oldhandle=that.interactiveMarkers[msg.name];if(oldhandle){that.eraseIntMarker(oldhandle.name)}var handle=new ROS3D.InteractiveMarkerHandle({message:msg,feedbackTopic:that.feedbackTopic,tfClient:that.tfClient,menuFontSize:that.menuFontSize});that.interactiveMarkers[msg.name]=handle;var intMarker=new ROS3D.InteractiveMarker({handle:handle,camera:that.camera,path:that.path,loader:that.loader});intMarker.name=msg.name;that.rootObject.add(intMarker);handle.on("pose",function(pose){intMarker.onServerSetPose({pose:pose})});intMarker.addEventListener("user-pose-change",handle.setPoseFromClient.bind(handle));intMarker.addEventListener("user-mousedown",handle.onMouseDown.bind(handle));intMarker.addEventListener("user-mouseup",handle.onMouseUp.bind(handle));intMarker.addEventListener("user-button-click",handle.onButtonClick.bind(handle));intMarker.addEventListener("menu-select",handle.onMenuSelect.bind(handle));handle.subscribeTf()})};ROS3D.InteractiveMarkerClient.prototype.eraseIntMarker=function(intMarkerName){if(this.interactiveMarkers[intMarkerName]){var targetIntMarker=this.rootObject.getObjectByName(intMarkerName);this.rootObject.remove(targetIntMarker);delete this.interactiveMarkers[intMarkerName];targetIntMarker.dispose()}};ROS3D.InteractiveMarkerControl=function(options){var that=this;THREE.Object3D.call(this);options=options||{};this.parent=options.parent;var handle=options.handle;var message=options.message;this.name=message.name;this.camera=options.camera;this.path=options.path||"/";this.loader=options.loader||ROS3D.COLLADA_LOADER_2;this.dragging=false;this.startMousePos=new THREE.Vector2;var controlOri=new THREE.Quaternion(message.orientation.x,message.orientation.y,message.orientation.z,message.orientation.w);controlOri.normalize();var controlAxis=new THREE.Vector3(1,0,0);controlAxis.applyQuaternion(controlOri);this.currentControlOri=new THREE.Quaternion;switch(message.interaction_mode){case ROS3D.INTERACTIVE_MARKER_MOVE_AXIS:this.addEventListener("mousemove",this.parent.moveAxis.bind(this.parent,this,controlAxis));this.addEventListener("touchmove",this.parent.moveAxis.bind(this.parent,this,controlAxis));break;case ROS3D.INTERACTIVE_MARKER_ROTATE_AXIS:this.addEventListener("mousemove",this.parent.rotateAxis.bind(this.parent,this,controlOri));break;case ROS3D.INTERACTIVE_MARKER_MOVE_PLANE:this.addEventListener("mousemove",this.parent.movePlane.bind(this.parent,this,controlAxis));break;case ROS3D.INTERACTIVE_MARKER_BUTTON:this.addEventListener("click",this.parent.buttonClick.bind(this.parent,this));break;default:break}function stopPropagation(event){event.stopPropagation()}if(message.interaction_mode!==ROS3D.INTERACTIVE_MARKER_NONE){this.addEventListener("mousedown",this.parent.startDrag.bind(this.parent,this));this.addEventListener("mouseup",this.parent.stopDrag.bind(this.parent,this));this.addEventListener("contextmenu",this.parent.showMenu.bind(this.parent,this));this.addEventListener("mouseup",function(event3d){if(that.startMousePos.distanceToSquared(event3d.mousePos)===0){event3d.type="contextmenu";that.dispatchEvent(event3d)}});this.addEventListener("mouseover",stopPropagation);this.addEventListener("mouseout",stopPropagation);this.addEventListener("click",stopPropagation);this.addEventListener("mousedown",function(event3d){that.startMousePos=event3d.mousePos});this.addEventListener("touchstart",function(event3d){if(event3d.domEvent.touches.length===1){event3d.type="mousedown";event3d.domEvent.button=0;that.dispatchEvent(event3d)}});this.addEventListener("touchmove",function(event3d){if(event3d.domEvent.touches.length===1){event3d.type="mousemove";event3d.domEvent.button=0;that.dispatchEvent(event3d)}});this.addEventListener("touchend",function(event3d){if(event3d.domEvent.touches.length===0){event3d.domEvent.button=0;event3d.type="mouseup";that.dispatchEvent(event3d);event3d.type="click";that.dispatchEvent(event3d)}})}var rotInv=new THREE.Quaternion;var posInv=this.parent.position.clone().multiplyScalar(-1);switch(message.orientation_mode){case ROS3D.INTERACTIVE_MARKER_INHERIT:rotInv=this.parent.quaternion.clone().inverse();this.updateMatrixWorld=function(force){ROS3D.InteractiveMarkerControl.prototype.updateMatrixWorld.call(that,force);that.currentControlOri.copy(that.quaternion);that.currentControlOri.normalize()};break;case ROS3D.INTERACTIVE_MARKER_FIXED:this.updateMatrixWorld=function(force){that.quaternion=that.parent.quaternion.clone().inverse();that.updateMatrix();that.matrixWorldNeedsUpdate=true;ROS3D.InteractiveMarkerControl.prototype.updateMatrixWorld.call(that,force);that.currentControlOri.copy(that.quaternion)};break;case ROS3D.INTERACTIVE_MARKER_VIEW_FACING:var independentMarkerOrientation=message.independent_marker_orientation;this.updateMatrixWorld=function(force){that.camera.updateMatrixWorld();var cameraRot=(new THREE.Matrix4).extractRotation(that.camera.matrixWorld);var ros2Gl=new THREE.Matrix4;var r90=Math.PI*.5;var rv=new THREE.Euler(-r90,0,r90);ros2Gl.makeRotationFromEuler(rv);var worldToLocal=new THREE.Matrix4;worldToLocal.getInverse(that.parent.matrixWorld);cameraRot.multiplyMatrices(cameraRot,ros2Gl);cameraRot.multiplyMatrices(worldToLocal,cameraRot);that.currentControlOri.setFromRotationMatrix(cameraRot);if(!independentMarkerOrientation){that.quaternion.copy(that.currentControlOri);that.updateMatrix();that.matrixWorldNeedsUpdate=true}ROS3D.InteractiveMarkerControl.prototype.updateMatrixWorld.call(that,force)};break;default:console.error("Unkown orientation mode: "+message.orientation_mode);break}var localTfClient=new ROSLIB.TFClient({ros:handle.tfClient.ros,fixedFrame:handle.message.header.frame_id});message.markers.forEach(function(markerMsg){var addMarker=function(transformMsg){var markerHelper=new ROS3D.Marker({message:markerMsg,path:that.path,loader:that.loader});if(transformMsg!==null){var newPose=new ROSLIB.Pose({position:markerHelper.position,orientation:markerHelper.quaternion});newPose.applyTransform(new ROSLIB.Transform(transformMsg));markerHelper.setPose(newPose);markerHelper.updateMatrixWorld();localTfClient.unsubscribe(markerMsg.header.frame_id)}that.add(markerHelper)};if(markerMsg.header.frame_id!==""){localTfClient.subscribe(markerMsg.header.frame_id,addMarker)}else{addMarker(null)}})};ROS3D.InteractiveMarkerControl.prototype.__proto__=THREE.Object3D.prototype;ROS3D.InteractiveMarkerHandle=function(options){options=options||{};this.message=options.message;this.feedbackTopic=options.feedbackTopic;this.tfClient=options.tfClient;this.menuFontSize=options.menuFontSize||"0.8em";this.name=this.message.name;this.header=this.message.header;this.controls=this.message.controls;this.menuEntries=this.message.menu_entries;this.dragging=false;this.timeoutHandle=null;this.tfTransform=new ROSLIB.Transform;this.pose=new ROSLIB.Pose;this.setPoseFromServer(this.message.pose)};ROS3D.InteractiveMarkerHandle.prototype.__proto__=EventEmitter2.prototype;ROS3D.InteractiveMarkerHandle.prototype.subscribeTf=function(){if(this.message.header.stamp.secs===0&&this.message.header.stamp.nsecs===0){this.tfClient.subscribe(this.message.header.frame_id,this.tfUpdate.bind(this))}};ROS3D.InteractiveMarkerHandle.prototype.emitServerPoseUpdate=function(){var poseTransformed=new ROSLIB.Pose(this.pose);poseTransformed.applyTransform(this.tfTransform);this.emit("pose",poseTransformed)};ROS3D.InteractiveMarkerHandle.prototype.setPoseFromServer=function(poseMsg){this.pose=new ROSLIB.Pose(poseMsg);this.emitServerPoseUpdate()};ROS3D.InteractiveMarkerHandle.prototype.tfUpdate=function(transformMsg){this.tfTransform=new ROSLIB.Transform(transformMsg);this.emitServerPoseUpdate()};ROS3D.InteractiveMarkerHandle.prototype.setPoseFromClient=function(event){this.pose=new ROSLIB.Pose(event);var inv=this.tfTransform.clone();inv.rotation.invert();inv.translation.multiplyQuaternion(inv.rotation);inv.translation.x*=-1;inv.translation.y*=-1;inv.translation.z*=-1;this.pose.applyTransform(inv);this.sendFeedback(ROS3D.INTERACTIVE_MARKER_POSE_UPDATE,undefined,0,event.controlName);if(this.dragging){if(this.timeoutHandle){clearTimeout(this.timeoutHandle)}this.timeoutHandle=setTimeout(this.setPoseFromClient.bind(this,event),250)}};ROS3D.InteractiveMarkerHandle.prototype.onButtonClick=function(event){this.sendFeedback(ROS3D.INTERACTIVE_MARKER_BUTTON_CLICK,event.clickPosition,0,event.controlName)};ROS3D.InteractiveMarkerHandle.prototype.onMouseDown=function(event){this.sendFeedback(ROS3D.INTERACTIVE_MARKER_MOUSE_DOWN,event.clickPosition,0,event.controlName);this.dragging=true};ROS3D.InteractiveMarkerHandle.prototype.onMouseUp=function(event){this.sendFeedback(ROS3D.INTERACTIVE_MARKER_MOUSE_UP,event.clickPosition,0,event.controlName);this.dragging=false;if(this.timeoutHandle){clearTimeout(this.timeoutHandle)}};ROS3D.InteractiveMarkerHandle.prototype.onMenuSelect=function(event){this.sendFeedback(ROS3D.INTERACTIVE_MARKER_MENU_SELECT,undefined,event.id,event.controlName)};ROS3D.InteractiveMarkerHandle.prototype.sendFeedback=function(eventType,clickPosition,menuEntryID,controlName){var mousePointValid=clickPosition!==undefined;clickPosition=clickPosition||{x:0,y:0,z:0};var feedback={header:this.header,client_id:this.clientID,marker_name:this.name,control_name:controlName,event_type:eventType,pose:this.pose,mouse_point:clickPosition,mouse_point_valid:mousePointValid,menu_entry_id:menuEntryID};this.feedbackTopic.publish(feedback)};ROS3D.InteractiveMarkerMenu=function(options){var that=this;options=options||{};var menuEntries=options.menuEntries;var className=options.className||"default-interactive-marker-menu";var entryClassName=options.entryClassName||"default-interactive-marker-menu-entry";var overlayClassName=options.overlayClassName||"default-interactive-marker-overlay";var menuFontSize=options.menuFontSize||"0.8em";var allMenus=[];allMenus[0]={children:[]};THREE.EventDispatcher.call(this);if(document.getElementById("default-interactive-marker-menu-css")===null){var style=document.createElement("style");style.id="default-interactive-marker-menu-css";style.type="text/css";style.innerHTML=".default-interactive-marker-menu {"+"background-color: #444444;"+"border: 1px solid #888888;"+"border: 1px solid #888888;"+"padding: 0px 0px 0px 0px;"+"color: #FFFFFF;"+"font-family: sans-serif;"+"font-size: "+menuFontSize+";"+"z-index: 1002;"+"}"+".default-interactive-marker-menu ul {"+"padding: 0px 0px 5px 0px;"+"margin: 0px;"+"list-style-type: none;"+"}"+".default-interactive-marker-menu ul li div {"+"-webkit-touch-callout: none;"+"-webkit-user-select: none;"+"-khtml-user-select: none;"+"-moz-user-select: none;"+"-ms-user-select: none;"+"user-select: none;"+"cursor: default;"+"padding: 3px 10px 3px 10px;"+"}"+".default-interactive-marker-menu-entry:hover {"+"  background-color: #666666;"+"  cursor: pointer;"+"}"+".default-interactive-marker-menu ul ul {"+"  font-style: italic;"+"  padding-left: 10px;"+"}"+".default-interactive-marker-overlay {"+"  position: absolute;"+"  top: 0%;"+"  left: 0%;"+"  width: 100%;"+"  height: 100%;"+"  background-color: black;"+"  z-index: 1001;"+"  -moz-opacity: 0.0;"+"  opacity: .0;"+"  filter: alpha(opacity = 0);"+"}";document.getElementsByTagName("head")[0].appendChild(style)}this.menuDomElem=document.createElement("div");this.menuDomElem.style.position="absolute";this.menuDomElem.className=className;this.menuDomElem.addEventListener("contextmenu",function(event){event.preventDefault()});this.overlayDomElem=document.createElement("div");this.overlayDomElem.className=overlayClassName;this.hideListener=this.hide.bind(this);this.overlayDomElem.addEventListener("contextmenu",this.hideListener);this.overlayDomElem.addEventListener("click",this.hideListener);this.overlayDomElem.addEventListener("touchstart",this.hideListener);var i,entry,id;for(i=0;i<menuEntries.length;i++){entry=menuEntries[i];id=entry.id;allMenus[id]={title:entry.title,id:id,children:[]}}for(i=0;i<menuEntries.length;i++){entry=menuEntries[i];id=entry.id;var menu=allMenus[id];var parent=allMenus[entry.parent_id];parent.children.push(menu)}function emitMenuSelect(menuEntry,domEvent){this.dispatchEvent({type:"menu-select",domEvent:domEvent,id:menuEntry.id,controlName:this.controlName});this.hide(domEvent)}function makeUl(parentDomElem,parentMenu){var ulElem=document.createElement("ul");parentDomElem.appendChild(ulElem);var children=parentMenu.children;for(var i=0;i<children.length;i++){var liElem=document.createElement("li");var divElem=document.createElement("div");divElem.appendChild(document.createTextNode(children[i].title));ulElem.appendChild(liElem);liElem.appendChild(divElem);if(children[i].children.length>0){makeUl(liElem,children[i]);divElem.addEventListener("click",that.hide.bind(that));divElem.addEventListener("touchstart",that.hide.bind(that))}else{divElem.addEventListener("click",emitMenuSelect.bind(that,children[i]));divElem.addEventListener("touchstart",emitMenuSelect.bind(that,children[i]));divElem.className="default-interactive-marker-menu-entry"}}}makeUl(this.menuDomElem,allMenus[0])};ROS3D.InteractiveMarkerMenu.prototype.show=function(control,event){if(event&&event.preventDefault){event.preventDefault()}this.controlName=control.name;if(event.domEvent.changedTouches!==undefined){this.menuDomElem.style.left=event.domEvent.changedTouches[0].pageX+"px";this.menuDomElem.style.top=event.domEvent.changedTouches[0].pageY+"px"}else{this.menuDomElem.style.left=event.domEvent.clientX+"px";this.menuDomElem.style.top=event.domEvent.clientY+"px"}document.body.appendChild(this.overlayDomElem);document.body.appendChild(this.menuDomElem)};ROS3D.InteractiveMarkerMenu.prototype.hide=function(event){if(event&&event.preventDefault){event.preventDefault()}document.body.removeChild(this.overlayDomElem);document.body.removeChild(this.menuDomElem)};THREE.EventDispatcher.prototype.apply(ROS3D.InteractiveMarkerMenu.prototype);ROS3D.Marker=function(options){options=options||{};var path=options.path||"/";var message=options.message;var loader=options.loader||ROS3D.COLLADA_LOADER_2;if(path.substr(path.length-1)!=="/"){path+="/"}THREE.Object3D.call(this);if(message.scale){this.msgScale=[message.scale.x,message.scale.y,message.scale.z]}else{this.msgScale=[1,1,1]}this.msgColor=message.color;this.msgMesh=undefined;this.setPose(message.pose);var colorMaterial=ROS3D.makeColorMaterial(this.msgColor.r,this.msgColor.g,this.msgColor.b,this.msgColor.a);switch(message.type){case ROS3D.MARKER_ARROW:var len=message.scale.x;var headLength=len*.23;var headDiameter=message.scale.y;var shaftDiameter=headDiameter*.5;var direction,p1=null;if(message.points.length===2){p1=new THREE.Vector3(message.points[0].x,message.points[0].y,message.points[0].z);var p2=new THREE.Vector3(message.points[1].x,message.points[1].y,message.points[1].z);direction=p1.clone().negate().add(p2);len=direction.length();headDiameter=message.scale.y;shaftDiameter=message.scale.x;if(message.scale.z!==0){headLength=message.scale.z}}this.add(new ROS3D.Arrow({direction:direction,origin:p1,length:len,headLength:headLength,shaftDiameter:shaftDiameter,headDiameter:headDiameter,material:colorMaterial}));break;case ROS3D.MARKER_CUBE:var cubeGeom=new THREE.CubeGeometry(message.scale.x,message.scale.y,message.scale.z);this.add(new THREE.Mesh(cubeGeom,colorMaterial));break;case ROS3D.MARKER_SPHERE:var sphereGeom=new THREE.SphereGeometry(.5);var sphereMesh=new THREE.Mesh(sphereGeom,colorMaterial);sphereMesh.scale.x=message.scale.x;sphereMesh.scale.y=message.scale.y;sphereMesh.scale.z=message.scale.z;this.add(sphereMesh);break;case ROS3D.MARKER_CYLINDER:var cylinderGeom=new THREE.CylinderGeometry(.5,.5,1,16,1,false);var cylinderMesh=new THREE.Mesh(cylinderGeom,colorMaterial);cylinderMesh.quaternion.setFromAxisAngle(new THREE.Vector3(1,0,0),Math.PI*.5);cylinderMesh.scale=new THREE.Vector3(message.scale.x,message.scale.z,message.scale.y);this.add(cylinderMesh);break;case ROS3D.MARKER_LINE_STRIP:var lineStripGeom=new THREE.Geometry;var lineStripMaterial=new THREE.LineBasicMaterial({size:message.scale.x});var j;for(j=0;j<message.points.length;j++){var pt=new THREE.Vector3;pt.x=message.points[j].x;pt.y=message.points[j].y;pt.z=message.points[j].z;lineStripGeom.vertices.push(pt)}if(message.colors.length===message.points.length){lineStripMaterial.vertexColors=true;for(j=0;j<message.points.length;j++){var clr=new THREE.Color;clr.setRGB(message.colors[j].r,message.colors[j].g,message.colors[j].b);lineStripGeom.colors.push(clr)}}else{lineStripMaterial.color.setRGB(message.color.r,message.color.g,message.color.b)}this.add(new THREE.Line(lineStripGeom,lineStripMaterial));break;case ROS3D.MARKER_LINE_LIST:var lineListGeom=new THREE.Geometry;var lineListMaterial=new THREE.LineBasicMaterial({size:message.scale.x});var k;for(k=0;k<message.points.length;k++){var v=new THREE.Vector3;v.x=message.points[k].x;v.y=message.points[k].y;v.z=message.points[k].z;lineListGeom.vertices.push(v)}if(message.colors.length===message.points.length){lineListMaterial.vertexColors=true;for(k=0;k<message.points.length;k++){var c=new THREE.Color;c.setRGB(message.colors[k].r,message.colors[k].g,message.colors[k].b);lineListGeom.colors.push(c)}}else{lineListMaterial.color.setRGB(message.color.r,message.color.g,message.color.b)}this.add(new THREE.Line(lineListGeom,lineListMaterial,THREE.LinePieces));break;case ROS3D.MARKER_CUBE_LIST:var object=new THREE.Object3D;var numPoints=message.points.length;var createColors=numPoints===message.colors.length;var stepSize=Math.ceil(numPoints/1250);var p,cube,curColor,newMesh;for(p=0;p<numPoints;p+=stepSize){cube=new THREE.CubeGeometry(message.scale.x,message.scale.y,message.scale.z);if(createColors){curColor=ROS3D.makeColorMaterial(message.colors[p].r,message.colors[p].g,message.colors[p].b,message.colors[p].a)}else{curColor=colorMaterial}newMesh=new THREE.Mesh(cube,curColor);newMesh.position.x=message.points[p].x;newMesh.position.y=message.points[p].y;newMesh.position.z=message.points[p].z;object.add(newMesh)}this.add(object);break;case ROS3D.MARKER_SPHERE_LIST:case ROS3D.MARKER_POINTS:var geometry=new THREE.Geometry;var material=new THREE.ParticleBasicMaterial({size:message.scale.x});var i;for(i=0;i<message.points.length;i++){var vertex=new THREE.Vector3;vertex.x=message.points[i].x;vertex.y=message.points[i].y;vertex.z=message.points[i].z;geometry.vertices.push(vertex)}if(message.colors.length===message.points.length){material.vertexColors=true;for(i=0;i<message.points.length;i++){var color=new THREE.Color;color.setRGB(message.colors[i].r,message.colors[i].g,message.colors[i].b);geometry.colors.push(color)}}else{material.color.setRGB(message.color.r,message.color.g,message.color.b)}this.add(new THREE.ParticleSystem(geometry,material));break;case ROS3D.MARKER_TEXT_VIEW_FACING:if(message.text.length>0){var textColor=this.msgColor;var canvas=document.createElement("canvas");var context=canvas.getContext("2d");var textHeight=100;var fontString="normal "+textHeight+"px sans-serif";context.font=fontString;var metrics=context.measureText(message.text);var textWidth=metrics.width;canvas.width=textWidth;canvas.height=1.5*textHeight;context.font=fontString;context.fillStyle="rgba("+textColor.r+", "+textColor.g+", "+textColor.b+", "+textColor.a+")";context.textAlign="left";context.textBaseline="middle";context.fillText(message.text,0,canvas.height/2);var texture=new THREE.Texture(canvas);texture.needsUpdate=true;var spriteMaterial=new THREE.SpriteMaterial({map:texture,useScreenCoordinates:false});var sprite=new THREE.Sprite(spriteMaterial);var textSize=message.scale.x;sprite.scale.set(textWidth/canvas.height*textSize,textSize,1);this.add(sprite)}break;case ROS3D.MARKER_MESH_RESOURCE:var meshColorMaterial=null;if(message.color.r!==0||message.color.g!==0||message.color.b!==0||message.color.a!==0){meshColorMaterial=colorMaterial}this.msgMesh=message.mesh_resource.substr(10);var meshResource=new ROS3D.MeshResource({path:path,resource:this.msgMesh,material:meshColorMaterial,loader:loader});this.add(meshResource);break;case ROS3D.MARKER_TRIANGLE_LIST:var tri=new ROS3D.TriangleList({material:colorMaterial,vertices:message.points,colors:message.colors});tri.scale=new THREE.Vector3(message.scale.x,message.scale.y,message.scale.z);this.add(tri);break;default:console.error("Currently unsupported marker type: "+message.type);break}};ROS3D.Marker.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Marker.prototype.setPose=function(pose){this.position.x=pose.position.x;this.position.y=pose.position.y;this.position.z=pose.position.z;this.quaternion=new THREE.Quaternion(pose.orientation.x,pose.orientation.y,pose.orientation.z,pose.orientation.w);this.quaternion.normalize();this.updateMatrixWorld()};ROS3D.Marker.prototype.update=function(message){this.setPose(message.pose);if(message.color.r!==this.msgColor.r||message.color.g!==this.msgColor.g||message.color.b!==this.msgColor.b||message.color.a!==this.msgColor.a){var colorMaterial=ROS3D.makeColorMaterial(message.color.r,message.color.g,message.color.b,message.color.a);switch(message.type){case ROS3D.MARKER_LINE_STRIP:case ROS3D.MARKER_LINE_LIST:case ROS3D.MARKER_POINTS:break;case ROS3D.MARKER_ARROW:case ROS3D.MARKER_CUBE:case ROS3D.MARKER_SPHERE:case ROS3D.MARKER_CYLINDER:case ROS3D.MARKER_TRIANGLE_LIST:case ROS3D.MARKER_TEXT_VIEW_FACING:this.traverse(function(child){if(child instanceof THREE.Mesh){child.material=colorMaterial}});break;case ROS3D.MARKER_MESH_RESOURCE:var meshColorMaterial=null;if(message.color.r!==0||message.color.g!==0||message.color.b!==0||message.color.a!==0){meshColorMaterial=this.colorMaterial}this.traverse(function(child){if(child instanceof THREE.Mesh){child.material=meshColorMaterial}});break;case ROS3D.MARKER_CUBE_LIST:case ROS3D.MARKER_SPHERE_LIST:return false;default:return false}this.msgColor=message.color}var scaleChanged=Math.abs(this.msgScale[0]-message.scale.x)>1e-6||Math.abs(this.msgScale[1]-message.scale.y)>1e-6||Math.abs(this.msgScale[2]-message.scale.z)>1e-6;this.msgScale=[message.scale.x,message.scale.y,message.scale.z];switch(message.type){case ROS3D.MARKER_CUBE:case ROS3D.MARKER_SPHERE:case ROS3D.MARKER_CYLINDER:if(scaleChanged){return false}break;case ROS3D.MARKER_TEXT_VIEW_FACING:if(scaleChanged||this.text!==message.text){return false}break;case ROS3D.MARKER_MESH_RESOURCE:var meshResource=message.mesh_resource.substr(10);if(meshResource!==this.msgMesh){return false}if(scaleChanged){return false}break;case ROS3D.MARKER_ARROW:case ROS3D.MARKER_LINE_STRIP:case ROS3D.MARKER_LINE_LIST:case ROS3D.MARKER_CUBE_LIST:case ROS3D.MARKER_SPHERE_LIST:case ROS3D.MARKER_POINTS:case ROS3D.MARKER_TRIANGLE_LIST:return false;default:break}return true};ROS3D.Marker.prototype.dispose=function(){this.children.forEach(function(element){if(element instanceof ROS3D.MeshResource){element.children.forEach(function(scene){if(scene.material!==undefined){scene.material.dispose()}scene.children.forEach(function(mesh){if(mesh.geometry!==undefined){mesh.geometry.dispose()}if(mesh.material!==undefined){mesh.material.dispose()}scene.remove(mesh)});element.remove(scene)})}else{if(element.geometry!==undefined){element.geometry.dispose()}if(element.material!==undefined){element.material.dispose()}}element.parent.remove(element)})};ROS3D.MarkerArrayClient=function(options){var that=this;options=options||{};var ros=options.ros;var topic=options.topic;this.tfClient=options.tfClient;this.rootObject=options.rootObject||new THREE.Object3D;this.path=options.path||"/";this.loader=options.loader||ROS3D.COLLADA_LOADER_2;this.markers={};var arrayTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"visualization_msgs/MarkerArray",compression:"png"});arrayTopic.subscribe(function(arrayMessage){arrayMessage.markers.forEach(function(message){if(message.action===0){var updated=false;if(message.ns+message.id in that.markers){updated=that.markers[message.ns+message.id].children[0].update(message);if(!updated){that.rootObject.remove(that.markers[message.ns+message.id])}}if(!updated){var newMarker=new ROS3D.Marker({message:message,path:that.path,loader:that.loader});that.markers[message.ns+message.id]=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:newMarker});that.rootObject.add(that.markers[message.ns+message.id])}}else if(message.action===1){console.warn('Received marker message with deprecated action identifier "1"')}else if(message.action===2){that.rootObject.remove(that.markers[message.ns+message.id]);delete that.markers[message.ns+message.id]}else if(message.action===3){for(var m in that.markers){that.rootObject.remove(m)}that.markers={}}else{console.warn('Received marker message with unknown action identifier "'+message.action+'"')}});that.emit("change")})};ROS3D.MarkerArrayClient.prototype.__proto__=EventEmitter2.prototype;ROS3D.MarkerClient=function(options){var that=this;options=options||{};var ros=options.ros;var topic=options.topic;this.tfClient=options.tfClient;this.rootObject=options.rootObject||new THREE.Object3D;this.path=options.path||"/";this.loader=options.loader||ROS3D.COLLADA_LOADER_2;this.markers={};var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"visualization_msgs/Marker",compression:"png"});rosTopic.subscribe(function(message){var newMarker=new ROS3D.Marker({message:message,path:that.path,loader:that.loader});that.rootObject.remove(that.markers[message.ns+message.id]);that.markers[message.ns+message.id]=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:newMarker});that.rootObject.add(that.markers[message.ns+message.id]);that.emit("change")})};ROS3D.MarkerClient.prototype.__proto__=EventEmitter2.prototype;ROS3D.Arrow=function(options){options=options||{};var origin=options.origin||new THREE.Vector3(0,0,0);var direction=options.direction||new THREE.Vector3(1,0,0);var length=options.length||1;var headLength=options.headLength||.2;var shaftDiameter=options.shaftDiameter||.05;var headDiameter=options.headDiameter||.1;var material=options.material||new THREE.MeshBasicMaterial;var shaftLength=length-headLength;var geometry=new THREE.CylinderGeometry(shaftDiameter*.5,shaftDiameter*.5,shaftLength,12,1);var m=new THREE.Matrix4;m.setPosition(new THREE.Vector3(0,shaftLength*.5,0));geometry.applyMatrix(m);var coneGeometry=new THREE.CylinderGeometry(0,headDiameter*.5,headLength,12,1);m.setPosition(new THREE.Vector3(0,shaftLength+headLength*.5,0));coneGeometry.applyMatrix(m);THREE.GeometryUtils.merge(geometry,coneGeometry);THREE.Mesh.call(this,geometry,material);this.position=origin;this.setDirection(direction)};ROS3D.Arrow.prototype.__proto__=THREE.Mesh.prototype;ROS3D.Arrow.prototype.setDirection=function(direction){var axis=new THREE.Vector3(0,1,0).cross(direction);var radians=Math.acos(new THREE.Vector3(0,1,0).dot(direction.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(axis.normalize(),radians);this.rotation.setFromRotationMatrix(this.matrix,this.rotation.order)};ROS3D.Arrow.prototype.setLength=function(length){this.scale.set(length,length,length)};ROS3D.Arrow.prototype.setColor=function(hex){this.geometry.material.color.setHex(hex)};ROS3D.Axes=function(options){var that=this;options=options||{};var shaftRadius=options.shaftRadius||.008;var headRadius=options.headRadius||.023;var headLength=options.headLength||.1;THREE.Object3D.call(this);this.lineGeom=new THREE.CylinderGeometry(shaftRadius,shaftRadius,1-headLength);this.headGeom=new THREE.CylinderGeometry(0,headRadius,headLength);function addAxis(axis){var color=new THREE.Color;color.setRGB(axis.x,axis.y,axis.z);var material=new THREE.MeshBasicMaterial({color:color.getHex()});var rotAxis=new THREE.Vector3;rotAxis.crossVectors(axis,new THREE.Vector3(0,-1,0));var rot=new THREE.Quaternion;rot.setFromAxisAngle(rotAxis,.5*Math.PI);var arrow=new THREE.Mesh(that.headGeom,material);arrow.position=axis.clone();arrow.position.multiplyScalar(.95);arrow.quaternion=rot;arrow.updateMatrix();that.add(arrow);var line=new THREE.Mesh(that.lineGeom,material);line.position=axis.clone();line.position.multiplyScalar(.45);line.quaternion=rot;line.updateMatrix();that.add(line)}addAxis(new THREE.Vector3(1,0,0));addAxis(new THREE.Vector3(0,1,0));addAxis(new THREE.Vector3(0,0,1))};ROS3D.Axes.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Grid=function(options){options=options||{};var num_cells=options.num_cells||10;var color=options.color||"#cccccc";var lineWidth=options.lineWidth||1;var cellSize=options.cellSize||1;THREE.Object3D.call(this);var material=new THREE.LineBasicMaterial({color:color,linewidth:lineWidth});for(var i=0;i<=num_cells;++i){var edge=cellSize*num_cells/2;var position=edge-i*cellSize;var geometryH=new THREE.Geometry;geometryH.vertices.push(new THREE.Vector3(-edge,position,0),new THREE.Vector3(edge,position,0));var geometryV=new THREE.Geometry;geometryV.vertices.push(new THREE.Vector3(position,-edge,0),new THREE.Vector3(position,edge,0));this.add(new THREE.Line(geometryH,material));this.add(new THREE.Line(geometryV,material))}};ROS3D.Grid.prototype.__proto__=THREE.Object3D.prototype;ROS3D.MeshResource=function(options){var that=this;options=options||{};var path=options.path||"/";var resource=options.resource;var material=options.material||null;this.warnings=options.warnings;var loaderType=options.loader||ROS3D.COLLADA_LOADER_2;THREE.Object3D.call(this);if(path.substr(path.length-1)!=="/"){this.path+="/"}var uri=path+resource;var fileType=uri.substr(-4).toLowerCase();var loader;if(fileType===".dae"){if(loaderType===ROS3D.COLLADA_LOADER){loader=new THREE.ColladaLoader}else{loader=new ColladaLoader2}loader.log=function(message){if(that.warnings){console.warn(message)}};loader.load(uri,function colladaReady(collada){if(loaderType===ROS3D.COLLADA_LOADER_2&&collada.dae.asset.unit){var scale=collada.dae.asset.unit;collada.scene.scale=new THREE.Vector3(scale,scale,scale)}if(material!==null){var setMaterial=function(node,material){if(typeof node.material==="undefined"){node.material=material}if(node.children){for(var i=0;i<node.children.length;i++){setMaterial(node.children[i],material)}}};setMaterial(collada.scene,material)}that.add(collada.scene)})}else if(fileType===".stl"){loader=new THREE.STLLoader;{loader.load(uri,function(geometry){geometry.computeFaceNormals();var mesh;if(material!==null){mesh=new THREE.Mesh(geometry,material)}else{mesh=new THREE.Mesh(geometry,new THREE.MeshBasicMaterial({color:10066329}))}that.add(mesh)})}}};ROS3D.MeshResource.prototype.__proto__=THREE.Object3D.prototype;ROS3D.TriangleList=function(options){options=options||{};var material=options.material||new THREE.MeshBasicMaterial;var vertices=options.vertices;var colors=options.colors;THREE.Object3D.call(this);material.side=THREE.DoubleSide;var geometry=new THREE.Geometry;for(i=0;i<vertices.length;i++){geometry.vertices.push(new THREE.Vector3(vertices[i].x,vertices[i].y,vertices[i].z))}var i,j;if(colors.length===vertices.length){
for(i=0;i<vertices.length;i+=3){var faceVert=new THREE.Face3(i,i+1,i+2);for(j=i*3;j<i*3+3;i++){var color=new THREE.Color;color.setRGB(colors[i].r,colors[i].g,colors[i].b);faceVert.vertexColors.push(color)}geometry.faces.push(face)}material.vertexColors=THREE.VertexColors}else if(colors.length===vertices.length/3){for(i=0;i<vertices.length;i+=3){var faceTri=new THREE.Face3(i,i+1,i+2);faceTri.color.setRGB(colors[i/3].r,colors[i/3].g,colors[i/3].b);geometry.faces.push(faceTri)}material.vertexColors=THREE.FaceColors}else{for(i=0;i<vertices.length;i+=3){var face=new THREE.Face3(i,i+1,i+2);geometry.faces.push(face)}}geometry.computeBoundingBox();geometry.computeBoundingSphere();geometry.computeCentroids();geometry.computeFaceNormals();this.add(new THREE.Mesh(geometry,material))};ROS3D.TriangleList.prototype.__proto__=THREE.Object3D.prototype;ROS3D.TriangleList.prototype.setColor=function(hex){this.mesh.material.color.setHex(hex)};ROS3D.OccupancyGrid=function(options){options=options||{};var message=options.message;var width=message.info.width;var height=message.info.height;var geom=new THREE.PlaneGeometry(width,height);var canvas=document.createElement("canvas");canvas.width=width;canvas.height=height;var context=canvas.getContext("2d");var imageData=context.createImageData(width,height);for(var row=0;row<height;row++){for(var col=0;col<width;col++){var mapI=col+(height-row-1)*width;var data=message.data[mapI];var val;if(data===100){val=0}else if(data===0){val=255}else{val=127}var i=(col+row*width)*4;imageData.data[i]=val;imageData.data[++i]=val;imageData.data[++i]=val;imageData.data[++i]=255}}context.putImageData(imageData,0,0);var texture=new THREE.Texture(canvas);texture.needsUpdate=true;var material=new THREE.MeshBasicMaterial({map:texture});material.side=THREE.DoubleSide;THREE.Mesh.call(this,geom,material);this.useQuaternion=true;this.quaternion=message.info.origin.orientation;this.position.x=width*message.info.resolution/2+message.info.origin.position.x;this.position.y=height*message.info.resolution/2+message.info.origin.position.y;this.position.z=message.info.origin.position.z;this.scale.x=message.info.resolution;this.scale.y=message.info.resolution};ROS3D.OccupancyGrid.prototype.__proto__=THREE.Mesh.prototype;ROS3D.OccupancyGridClient=function(options){var that=this;options=options||{};var ros=options.ros;var topic=options.topic||"/map";this.continuous=options.continuous;this.tfClient=options.tfClient;this.rootObject=options.rootObject||new THREE.Object3D;this.currentGrid=null;var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"nav_msgs/OccupancyGrid",compression:"png"});rosTopic.subscribe(function(message){if(that.currentGrid){that.rootObject.remove(that.currentGrid)}var newGrid=new ROS3D.OccupancyGrid({message:message});if(that.tfClient){that.currentGrid=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:newGrid})}else{that.currentGrid=newGrid}that.rootObject.add(that.currentGrid);that.emit("change");if(!that.continuous){rosTopic.unsubscribe()}})};ROS3D.OccupancyGridClient.prototype.__proto__=EventEmitter2.prototype;ROS3D.Odometry=function(options){this.options=options||{};var ros=options.ros;var topic=options.topic||"/particlecloud";this.tfClient=options.tfClient;this.color=options.color||13369599;this.length=options.length||1;this.rootObject=options.rootObject||new THREE.Object3D;this.keep=options.keep||1;var that=this;THREE.Object3D.call(this);this.sns=[];var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"nav_msgs/Odometry"});rosTopic.subscribe(function(message){if(that.sns.length>=that.keep){that.rootObject.remove(that.sns[0]);that.sns.shift()}that.options.origin=new THREE.Vector3(message.pose.pose.position.x,message.pose.pose.position.y,message.pose.pose.position.z);var rot=new THREE.Quaternion(message.pose.pose.orientation.x,message.pose.pose.orientation.y,message.pose.pose.orientation.z,message.pose.pose.orientation.w);that.options.direction=new THREE.Vector3(1,0,0);that.options.direction.applyQuaternion(rot);that.options.material=new THREE.MeshBasicMaterial({color:that.color});var arrow=new ROS3D.Arrow(that.options);that.sns.push(new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:arrow}));that.rootObject.add(that.sns[that.sns.length-1])})};ROS3D.Odometry.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Path=function(options){options=options||{};var ros=options.ros;var topic=options.topic||"/path";this.tfClient=options.tfClient;this.color=options.color||13369599;this.rootObject=options.rootObject||new THREE.Object3D;var that=this;THREE.Object3D.call(this);this.sn=null;this.line=null;var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"nav_msgs/Path"});rosTopic.subscribe(function(message){if(that.sn!==null){that.rootObject.remove(that.sn)}var lineGeometry=new THREE.Geometry;for(var i=0;i<message.poses.length;i++){var v3=new THREE.Vector3(message.poses[i].pose.position.x,message.poses[i].pose.position.y,message.poses[i].pose.position.z);lineGeometry.vertices.push(v3)}lineGeometry.computeLineDistances();var lineMaterial=new THREE.LineBasicMaterial({color:that.color});var line=new THREE.Line(lineGeometry,lineMaterial);that.sn=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:line});that.rootObject.add(that.sn)})};ROS3D.Path.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Point=function(options){this.options=options||{};var ros=options.ros;var topic=options.topic||"/point";this.tfClient=options.tfClient;this.color=options.color||13369599;this.rootObject=options.rootObject||new THREE.Object3D;this.radius=options.radius||.2;var that=this;THREE.Object3D.call(this);this.sn=null;var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"geometry_msgs/PointStamped"});rosTopic.subscribe(function(message){if(that.sn!==null){that.rootObject.remove(that.sn)}var sphereGeometry=new THREE.SphereGeometry(that.radius);var sphereMaterial=new THREE.MeshBasicMaterial({color:that.color});var sphere=new THREE.Mesh(sphereGeometry,sphereMaterial);sphere.position.set(message.point.x,message.point.y,message.point.z);that.sn=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:sphere});that.rootObject.add(that.sn)})};ROS3D.Point.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Polygon=function(options){options=options||{};var ros=options.ros;var topic=options.topic||"/path";this.tfClient=options.tfClient;this.color=options.color||13369599;this.rootObject=options.rootObject||new THREE.Object3D;var that=this;THREE.Object3D.call(this);this.sn=null;this.line=null;var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"geometry_msgs/PolygonStamped"});rosTopic.subscribe(function(message){if(that.sn!==null){that.rootObject.remove(that.sn)}var lineGeometry=new THREE.Geometry;var v3;for(var i=0;i<message.polygon.points.length;i++){v3=new THREE.Vector3(message.polygon.points[i].x,message.polygon.points[i].y,message.polygon.points[i].z);lineGeometry.vertices.push(v3)}v3=new THREE.Vector3(message.polygon.points[0].x,message.polygon.points[0].y,message.polygon.points[0].z);lineGeometry.vertices.push(v3);lineGeometry.computeLineDistances();var lineMaterial=new THREE.LineBasicMaterial({color:that.color});var line=new THREE.Line(lineGeometry,lineMaterial);that.sn=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:line});that.rootObject.add(that.sn)})};ROS3D.Polygon.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Pose=function(options){this.options=options||{};var ros=options.ros;var topic=options.topic||"/pose";this.tfClient=options.tfClient;this.color=options.color||13369599;this.rootObject=options.rootObject||new THREE.Object3D;var that=this;THREE.Object3D.call(this);this.sn=null;var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"geometry_msgs/PoseStamped"});rosTopic.subscribe(function(message){if(that.sn!==null){that.rootObject.remove(that.sn)}that.options.origin=new THREE.Vector3(message.pose.position.x,message.pose.position.y,message.pose.position.z);var rot=new THREE.Quaternion(message.pose.orientation.x,message.pose.orientation.y,message.pose.orientation.z,message.pose.orientation.w);that.options.direction=new THREE.Vector3(1,0,0);that.options.direction.applyQuaternion(rot);that.options.material=new THREE.MeshBasicMaterial({color:that.color});var arrow=new ROS3D.Arrow(that.options);that.sn=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:arrow});that.rootObject.add(that.sn)})};ROS3D.Pose.prototype.__proto__=THREE.Object3D.prototype;ROS3D.PoseArray=function(options){this.options=options||{};var ros=options.ros;var topic=options.topic||"/particlecloud";this.tfClient=options.tfClient;this.color=options.color||13369599;this.length=options.length||1;this.rootObject=options.rootObject||new THREE.Object3D;var that=this;THREE.Object3D.call(this);this.sn=null;var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"geometry_msgs/PoseArray"});rosTopic.subscribe(function(message){if(that.sn!==null){that.rootObject.remove(that.sn)}var group=new THREE.Object3D;var line;for(var i=0;i<message.poses.length;i++){var lineGeometry=new THREE.Geometry;var v3=new THREE.Vector3(message.poses[i].position.x,message.poses[i].position.y,message.poses[i].position.z);lineGeometry.vertices.push(v3);var rot=new THREE.Quaternion(message.poses[i].orientation.x,message.poses[i].orientation.y,message.poses[i].orientation.z,message.poses[i].orientation.w);var tip=new THREE.Vector3(that.length,0,0);var side1=new THREE.Vector3(that.length*.8,that.length*.2,0);var side2=new THREE.Vector3(that.length*.8,-that.length*.2,0);tip.applyQuaternion(rot);side1.applyQuaternion(rot);side2.applyQuaternion(rot);lineGeometry.vertices.push(tip.add(v3));lineGeometry.vertices.push(side1.add(v3));lineGeometry.vertices.push(side2.add(v3));lineGeometry.vertices.push(tip);lineGeometry.computeLineDistances();var lineMaterial=new THREE.LineBasicMaterial({color:that.color});line=new THREE.Line(lineGeometry,lineMaterial);group.add(line)}that.sn=new ROS3D.SceneNode({frameID:message.header.frame_id,tfClient:that.tfClient,object:group});that.rootObject.add(that.sn)})};ROS3D.PoseArray.prototype.__proto__=THREE.Object3D.prototype;ROS3D.LaserScan=function(options){options=options||{};var ros=options.ros;var topic=options.topic||"/scan";this.color=options.color||16753920;var that=this;this.particles=new ROS3D.Particles(options);var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"sensor_msgs/LaserScan"});rosTopic.subscribe(function(message){setFrame(that.particles,message.header.frame_id);var n=message.ranges.length;for(var i=0;i<n;i++){var range=message.ranges[i];if(range<message.range_min||range>message.range_max){that.particles.alpha[i]=0}else{var angle=message.angle_min+i*message.angle_increment;that.particles.points[i]=new THREE.Vector3(range*Math.cos(angle),range*Math.sin(angle),0);that.particles.alpha[i]=1}that.particles.colors[i]=new THREE.Color(that.color)}finishedUpdate(that.particles,n)})};ROS3D.LaserScan.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Particles=function(options){options=options||{};this.tfClient=options.tfClient;var texture=options.texture||"https://upload.wikimedia.org/wikipedia/commons/a/a2/Pixel-white.png";var size=options.size||.05;this.max_pts=options.max_pts||1e4;this.first_size=null;this.prev_pts=0;this.rootObject=options.rootObject||new THREE.Object3D;var that=this;THREE.Object3D.call(this);this.vertex_shader=["attribute vec3 customColor;","attribute float alpha;","varying vec3 vColor;","varying float falpha;","void main() ","{","    vColor = customColor; // set color associated to vertex; use later in fragment shader","    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","    falpha = alpha; ","","    // option (1): draw particles at constant size on screen","    // gl_PointSize = size;","    // option (2): scale particles as objects in 3D space","    gl_PointSize = ",size,"* ( 300.0 / length( mvPosition.xyz ) );","    gl_Position = projectionMatrix * mvPosition;","}"].join("\n");this.fragment_shader=["uniform sampler2D texture;","varying vec3 vColor; // colors associated to vertices; assigned by vertex shader","varying float falpha;","void main() ","{","    // calculates a color for the particle","    gl_FragColor = vec4( vColor, falpha );","    // sets particle texture to desired color","    gl_FragColor = gl_FragColor * texture2D( texture, gl_PointCoord );","}"].join("\n");this.geom=new THREE.Geometry;for(var i=0;i<this.max_pts;i++){this.geom.vertices.push(new THREE.Vector3)}var customUniforms={texture:{type:"t",value:THREE.ImageUtils.loadTexture(texture)}};this.attribs={customColor:{type:"c",value:[]},alpha:{type:"f",value:[]}};this.shaderMaterial=new THREE.ShaderMaterial({uniforms:customUniforms,attributes:this.attribs,vertexShader:this.vertex_shader,fragmentShader:this.fragment_shader,transparent:true,alphaTest:.5});this.ps=new THREE.ParticleSystem(this.geom,this.shaderMaterial);this.sn=null;this.points=this.geom.vertices;this.colors=this.attribs.customColor.value;this.alpha=this.attribs.alpha.value};function setFrame(particles,frame){if(particles.sn===null){particles.sn=new ROS3D.SceneNode({frameID:frame,tfClient:particles.tfClient,object:particles.ps});particles.rootObject.add(particles.sn)}}function finishedUpdate(particles,n){if(particles.first_size===null){particles.first_size=n;particles.max_pts=Math.max(particles.max_pts,n)}for(var i=n;i<particles.prev_pts;i++){particles.alpha[i]=0}particles.prev_pts=n;particles.geom.verticesNeedUpdate=true;particles.attribs.customColor.needsUpdate=true;particles.attribs.alpha.needsUpdate=true;if(n>particles.max_pts){throw"Attempted to draw more points than max_pts allows"}}function read_point(msg,index,buffer){var pt=[];var base=msg.point_step*index;var n=4;var ar=new Uint8Array(n);for(var fi=0;fi<msg.fields.length;fi++){var si=base+msg.fields[fi].offset;for(var i=0;i<n;i++){ar[i]=buffer[si+i]}var dv=new DataView(ar.buffer);if(msg.fields[fi].name==="rgb"){pt["rgb"]=dv.getInt32(0,1)}else{pt[msg.fields[fi].name]=dv.getFloat32(0,1)}}return pt}var BASE64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function decode64(x){var a=[],z=0,bits=0;for(var i=0,len=x.length;i<len;i++){z+=BASE64.indexOf(x[i]);bits+=6;if(bits>=8){bits-=8;a.push(z>>bits);z=z&Math.pow(2,bits)-1}z=z<<6}return a}ROS3D.PointCloud2=function(options){options=options||{};var ros=options.ros;var topic=options.topic||"/points";var that=this;this.particles=new ROS3D.Particles(options);var rosTopic=new ROSLIB.Topic({ros:ros,name:topic,messageType:"sensor_msgs/PointCloud2"});rosTopic.subscribe(function(message){setFrame(that.particles,message.header.frame_id);var n=message.height*message.width;var buffer;if(message.data.buffer){buffer=message.data.buffer}else{buffer=decode64(message.data)}for(var i=0;i<n;i++){var pt=read_point(message,i,buffer);that.particles.points[i]=new THREE.Vector3(pt["x"],pt["y"],pt["z"]);that.particles.colors[i]=new THREE.Color(pt["rgb"]);that.particles.alpha[i]=1}finishedUpdate(that.particles,n)})};ROS3D.PointCloud2.prototype.__proto__=THREE.Object3D.prototype;ROS3D.Urdf=function(options){options=options||{};var urdfModel=options.urdfModel;var path=options.path||"/";var tfClient=options.tfClient;var tfPrefix=options.tfPrefix||"";var loader=options.loader||ROS3D.COLLADA_LOADER_2;THREE.Object3D.call(this);var links=urdfModel.links;for(var l in links){var link=links[l];for(var i=0;i<link.visuals.length;i++){var visual=link.visuals[i];if(visual&&visual.geometry){var frameID=tfPrefix+"/"+link.name;var colorMaterial=null;if(visual.material&&visual.material.color){var color=visual.material&&visual.material.color;colorMaterial=ROS3D.makeColorMaterial(color.r,color.g,color.b,color.a)}if(visual.geometry.type===ROSLIB.URDF_MESH){var uri=visual.geometry.filename;var tmpIndex=uri.indexOf("package://");if(tmpIndex!==-1){uri=uri.substr(tmpIndex+"package://".length)}var fileType=uri.substr(-4).toLowerCase();if(fileType===".dae"||fileType===".stl"){var mesh=new ROS3D.MeshResource({path:path,resource:uri,loader:loader,material:colorMaterial});if(link.visuals[i].geometry.scale){mesh.scale=new THREE.Vector3(visual.geometry.scale.x,visual.geometry.scale.y,visual.geometry.scale.z)}var sceneNode=new ROS3D.SceneNode({frameID:frameID,pose:visual.origin,tfClient:tfClient,object:mesh});this.add(sceneNode)}else{console.warn("Could not load geometry mesh: "+uri)}}else{if(!colorMaterial){colorMaterial=ROS3D.makeColorMaterial(0,0,0,1)}var shapeMesh;switch(visual.geometry.type){case ROSLIB.URDF_BOX:var dimension=visual.geometry.dimension;var cube=new THREE.CubeGeometry(dimension.x,dimension.y,dimension.z);shapeMesh=new THREE.Mesh(cube,colorMaterial);break;case ROSLIB.URDF_CYLINDER:var radius=visual.geometry.radius;var length=visual.geometry.length;var cylinder=new THREE.CylinderGeometry(radius,radius,length,16,1,false);shapeMesh=new THREE.Mesh(cylinder,colorMaterial);shapeMesh.quaternion.setFromAxisAngle(new THREE.Vector3(1,0,0),Math.PI*.5);break;case ROSLIB.URDF_SPHERE:var sphere=new THREE.SphereGeometry(visual.geometry.radius,16);shapeMesh=new THREE.Mesh(sphere,colorMaterial);break}var scene=new ROS3D.SceneNode({frameID:frameID,pose:visual.origin,tfClient:tfClient,object:shapeMesh});this.add(scene)}}}}};ROS3D.Urdf.prototype.__proto__=THREE.Object3D.prototype;ROS3D.UrdfClient=function(options){var that=this;options=options||{};var ros=options.ros;var param=options.param||"robot_description";this.path=options.path||"/";this.tfClient=options.tfClient;this.rootObject=options.rootObject||new THREE.Object3D;var tfPrefix=options.tfPrefix||"";var loader=options.loader||ROS3D.COLLADA_LOADER_2;var getParam=new ROSLIB.Param({ros:ros,name:param});getParam.get(function(string){var urdfModel=new ROSLIB.UrdfModel({string:string});that.rootObject.add(new ROS3D.Urdf({urdfModel:urdfModel,path:that.path,tfClient:that.tfClient,tfPrefix:tfPrefix,loader:loader}))})};ROS3D.SceneNode=function(options){options=options||{};var that=this;var tfClient=options.tfClient;var frameID=options.frameID;var object=options.object;this.pose=options.pose||new ROSLIB.Pose;THREE.Object3D.call(this);this.add(object);this.updatePose(this.pose);tfClient.subscribe(frameID,function(msg){var tf=new ROSLIB.Transform(msg);var poseTransformed=new ROSLIB.Pose(that.pose);poseTransformed.applyTransform(tf);that.updatePose(poseTransformed)})};ROS3D.SceneNode.prototype.__proto__=THREE.Object3D.prototype;ROS3D.SceneNode.prototype.updatePose=function(pose){this.position.set(pose.position.x,pose.position.y,pose.position.z);this.quaternion.set(pose.orientation.x,pose.orientation.y,pose.orientation.z,pose.orientation.w);this.updateMatrixWorld(true)};ROS3D.Viewer=function(options){var that=this;options=options||{};var divID=options.divID;var width=options.width;var height=options.height;var background=options.background||"#111111";var antialias=options.antialias;var intensity=options.intensity||.66;var near=options.near||.01;var far=options.far||1e3;var cameraPosition=options.cameraPose||{x:3,y:3,z:3};var cameraZoomSpeed=options.cameraZoomSpeed||.5;this.renderer=new THREE.WebGLRenderer({antialias:antialias});this.renderer.setClearColor(parseInt(background.replace("#","0x"),16),1);this.renderer.sortObjects=false;this.renderer.setSize(width,height);this.renderer.shadowMapEnabled=false;this.renderer.autoClear=false;this.scene=new THREE.Scene;this.camera=new THREE.PerspectiveCamera(40,width/height,near,far);this.camera.position.x=cameraPosition.x;this.camera.position.y=cameraPosition.y;this.camera.position.z=cameraPosition.z;this.cameraControls=new ROS3D.OrbitControls({scene:this.scene,camera:this.camera});this.cameraControls.userZoomSpeed=cameraZoomSpeed;this.scene.add(new THREE.AmbientLight(5592405));this.directionalLight=new THREE.DirectionalLight(16777215,intensity);this.scene.add(this.directionalLight);this.selectableObjects=new THREE.Object3D;this.scene.add(this.selectableObjects);var mouseHandler=new ROS3D.MouseHandler({renderer:this.renderer,camera:this.camera,rootObject:this.selectableObjects,fallbackTarget:this.cameraControls});this.highlighter=new ROS3D.Highlighter({mouseHandler:mouseHandler});function draw(){that.cameraControls.update();that.directionalLight.position=that.camera.localToWorld(new THREE.Vector3(-1,1,0));that.directionalLight.position.normalize();that.renderer.clear(true,true,true);that.renderer.render(that.scene,that.camera);that.highlighter.renderHighlight(that.renderer,that.scene,that.camera);requestAnimationFrame(draw)}document.getElementById(divID).appendChild(this.renderer.domElement);draw()};ROS3D.Viewer.prototype.addObject=function(object,selectable){if(selectable){this.selectableObjects.add(object)}else{this.scene.add(object)}};ROS3D.Viewer.prototype.resize=function(width,height){this.camera.aspect=width/height;this.camera.updateProjectionMatrix();this.renderer.setSize(width,height)};ROS3D.Highlighter=function(options){options=options||{};var mouseHandler=options.mouseHandler;this.hoverObjs=[];mouseHandler.addEventListener("mouseover",this.onMouseOver.bind(this));mouseHandler.addEventListener("mouseout",this.onMouseOut.bind(this))};ROS3D.Highlighter.prototype.onMouseOver=function(event){this.hoverObjs.push(event.currentTarget)};ROS3D.Highlighter.prototype.onMouseOut=function(event){this.hoverObjs.splice(this.hoverObjs.indexOf(event.currentTarget),1)};ROS3D.Highlighter.prototype.getWebglObjects=function(scene,objects,renderList){var objlist=scene.__webglObjects;for(var c=0;c<objects.length;c++){if(objects[c]){for(var o=objlist.length-1;o>=0;o--){if(objlist[o].object===objects[c]){renderList.push(objlist[o]);break}}this.getWebglObjects(scene,objects[c].children,renderList)}}};ROS3D.Highlighter.prototype.renderHighlight=function(renderer,scene,camera){var renderList=[];this.getWebglObjects(scene,this.hoverObjs,renderList);scene.overrideMaterial=new THREE.MeshBasicMaterial({fog:false,opacity:.5,depthTest:true,depthWrite:false,polygonOffset:true,polygonOffsetUnits:-1,side:THREE.DoubleSide});var oldWebglObjects=scene.__webglObjects;scene.__webglObjects=renderList;renderer.render(scene,camera);scene.__webglObjects=oldWebglObjects;scene.overrideMaterial=null};ROS3D.MouseHandler=function(options){THREE.EventDispatcher.call(this);this.renderer=options.renderer;this.camera=options.camera;this.rootObject=options.rootObject;this.fallbackTarget=options.fallbackTarget;this.lastTarget=this.fallbackTarget;this.dragging=false;this.projector=new THREE.Projector;var eventNames=["contextmenu","click","dblclick","mouseout","mousedown","mouseup","mousemove","mousewheel","DOMMouseScroll","touchstart","touchend","touchcancel","touchleave","touchmove"];this.listeners={};eventNames.forEach(function(eventName){this.listeners[eventName]=this.processDomEvent.bind(this);this.renderer.domElement.addEventListener(eventName,this.listeners[eventName],false)},this)};ROS3D.MouseHandler.prototype.processDomEvent=function(domEvent){domEvent.preventDefault();var target=domEvent.target;var rect=target.getBoundingClientRect();var pos_x,pos_y;if(domEvent.type.indexOf("touch")!==-1){pos_x=domEvent.changedTouches[0].clientX;pos_y=domEvent.changedTouches[0].clientY}else{pos_x=domEvent.clientX;pos_y=domEvent.clientY}var left=pos_x-rect.left-target.clientLeft+target.scrollLeft;var top=pos_y-rect.top-target.clientTop+target.scrollTop;var deviceX=left/target.clientWidth*2-1;var deviceY=-top/target.clientHeight*2+1;var vector=new THREE.Vector3(deviceX,deviceY,.5);this.projector.unprojectVector(vector,this.camera);var mouseRaycaster=new THREE.Raycaster(this.camera.position.clone(),vector.sub(this.camera.position).normalize());mouseRaycaster.linePrecision=.001;var mouseRay=mouseRaycaster.ray;var event3D={mousePos:new THREE.Vector2(deviceX,deviceY),mouseRay:mouseRay,domEvent:domEvent,camera:this.camera,intersection:this.lastIntersection};if(domEvent.type==="mouseout"){if(this.dragging){this.notify(this.lastTarget,"mouseup",event3D);this.dragging=false}this.notify(this.lastTarget,"mouseout",event3D);this.lastTarget=null;return}if(domEvent.type==="touchleave"||domEvent.type==="touchend"){if(this.dragging){this.notify(this.lastTarget,"mouseup",event3D);this.dragging=false}this.notify(this.lastTarget,"touchend",event3D);this.lastTarget=null;return}if(this.dragging){this.notify(this.lastTarget,domEvent.type,event3D);if(domEvent.type==="mouseup"&&domEvent.button===2||domEvent.type==="click"||domEvent.type==="touchend"){this.dragging=false}return}target=this.lastTarget;var intersections=[];intersections=mouseRaycaster.intersectObject(this.rootObject,true);if(intersections.length>0){target=intersections[0].object;event3D.intersection=this.lastIntersection=intersections[0]}else{target=this.fallbackTarget}if(target!==this.lastTarget&&domEvent.type.match(/mouse/)){var eventAccepted=this.notify(target,"mouseover",event3D);if(eventAccepted){this.notify(this.lastTarget,"mouseout",event3D)}else{target=this.fallbackTarget;if(target!==this.lastTarget){this.notify(target,"mouseover",event3D);this.notify(this.lastTarget,"mouseout",event3D)}}}if(target!==this.lastTarget&&domEvent.type.match(/touch/)){var toucheventAccepted=this.notify(target,domEvent.type,event3D);if(toucheventAccepted){this.notify(this.lastTarget,"touchleave",event3D);this.notify(this.lastTarget,"touchend",event3D)}else{target=this.fallbackTarget;if(target!==this.lastTarget){this.notify(this.lastTarget,"touchmove",event3D);this.notify(this.lastTarget,"touchend",event3D)}}}this.notify(target,domEvent.type,event3D);if(domEvent.type==="mousedown"||domEvent.type==="touchstart"||domEvent.type==="touchmove"){this.dragging=true}this.lastTarget=target};ROS3D.MouseHandler.prototype.notify=function(target,type,event3D){event3D.type=type;event3D.cancelBubble=false;event3D.stopPropagation=function(){event3D.cancelBubble=true};event3D.currentTarget=target;while(event3D.currentTarget){if(event3D.currentTarget.dispatchEvent&&event3D.currentTarget.dispatchEvent instanceof Function){event3D.currentTarget.dispatchEvent(event3D);if(event3D.cancelBubble){this.dispatchEvent(event3D);return true}}event3D.currentTarget=event3D.currentTarget.parent}return false};THREE.EventDispatcher.prototype.apply(ROS3D.MouseHandler.prototype);ROS3D.OrbitControls=function(options){THREE.EventDispatcher.call(this);var that=this;options=options||{};var scene=options.scene;this.camera=options.camera;this.center=new THREE.Vector3;this.userZoom=true;this.userZoomSpeed=options.userZoomSpeed||1;this.userRotate=true;this.userRotateSpeed=options.userRotateSpeed||1;this.autoRotate=options.autoRotate;this.autoRotateSpeed=options.autoRotateSpeed||2;this.camera.up=new THREE.Vector3(0,0,1);var pixelsPerRound=1800;var touchMoveThreshold=10;var rotateStart=new THREE.Vector2;var rotateEnd=new THREE.Vector2;var rotateDelta=new THREE.Vector2;var zoomStart=new THREE.Vector2;var zoomEnd=new THREE.Vector2;var zoomDelta=new THREE.Vector2;var moveStartCenter=new THREE.Vector3;var moveStartNormal=new THREE.Vector3;var moveStartPosition=new THREE.Vector3;var moveStartIntersection=new THREE.Vector3;var touchStartPosition=new Array(2);var touchMoveVector=new Array(2);this.phiDelta=0;this.thetaDelta=0;this.scale=1;this.lastPosition=new THREE.Vector3;var STATE={NONE:-1,ROTATE:0,ZOOM:1,MOVE:2};var state=STATE.NONE;this.axes=new ROS3D.Axes({shaftRadius:.025,headRadius:.07,headLength:.2});scene.add(this.axes);this.axes.traverse(function(obj){obj.visible=false});function onMouseDown(event3D){var event=event3D.domEvent;event.preventDefault();switch(event.button){case 0:state=STATE.ROTATE;rotateStart.set(event.clientX,event.clientY);break;case 1:state=STATE.MOVE;moveStartNormal=new THREE.Vector3(0,0,1);var rMat=(new THREE.Matrix4).extractRotation(this.camera.matrix);moveStartNormal.applyMatrix4(rMat);moveStartCenter=that.center.clone();moveStartPosition=that.camera.position.clone();moveStartIntersection=intersectViewPlane(event3D.mouseRay,moveStartCenter,moveStartNormal);break;case 2:state=STATE.ZOOM;zoomStart.set(event.clientX,event.clientY);break}this.showAxes()}function onMouseMove(event3D){var event=event3D.domEvent;if(state===STATE.ROTATE){rotateEnd.set(event.clientX,event.clientY);rotateDelta.subVectors(rotateEnd,rotateStart);that.rotateLeft(2*Math.PI*rotateDelta.x/pixelsPerRound*that.userRotateSpeed);that.rotateUp(2*Math.PI*rotateDelta.y/pixelsPerRound*that.userRotateSpeed);rotateStart.copy(rotateEnd);this.showAxes()}else if(state===STATE.ZOOM){zoomEnd.set(event.clientX,event.clientY);zoomDelta.subVectors(zoomEnd,zoomStart);if(zoomDelta.y>0){that.zoomIn()}else{that.zoomOut()}zoomStart.copy(zoomEnd);this.showAxes()}else if(state===STATE.MOVE){var intersection=intersectViewPlane(event3D.mouseRay,that.center,moveStartNormal);if(!intersection){return}var delta=(new THREE.Vector3).subVectors(moveStartIntersection.clone(),intersection.clone());that.center.addVectors(moveStartCenter.clone(),delta.clone());that.camera.position.addVectors(moveStartPosition.clone(),delta.clone());that.update();that.camera.updateMatrixWorld();this.showAxes()}}function intersectViewPlane(mouseRay,planeOrigin,planeNormal){var vector=new THREE.Vector3;var intersection=new THREE.Vector3;vector.subVectors(planeOrigin,mouseRay.origin);var dot=mouseRay.direction.dot(planeNormal);if(Math.abs(dot)<mouseRay.precision){return null}var scalar=planeNormal.dot(vector)/dot;intersection=mouseRay.direction.clone().multiplyScalar(scalar);return intersection}function onMouseUp(event3D){if(!that.userRotate){return}state=STATE.NONE}function onMouseWheel(event3D){if(!that.userZoom){return}var event=event3D.domEvent;var delta;if(typeof event.wheelDelta!=="undefined"){delta=event.wheelDelta}else{delta=-event.detail}if(delta>0){that.zoomIn()}else{that.zoomOut()}this.showAxes()}function onTouchDown(event3D){var event=event3D.domEvent;switch(event.touches.length){case 1:state=STATE.ROTATE;rotateStart.set(event.touches[0].pageX-window.scrollX,event.touches[0].pageY-window.scrollY);break;case 2:state=STATE.NONE;moveStartNormal=new THREE.Vector3(0,0,1);var rMat=(new THREE.Matrix4).extractRotation(this.camera.matrix);moveStartNormal.applyMatrix4(rMat);moveStartCenter=that.center.clone();moveStartPosition=that.camera.position.clone();moveStartIntersection=intersectViewPlane(event3D.mouseRay,moveStartCenter,moveStartNormal);touchStartPosition[0]=new THREE.Vector2(event.touches[0].pageX,event.touches[0].pageY);touchStartPosition[1]=new THREE.Vector2(event.touches[1].pageX,event.touches[1].pageY);touchMoveVector[0]=new THREE.Vector2(0,0);touchMoveVector[1]=new THREE.Vector2(0,0);break}this.showAxes();event.preventDefault()}function onTouchMove(event3D){var event=event3D.domEvent;if(state===STATE.ROTATE){rotateEnd.set(event.touches[0].pageX-window.scrollX,event.touches[0].pageY-window.scrollY);rotateDelta.subVectors(rotateEnd,rotateStart);that.rotateLeft(2*Math.PI*rotateDelta.x/pixelsPerRound*that.userRotateSpeed);that.rotateUp(2*Math.PI*rotateDelta.y/pixelsPerRound*that.userRotateSpeed);rotateStart.copy(rotateEnd);this.showAxes()}else{touchMoveVector[0].set(touchStartPosition[0].x-event.touches[0].pageX,touchStartPosition[0].y-event.touches[0].pageY);touchMoveVector[1].set(touchStartPosition[1].x-event.touches[1].pageX,touchStartPosition[1].y-event.touches[1].pageY);if(touchMoveVector[0].lengthSq()>touchMoveThreshold&&touchMoveVector[1].lengthSq()>touchMoveThreshold){touchStartPosition[0].set(event.touches[0].pageX,event.touches[0].pageY);touchStartPosition[1].set(event.touches[1].pageX,event.touches[1].pageY);if(touchMoveVector[0].dot(touchMoveVector[1])>0&&state!==STATE.ZOOM){state=STATE.MOVE}else if(touchMoveVector[0].dot(touchMoveVector[1])<0&&state!==STATE.MOVE){state=STATE.ZOOM}if(state===STATE.ZOOM){var tmpVector=new THREE.Vector2;tmpVector.subVectors(touchStartPosition[0],touchStartPosition[1]);if(touchMoveVector[0].dot(tmpVector)<0&&touchMoveVector[1].dot(tmpVector)>0){that.zoomOut()}else if(touchMoveVector[0].dot(tmpVector)>0&&touchMoveVector[1].dot(tmpVector)<0){
that.zoomIn()}}}if(state===STATE.MOVE){var intersection=intersectViewPlane(event3D.mouseRay,that.center,moveStartNormal);if(!intersection){return}var delta=(new THREE.Vector3).subVectors(moveStartIntersection.clone(),intersection.clone());that.center.addVectors(moveStartCenter.clone(),delta.clone());that.camera.position.addVectors(moveStartPosition.clone(),delta.clone());that.update();that.camera.updateMatrixWorld()}this.showAxes();event.preventDefault()}}function onTouchEnd(event3D){var event=event3D.domEvent;if(event.touches.length===1&&state!==STATE.ROTATE){state=STATE.ROTATE;rotateStart.set(event.touches[0].pageX-window.scrollX,event.touches[0].pageY-window.scrollY)}}this.addEventListener("mousedown",onMouseDown);this.addEventListener("mouseup",onMouseUp);this.addEventListener("mousemove",onMouseMove);this.addEventListener("touchstart",onTouchDown);this.addEventListener("touchmove",onTouchMove);this.addEventListener("touchend",onTouchEnd);this.addEventListener("mousewheel",onMouseWheel);this.addEventListener("DOMMouseScroll",onMouseWheel)};ROS3D.OrbitControls.prototype.showAxes=function(){var that=this;this.axes.traverse(function(obj){obj.visible=true});if(this.hideTimeout){clearTimeout(this.hideTimeout)}this.hideTimeout=setTimeout(function(){that.axes.traverse(function(obj){obj.visible=false});that.hideTimeout=false},1e3)};ROS3D.OrbitControls.prototype.rotateLeft=function(angle){if(angle===undefined){angle=2*Math.PI/60/60*this.autoRotateSpeed}this.thetaDelta-=angle};ROS3D.OrbitControls.prototype.rotateRight=function(angle){if(angle===undefined){angle=2*Math.PI/60/60*this.autoRotateSpeed}this.thetaDelta+=angle};ROS3D.OrbitControls.prototype.rotateUp=function(angle){if(angle===undefined){angle=2*Math.PI/60/60*this.autoRotateSpeed}this.phiDelta-=angle};ROS3D.OrbitControls.prototype.rotateDown=function(angle){if(angle===undefined){angle=2*Math.PI/60/60*this.autoRotateSpeed}this.phiDelta+=angle};ROS3D.OrbitControls.prototype.zoomIn=function(zoomScale){if(zoomScale===undefined){zoomScale=Math.pow(.95,this.userZoomSpeed)}this.scale/=zoomScale};ROS3D.OrbitControls.prototype.zoomOut=function(zoomScale){if(zoomScale===undefined){zoomScale=Math.pow(.95,this.userZoomSpeed)}this.scale*=zoomScale};ROS3D.OrbitControls.prototype.update=function(){var position=this.camera.position;var offset=position.clone().sub(this.center);var theta=Math.atan2(offset.y,offset.x);var phi=Math.atan2(Math.sqrt(offset.y*offset.y+offset.x*offset.x),offset.z);if(this.autoRotate){this.rotateLeft(2*Math.PI/60/60*this.autoRotateSpeed)}theta+=this.thetaDelta;phi+=this.phiDelta;var eps=1e-6;phi=Math.max(eps,Math.min(Math.PI-eps,phi));var radius=offset.length();offset.y=radius*Math.sin(phi)*Math.sin(theta);offset.z=radius*Math.cos(phi);offset.x=radius*Math.sin(phi)*Math.cos(theta);offset.multiplyScalar(this.scale);position.copy(this.center).add(offset);this.camera.lookAt(this.center);radius=offset.length();this.axes.position=this.center.clone();this.axes.scale.x=this.axes.scale.y=this.axes.scale.z=radius*.05;this.axes.updateMatrixWorld(true);this.thetaDelta=0;this.phiDelta=0;this.scale=1;if(this.lastPosition.distanceTo(this.camera.position)>0){this.dispatchEvent({type:"change"});this.lastPosition.copy(this.camera.position)}};THREE.EventDispatcher.prototype.apply(ROS3D.OrbitControls.prototype);